[marking 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> using TurboFan]
Candidates for inlining (size=1):
  #17:JSCall, frequency: 1
  - size:230, name: _addListener
Inlining _addListener into addListener
Candidates for inlining (size=1):
  #224:JSCall, frequency: 0.215797
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into addListener
Inlining small function(s) at call site #321:JSCall
Inlining get into addListener
[optimizing 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> - took 2.152, 2.195, 0.037 ms]
[completed optimizing 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>]
[marking 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/23 (52%), generic ICs: 1/23 (4%)]
[compiling method 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> using TurboFan]
Candidates for inlining (size=1):
  #43:JSCall, frequency: 1
  - size:11, name: addListener
Inlining addListener into Readable.on
Candidates for inlining (size=1):
  #126:JSCall, frequency: 1
  - size:230, name: _addListener
Inlining _addListener into Readable.on
Candidates for inlining (size=1):
  #331:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into Readable.on
Inlining small function(s) at call site #428:JSCall
Inlining get into Readable.on
[optimizing 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> - took 1.166, 2.650, 0.040 ms]
[completed optimizing 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)>]
[marking 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/4 (75%), generic ICs: 0/4 (0%)]
[compiling method 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> using TurboFan]
Inlining small function(s) at call site #56:JSCall
Inlining exports._unrefActive into _unrefTimer
Candidates for inlining (size=1):
  #82:JSCall, frequency: 1
  - size:134, name: insert
Inlining insert into _unrefTimer
Inlining small function(s) at call site #424:JSCall
Inlining isEmpty into _unrefTimer
Candidates for inlining (size=3):
  #432:JSCall, frequency: 0.241265
  - size:11, name: ok
  #396:JSCall, frequency: 0.241265
  - size:41, name: append
  #316:JSCall, frequency: 0.166389
  - size:27, name: initTriggerId
Inlining ok into _unrefTimer
Candidates for inlining (size=2):
  #396:JSCall, frequency: 0.241265
  - size:41, name: append
  #316:JSCall, frequency: 0.166389
  - size:27, name: initTriggerId
Inlining append into _unrefTimer
Candidates for inlining (size=2):
  #657:JSCall, frequency: 0.237982
  - size:42, name: remove
  #316:JSCall, frequency: 0.166389
  - size:27, name: initTriggerId
Inlining remove into _unrefTimer
Candidates for inlining (size=1):
  #316:JSCall, frequency: 0.166389
  - size:27, name: initTriggerId
Inlining initTriggerId into _unrefTimer
[marking 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 24/43 (55%), generic ICs: 0/43 (0%)]
[compiling method 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> using TurboFan]
Candidates for inlining (size=3):
  #214:JSCall, frequency: 1
  - size:42, name: push
  #202:JSConstruct, frequency: 1
  - size:34, name: TickObject
  #187:JSCall, frequency: 1
  - size:27, name: initTriggerId
Inlining push into nextTick
Candidates for inlining (size=2):
  #202:JSConstruct, frequency: 1
  - size:34, name: TickObject
  #187:JSCall, frequency: 1
  - size:27, name: initTriggerId
Inlining TickObject into nextTick
Candidates for inlining (size=1):
  #187:JSCall, frequency: 1
  - size:27, name: initTriggerId
Inlining initTriggerId into nextTick
[optimizing 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> - took 1.570, 2.556, 0.101 ms]
[completed optimizing 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)>]
[optimizing 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> - took 2.536, 5.226, 0.126 ms]
[completed optimizing 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)>]
[marking 0x148a53babf81 <JSFunction _extend (sfi = 0x148ad6ec6f89)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/11 (81%), generic ICs: 2/11 (18%)]
[compiling method 0x148a53babf81 <JSFunction _extend (sfi = 0x148ad6ec6f89)> using TurboFan]
[optimizing 0x148a53babf81 <JSFunction _extend (sfi = 0x148ad6ec6f89)> - took 0.265, 1.031, 0.026 ms]
[completed optimizing 0x148a53babf81 <JSFunction _extend (sfi = 0x148ad6ec6f89)>]
[deoptimizing (DEOPT eager): begin 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> (opt #2) @42, FP to SP delta: 56, caller sp: 0x7fff5fbf61d8]
            ;;; deoptimize at <internal/linkedlist.js:21:30> inlined at <internal/linkedlist.js:31:5> inlined at <timers.js:183:5> inlined at <timers.js:149:3> inlined at <net.js:260:12>, wrong map
  reading input frame _unrefTimer => bytecode_offset=26, args=1, height=5; inputs:
      0: 0x148a53be1639 ; [fp - 16] 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)>
      1: 0x148a38043f21 ; [fp + 16] 0x148a38043f21 <Socket map = 0x148a9c24ee39>
      2: 0x148a754be1c1 ; [fp - 8] 0x148a754be1c1 <FixedArray[64]>
      3: 0x148a38043f21 ; rdx 0x148a38043f21 <Socket map = 0x148a9c24ee39>
      4: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame exports._unrefActive => bytecode_offset=8, args=2, height=4; inputs:
      0: 0x148a5a8c13b9 ; (literal 9) 0x148a5a8c13b9 <JSFunction exports._unrefActive (sfi = 0x148a5a8b9979)>
      1: 0x148a53bad7e1 ; (literal 10) 0x148a53bad7e1 <Object map = 0x148a9c2293f9>
      2: 0x148a38043f21 ; rdx 0x148a38043f21 <Socket map = 0x148a9c24ee39>
      3: 0x148a2b56cc71 ; (literal 11) 0x148a2b56cc71 <FixedArray[48]>
      4: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame insert => bytecode_offset=235, args=3, height=9; inputs:
      0: 0x148a53ba4b79 ; (literal 12) 0x148a53ba4b79 <JSFunction insert (sfi = 0x148a5a8b8849)>
      1: 0x148a89a82311 ; (literal 13) 0x148a89a82311 <undefined>
      2: 0x148a38043f21 ; rdx 0x148a38043f21 <Socket map = 0x148a9c24ee39>
      3: 0x148a89a823b1 ; (literal 14) 0x148a89a823b1 <true>
      4: 0x148a2b56cc71 ; (literal 11) 0x148a2b56cc71 <FixedArray[48]>
      5: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a3803cec1 ; [fp - 32] 0x148a3803cec1 <TimersList map = 0x148a9c24b841>
      8: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame append => bytecode_offset=17, args=3, height=2; inputs:
      0: 0x148a2b555d59 ; (literal 18) 0x148a2b555d59 <JSFunction append (sfi = 0x148a5a8ae869)>
      1: 0x148a53b9a6c1 ; (literal 17) 0x148a53b9a6c1 <Object map = 0x148a9c226279>
      2: 0x148a3803cec1 ; [fp - 32] 0x148a3803cec1 <TimersList map = 0x148a9c24b841>
      3: 0x148a38043f21 ; rdx 0x148a38043f21 <Socket map = 0x148a9c24ee39>
      4: 0x148a53b9bb99 ; (literal 19) 0x148a53b9bb99 <FixedArray[5]>
      5: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame remove => bytecode_offset=21, args=2, height=2; inputs:
      0: 0x148a53b9b211 ; (literal 20) 0x148a53b9b211 <JSFunction remove (sfi = 0x148a5a8ae7a1)>
      1: 0x148a89a82311 ; (literal 13) 0x148a89a82311 <undefined>
      2: 0x148a38043f21 ; rdx 0x148a38043f21 <Socket map = 0x148a9c24ee39>
      3: 0x148a53b9bb99 ; (literal 19) 0x148a53b9bb99 <FixedArray[5]>
      4: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame _unrefTimer => bytecode_offset=26, height=32
    0x7fff5fbf61d0: [top + 88] <- 0x148a38043f21 ;  0x148a38043f21 <Socket map = 0x148a9c24ee39>  (input #1)
    -------------------------
    0x7fff5fbf61c8: [top + 80] <- 0x1ddcf16744c9 ;  caller's pc
    0x7fff5fbf61c0: [top + 72] <- 0x7fff5fbf61e0 ;  caller's fp
    0x7fff5fbf61b8: [top + 64] <- 0x148a754be1c1 ;  context    0x148a754be1c1 <FixedArray[64]>  (input #2)
    0x7fff5fbf61b0: [top + 56] <- 0x148a53be1639 ;  function    0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)>  (input #0)
    0x7fff5fbf61a8: [top + 48] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf61a0: [top + 40] <- 0x148af3d7ae59 ;  bytecode array 0x148af3d7ae59 <BytecodeArray[42]>  (input #0)
    0x7fff5fbf6198: [top + 32] <- 0x4f00000000 ;  bytecode offset @ 26
    -------------------------
    0x7fff5fbf6190: [top + 24] <- 0x148a38043f21 ;  0x148a38043f21 <Socket map = 0x148a9c24ee39>  (input #3)
    0x7fff5fbf6188: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf6180: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf6178: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
  translating interpreted frame exports._unrefActive => bytecode_offset=8, height=24
    0x7fff5fbf6170: [top + 88] <- 0x148a53bad7e1 ;  0x148a53bad7e1 <Object map = 0x148a9c2293f9>  (input #1)
    0x7fff5fbf6168: [top + 80] <- 0x148a38043f21 ;  0x148a38043f21 <Socket map = 0x148a9c24ee39>  (input #2)
    -------------------------
    0x7fff5fbf6160: [top + 72] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf6158: [top + 64] <- 0x7fff5fbf61c0 ;  caller's fp
    0x7fff5fbf6150: [top + 56] <- 0x148a2b56cc71 ;  context    0x148a2b56cc71 <FixedArray[48]>  (input #3)
    0x7fff5fbf6148: [top + 48] <- 0x148a5a8c13b9 ;  function    0x148a5a8c13b9 <JSFunction exports._unrefActive (sfi = 0x148a5a8b9979)>  (input #0)
    0x7fff5fbf6140: [top + 40] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6138: [top + 32] <- 0x148af3d68e09 ;  bytecode array 0x148af3d68e09 <BytecodeArray[15]>  (input #0)
    0x7fff5fbf6130: [top + 24] <- 0x3d00000000 ;  bytecode offset @ 8
    -------------------------
    0x7fff5fbf6128: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf6120: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf6118: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
  translating interpreted frame insert => bytecode_offset=235, height=64
    0x7fff5fbf6110: [top + 136] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf6108: [top + 128] <- 0x148a38043f21 ;  0x148a38043f21 <Socket map = 0x148a9c24ee39>  (input #2)
    0x7fff5fbf6100: [top + 120] <- 0x148a89a823b1 ;  0x148a89a823b1 <true>  (input #3)
    -------------------------
    0x7fff5fbf60f8: [top + 112] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf60f0: [top + 104] <- 0x7fff5fbf6158 ;  caller's fp
    0x7fff5fbf60e8: [top + 96] <- 0x148a2b56cc71 ;  context    0x148a2b56cc71 <FixedArray[48]>  (input #4)
    0x7fff5fbf60e0: [top + 88] <- 0x148a53ba4b79 ;  function    0x148a53ba4b79 <JSFunction insert (sfi = 0x148a5a8b8849)>  (input #0)
    0x7fff5fbf60d8: [top + 80] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf60d0: [top + 72] <- 0x148af3d69059 ;  bytecode array 0x148af3d69059 <BytecodeArray[273]>  (input #0)
    0x7fff5fbf60c8: [top + 64] <- 0x12000000000 ;  bytecode offset @ 235
    -------------------------
    0x7fff5fbf60c0: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf60b8: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf60b0: [top + 40] <- 0x148a3803cec1 ;  0x148a3803cec1 <TimersList map = 0x148a9c24b841>  (input #7)
    0x7fff5fbf60a8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf60a0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf6098: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf6090: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6088: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
  translating interpreted frame append => bytecode_offset=17, height=8
    0x7fff5fbf6080: [top + 80] <- 0x148a53b9a6c1 ;  0x148a53b9a6c1 <Object map = 0x148a9c226279>  (input #1)
    0x7fff5fbf6078: [top + 72] <- 0x148a3803cec1 ;  0x148a3803cec1 <TimersList map = 0x148a9c24b841>  (input #2)
    0x7fff5fbf6070: [top + 64] <- 0x148a38043f21 ;  0x148a38043f21 <Socket map = 0x148a9c24ee39>  (input #3)
    -------------------------
    0x7fff5fbf6068: [top + 56] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf6060: [top + 48] <- 0x7fff5fbf60f0 ;  caller's fp
    0x7fff5fbf6058: [top + 40] <- 0x148a53b9bb99 ;  context    0x148a53b9bb99 <FixedArray[5]>  (input #4)
    0x7fff5fbf6050: [top + 32] <- 0x148a2b555d59 ;  function    0x148a2b555d59 <JSFunction append (sfi = 0x148a5a8ae869)>  (input #0)
    0x7fff5fbf6048: [top + 24] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6040: [top + 16] <- 0x148a5a8b0a51 ;  bytecode array 0x148a5a8b0a51 <BytecodeArray[55]>  (input #0)
    0x7fff5fbf6038: [top + 8] <- 0x4600000000 ;  bytecode offset @ 17
    -------------------------
    0x7fff5fbf6030: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
  translating interpreted frame remove => bytecode_offset=21, height=16
    0x7fff5fbf6028: [top + 80] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf6020: [top + 72] <- 0x148a38043f21 ;  0x148a38043f21 <Socket map = 0x148a9c24ee39>  (input #2)
    -------------------------
    0x7fff5fbf6018: [top + 64] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf6010: [top + 56] <- 0x7fff5fbf6060 ;  caller's fp
    0x7fff5fbf6008: [top + 48] <- 0x148a53b9bb99 ;  context    0x148a53b9bb99 <FixedArray[5]>  (input #3)
    0x7fff5fbf6000: [top + 40] <- 0x148a53b9b211 ;  function    0x148a53b9b211 <JSFunction remove (sfi = 0x148a5a8ae7a1)>  (input #0)
    0x7fff5fbf5ff8: [top + 32] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5ff0: [top + 24] <- 0x148af3d69fa1 ;  bytecode array 0x148af3d69fa1 <BytecodeArray[53]>  (input #0)
    0x7fff5fbf5fe8: [top + 16] <- 0x4a00000000 ;  bytecode offset @ 21
    -------------------------
    0x7fff5fbf5fe0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5fd8: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
[deoptimizing (eager): end 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> @42 => node=21, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf61d8, state=TOS_REGISTER, took 5.288 ms]
[removing optimized code for: 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)>]
[marking 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 83/199 (41%), generic ICs: 2/199 (1%)]
[compiling method 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)> using TurboFan]
Candidates for inlining (size=8):
  #884:JSCall, frequency: 1
  - size:31, name: _deferToConnect
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining _deferToConnect into ClientRequest
Candidates for inlining (size=8):
  #1249:JSCall, frequency: 1
  - size:28, name: once
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining once into ClientRequest
Candidates for inlining (size=9):
  #1305:JSCall, frequency: 1
  - size:11, name: addListener
  #1299:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining addListener into ClientRequest
Candidates for inlining (size=9):
  #1327:JSCall, frequency: 1
  - size:230, name: _addListener
  #1299:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining _addListener into ClientRequest
Candidates for inlining (size=9):
  #1299:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1529:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
Inlining _onceWrap into ClientRequest
Candidates for inlining (size=8):
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1529:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
Inlining getHeader into ClientRequest
Candidates for inlining (size=7):
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1529:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
Inlining setHeader into ClientRequest
Candidates for inlining (size=7):
  #1791:JSCall, frequency: 1
  - size:61, name: validateHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1529:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
[optimizing 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)> - took 5.708, 8.353, 0.144 ms]
[completed optimizing 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)>]
[marking 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/28 (89%), generic ICs: 3/28 (10%)]
[compiling method 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> using TurboFan]
Candidates for inlining (size=6):
  #259:JSCall, frequency: 13.452
  - size:19, name: emitAfterScript
  #231:JSCall, frequency: 13.452
  - size:65, name: _combinedTickCallback
  #172:JSCall, frequency: 13.452
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining emitAfterScript into _tickCallback
Candidates for inlining (size=6):
  #481:JSCall, frequency: 13.452
  - size:30, name: validateAsyncId
  #231:JSCall, frequency: 13.452
  - size:65, name: _combinedTickCallback
  #172:JSCall, frequency: 13.452
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=5):
  #231:JSCall, frequency: 13.452
  - size:65, name: _combinedTickCallback
  #172:JSCall, frequency: 13.452
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining _combinedTickCallback into _tickCallback
Candidates for inlining (size=4):
  #172:JSCall, frequency: 13.452
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining emitBeforeScript into _tickCallback
Candidates for inlining (size=5):
  #737:JSCall, frequency: 13.452
  - size:30, name: validateAsyncId
  #729:JSCall, frequency: 13.452
  - size:30, name: validateAsyncId
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=4):
  #729:JSCall, frequency: 13.452
  - size:30, name: validateAsyncId
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=3):
  #119:JSCall, frequency: 13.452
  - size:52, name: shift
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining shift into _tickCallback
Candidates for inlining (size=2):
  #318:JSCall, frequency: 1
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining emitPendingUnhandledRejections into _tickCallback
Candidates for inlining (size=1):
  #298:JSCall, frequency: 1
  - size:43, name: tickDone
Inlining tickDone into _tickCallback
Candidates for inlining (size=1):
  #1165:JSCall, frequency: 1
  - size:18, name: clear
Inlining clear into _tickCallback
[marking 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 38/67 (56%), generic ICs: 0/67 (0%)]
[compiling method 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> using TurboFan]
Candidates for inlining (size=7):
  #148:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #120:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #82:JSCall, frequency: 1
  - size:90, name: howMuchToRead
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #245:JSCall, frequency: 0.500287
  - size:68, name: Socket._read
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=6):
  #120:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #82:JSCall, frequency: 1
  - size:90, name: howMuchToRead
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #245:JSCall, frequency: 0.500287
  - size:68, name: Socket._read
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=5):
  #82:JSCall, frequency: 1
  - size:90, name: howMuchToRead
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #245:JSCall, frequency: 0.500287
  - size:68, name: Socket._read
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
Inlining howMuchToRead into Readable.read
Candidates for inlining (size=4):
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #245:JSCall, frequency: 0.500287
  - size:68, name: Socket._read
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=3):
  #245:JSCall, frequency: 0.500287
  - size:68, name: Socket._read
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
Inlining Socket._read into Readable.read
Candidates for inlining (size=5):
  #580:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
  #633:JSCall, frequency: 0.442915
  - size:28, name: once
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=4):
  #207:JSCall, frequency: 0.500287
  - size:0, name: debugs.(anonymous function)
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
  #633:JSCall, frequency: 0.442915
  - size:28, name: once
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=3):
  #183:JSCall, frequency: 0.499713
  - size:0, name: debugs.(anonymous function)
  #633:JSCall, frequency: 0.442915
  - size:28, name: once
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=2):
  #633:JSCall, frequency: 0.442915
  - size:28, name: once
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining once into Readable.read
Candidates for inlining (size=3):
  #818:JSCall, frequency: 0.442915
  - size:101, name: Readable.on
  #812:JSCall, frequency: 0.442915
  - size:42, name: _onceWrap
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining Readable.on into Readable.read
Candidates for inlining (size=3):
  #866:JSCall, frequency: 0.442915
  - size:11, name: addListener
  #812:JSCall, frequency: 0.442915
  - size:42, name: _onceWrap
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining addListener into Readable.read
Candidates for inlining (size=3):
  #945:JSCall, frequency: 0.442915
  - size:230, name: _addListener
  #812:JSCall, frequency: 0.442915
  - size:42, name: _onceWrap
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
Inlining _addListener into Readable.read
Not considering call site #1148:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=2):
  #812:JSCall, frequency: 0.442915
  - size:42, name: _onceWrap
  #620:JSCall, frequency: 0.442915
  - size:0, name: debugs.(anonymous function)
[optimizing 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> - took 3.404, 2.754, 0.082 ms]
[completed optimizing 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)>]
[marking 0x148a754f35f1 <JSFunction checkInvalidHeaderChar (sfi = 0x148af3d0e079)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/27 (100%), generic ICs: 0/27 (0%)]
[compiling method 0x148a754f35f1 <JSFunction checkInvalidHeaderChar (sfi = 0x148af3d0e079)> using TurboFan]
[optimizing 0x148a754f35f1 <JSFunction checkInvalidHeaderChar (sfi = 0x148af3d0e079)> - took 0.427, 1.395, 0.018 ms]
[completed optimizing 0x148a754f35f1 <JSFunction checkInvalidHeaderChar (sfi = 0x148af3d0e079)>]
[optimizing 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> - took 4.660, 5.058, 0.054 ms]
[completed optimizing 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>]
[marking 0x148a53be1551 <JSFunction debugs.(anonymous function) (sfi = 0x148a5a8c04e1)> for optimized recompilation, reason: small function, ICs with typeinfo: 0/0 (100%), generic ICs: 0/0 (0%)]
[compiling method 0x148a53be1551 <JSFunction debugs.(anonymous function) (sfi = 0x148a5a8c04e1)> using TurboFan]
[optimizing 0x148a53be1551 <JSFunction debugs.(anonymous function) (sfi = 0x148a5a8c04e1)> - took 0.045, 0.194, 0.004 ms]
[completed optimizing 0x148a53be1551 <JSFunction debugs.(anonymous function) (sfi = 0x148a5a8c04e1)>]
[marking 0x148a785b45c9 <JSFunction ReadableState (sfi = 0x148a5a8ee081)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 39/48 (81%), generic ICs: 2/48 (4%)]
[compiling method 0x148a785b45c9 <JSFunction ReadableState (sfi = 0x148a5a8ee081)> using TurboFan]
Candidates for inlining (size=1):
  #197:JSConstruct, frequency: 1
  - size:18, name: BufferList
Inlining BufferList into ReadableState
[optimizing 0x148a785b45c9 <JSFunction ReadableState (sfi = 0x148a5a8ee081)> - took 0.870, 2.009, 0.106 ms]
[completed optimizing 0x148a785b45c9 <JSFunction ReadableState (sfi = 0x148a5a8ee081)>]
[marking 0x148a2b50c081 <JSFunction pushValueToArray (sfi = 0x148ad6ebdfe1)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 0/6 (0%)]
[compiling method 0x148a2b50c081 <JSFunction pushValueToArray (sfi = 0x148ad6ebdfe1)> using TurboFan]
[optimizing 0x148a2b50c081 <JSFunction pushValueToArray (sfi = 0x148ad6ebdfe1)> - took 0.289, 1.149, 0.053 ms]
[completed optimizing 0x148a2b50c081 <JSFunction pushValueToArray (sfi = 0x148ad6ebdfe1)>]
[marking 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> using TurboFan]
Candidates for inlining (size=2):
  #49:JSCall, frequency: 1
  - size:101, name: Readable.on
  #31:JSCall, frequency: 1
  - size:216, name: removeListener
Inlining Readable.on into httpSocketSetup
Candidates for inlining (size=2):
  #101:JSCall, frequency: 1
  - size:11, name: addListener
  #31:JSCall, frequency: 1
  - size:216, name: removeListener
Inlining addListener into httpSocketSetup
Candidates for inlining (size=2):
  #183:JSCall, frequency: 1
  - size:230, name: _addListener
  #31:JSCall, frequency: 1
  - size:216, name: removeListener
Inlining _addListener into httpSocketSetup
Candidates for inlining (size=2):
  #31:JSCall, frequency: 1
  - size:216, name: removeListener
  #388:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
Inlining removeListener into httpSocketSetup
Candidates for inlining (size=1):
  #388:JSCall, frequency: 0.21488
  - size:14, name: $getMaxListeners
[optimizing 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> - took 1.750, 2.534, 0.042 ms]
[completed optimizing 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)>]
[marking 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/54 (31%), generic ICs: 3/54 (5%)]
[compiling method 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> using TurboFan]
Candidates for inlining (size=2):
  #142:JSCall, frequency: 0.194516
  - size:52, name: emitOne
  #164:JSCall, frequency: 0.177103
  - size:54, name: emitTwo
Inlining emitOne into emit
Candidates for inlining (size=1):
  #164:JSCall, frequency: 0.177103
  - size:54, name: emitTwo
Inlining emitTwo into emit
[optimizing 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> - took 0.610, 1.761, 0.036 ms]
[completed optimizing 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>]
[marking 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/13 (84%), generic ICs: 0/13 (0%)]
[compiling method 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> using TurboFan]
Candidates for inlining (size=1):
  #105:JSCall, frequency: 1.00052
  - size:116, name: _addHeaderLine
Inlining _addHeaderLine into _addHeaderLines
[optimizing 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> - took 0.462, 1.703, 0.037 ms]
[completed optimizing 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)>]
[deoptimizing (DEOPT soft): begin 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> (opt #7) @2, FP to SP delta: 112, caller sp: 0x7fff5fbf6258]
            ;;; deoptimize at <_stream_readable.js:379:14>, Insufficient type feedback for generic named access
  reading input frame Readable.read => bytecode_offset=64, args=2, height=9; inputs:
      0: 0x148a5a8f2d31 ; [fp - 16] 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>
      1: 0x148a38042619 ; rcx 0x148a38042619 <Socket map = 0x148a9c251511>
      2: 0x00000000 ; r11 0
      3: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      4: 0x148a38042711 ; r9 0x148a38042711 <ReadableState map = 0x148a9c23f871>
      5: 0x00000000 ; r11 0
      6: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame Readable.read => bytecode_offset=64, height=72
    0x7fff5fbf6250: [top + 136] <- 0x148a38042619 ;  0x148a38042619 <Socket map = 0x148a9c251511>  (input #1)
    0x7fff5fbf6248: [top + 128] <- 0x00000000 ;  0  (input #2)
    -------------------------
    0x7fff5fbf6240: [top + 120] <- 0x1ddcf16745fc ;  caller's pc
    0x7fff5fbf6238: [top + 112] <- 0x7fff5fbf6260 ;  caller's fp
    0x7fff5fbf6230: [top + 104] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #3)
    0x7fff5fbf6228: [top + 96] <- 0x148a5a8f2d31 ;  function    0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>  (input #0)
    0x7fff5fbf6220: [top + 88] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6218: [top + 80] <- 0x148af3d65ea1 ;  bytecode array 0x148af3d65ea1 <BytecodeArray[502]>  (input #0)
    0x7fff5fbf6210: [top + 72] <- 0x7500000000 ;  bytecode offset @ 64
    -------------------------
    0x7fff5fbf6208: [top + 64] <- 0x148a38042711 ;  0x148a38042711 <ReadableState map = 0x148a9c23f871>  (input #4)
    0x7fff5fbf6200: [top + 56] <- 0x00000000 ;  0  (input #5)
    0x7fff5fbf61f8: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf61f0: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf61e8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf61e0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf61d8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf61d0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf61c8: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
[deoptimizing (soft): end 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> @2 => node=64, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6258, state=TOS_REGISTER, took 1.452 ms]
[removing optimized code for: 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>]
[marking 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 33/49 (67%), generic ICs: 2/49 (4%)]
[compiling method 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> using TurboFan]
[optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> - took 0.486, 3.328, 0.077 ms]
[completed optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
[marking 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/4 (75%), generic ICs: 0/4 (0%)]
[compiling method 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> using TurboFan]
Inlining small function(s) at call site #56:JSCall
Inlining exports._unrefActive into _unrefTimer
Candidates for inlining (size=1):
  #82:JSCall, frequency: 1
  - size:134, name: insert
Inlining insert into _unrefTimer
[optimizing 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)> - took 0.838, 2.802, 0.092 ms]
[completed optimizing 0x148a53be1639 <JSFunction _unrefTimer (sfi = 0x148a53bcc221)>]
[deoptimizing (DEOPT eager): begin 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> (opt #14) @14, FP to SP delta: 72, caller sp: 0x7fff5fbf5538]
            ;;; deoptimize at <_http_incoming.js:304:18> inlined at <_http_incoming.js:131:12>, no reason
  reading input frame _addHeaderLines => bytecode_offset=83, args=3, height=8; inputs:
      0: 0x148a754f3139 ; [fp - 16] 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)>
      1: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c24dc01>
      2: 0x148a37e6a319 ; [fp + 24] 0x148a37e6a319 <JSArray[6]>
      3: 0x600000000 ; [fp + 16] 6
      4: 0x148a754e3f91 ; [fp - 8] 0x148a754e3f91 <FixedArray[7]>
      5: 0x148a37e6a7c9 ; [fp - 24] 0x148a37e6a7c9 <Object map = 0x148a9c251a91>
      6: 4 ; (int) [fp - 32] 
      7: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame _addHeaderLine => bytecode_offset=11, args=4, height=6; inputs:
      0: 0x148a754f3181 ; (literal 3) 0x148a754f3181 <JSFunction _addHeaderLine (sfi = 0x148af3d10b11)>
      1: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c24dc01>
      2: 0x148af3d12461 ; rbx 0x148af3d12461 <String[14]: content-length>
      3: 0x148a5a8cfa99 ; [fp - 48] 0x148a5a8cfa99 <String[1]: 8>
      4: 0x148a37e6a7c9 ; [fp - 24] 0x148a37e6a7c9 <Object map = 0x148a9c251a91>
      5: 0x148a754e3f91 ; (literal 4) 0x148a754e3f91 <FixedArray[7]>
      6: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame _addHeaderLines => bytecode_offset=83, height=56
    0x7fff5fbf5530: [top + 128] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c24dc01>  (input #1)
    0x7fff5fbf5528: [top + 120] <- 0x148a37e6a319 ;  0x148a37e6a319 <JSArray[6]>  (input #2)
    0x7fff5fbf5520: [top + 112] <- 0x600000000 ;  6  (input #3)
    -------------------------
    0x7fff5fbf5518: [top + 104] <- 0x1ddcf167474a ;  caller's pc
    0x7fff5fbf5510: [top + 96] <- 0x7fff5fbf5540 ;  caller's fp
    0x7fff5fbf5508: [top + 88] <- 0x148a754e3f91 ;  context    0x148a754e3f91 <FixedArray[7]>  (input #4)
    0x7fff5fbf5500: [top + 80] <- 0x148a754f3139 ;  function    0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)>  (input #0)
    0x7fff5fbf54f8: [top + 72] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf54f0: [top + 64] <- 0x148af3d6eef1 ;  bytecode array 0x148af3d6eef1 <BytecodeArray[100]>  (input #0)
    0x7fff5fbf54e8: [top + 56] <- 0x8800000000 ;  bytecode offset @ 83
    -------------------------
    0x7fff5fbf54e0: [top + 48] <- 0x148a37e6a7c9 ;  0x148a37e6a7c9 <Object map = 0x148a9c251a91>  (input #5)
    0x7fff5fbf54d8: [top + 40] <- 0x400000000 ;  4  (input #6)
    0x7fff5fbf54d0: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf54c8: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf54c0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf54b8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf54b0: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
  translating interpreted frame _addHeaderLine => bytecode_offset=11, height=48
    0x7fff5fbf54a8: [top + 128] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c24dc01>  (input #1)
    0x7fff5fbf54a0: [top + 120] <- 0x148af3d12461 ;  0x148af3d12461 <String[14]: content-length>  (input #2)
    0x7fff5fbf5498: [top + 112] <- 0x148a5a8cfa99 ;  0x148a5a8cfa99 <String[1]: 8>  (input #3)
    0x7fff5fbf5490: [top + 104] <- 0x148a37e6a7c9 ;  0x148a37e6a7c9 <Object map = 0x148a9c251a91>  (input #4)
    -------------------------
    0x7fff5fbf5488: [top + 96] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf5480: [top + 88] <- 0x7fff5fbf5510 ;  caller's fp
    0x7fff5fbf5478: [top + 80] <- 0x148a754e3f91 ;  context    0x148a754e3f91 <FixedArray[7]>  (input #5)
    0x7fff5fbf5470: [top + 72] <- 0x148a754f3181 ;  function    0x148a754f3181 <JSFunction _addHeaderLine (sfi = 0x148af3d10b11)>  (input #0)
    0x7fff5fbf5468: [top + 64] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5460: [top + 56] <- 0x148af3d6f209 ;  bytecode array 0x148af3d6f209 <BytecodeArray[185]>  (input #0)
    0x7fff5fbf5458: [top + 48] <- 0x4000000000 ;  bytecode offset @ 11
    -------------------------
    0x7fff5fbf5450: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5448: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5440: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5438: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5430: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5428: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
[deoptimizing (eager): end 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> @14 => node=11, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5538, state=TOS_REGISTER, took 3.294 ms]
[removing optimized code for: 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)>]
[deoptimizing (DEOPT eager): begin 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> (opt #13) @21, FP to SP delta: 72, caller sp: 0x7fff5fbf5450]
            ;;; deoptimize at <events.js:116:13> inlined at <events.js:211:7>, wrong map
  reading input frame emit => bytecode_offset=240, args=2, height=23; inputs:
      0: 0x148ad6ebd719 ; [fp - 16] 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>
      1: 0x148a380428f1 ; [fp + 24] 0x148a380428f1 <ClientRequest map = 0x148a9c2505f1>
      2: 0x148af3d08c61 ; [fp + 16] 0x148af3d08c61 <String[8]: response>
      3: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      4: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a380432d9 ; rcx 0x148a380432d9 <JSFunction get.on (sfi = 0x148af3d73889)>
      7: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a82201 ; [fp - 32] 0x148a89a82201 <null>
     12: 0x148a89a82421 ; (literal 5) 0x148a89a82421 <false>
     13: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 1 ; (bool) [fp - 48] 
     15: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a37e6b059 ; rbx 0x148a37e6b059 <Arguments map = 0x148a9c206611>
     17: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     18: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     19: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     20: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     21: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     22: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     23: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     24: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     25: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     26: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame emit => bytecode_offset=240, height=184
    0x7fff5fbf5448: [top + 248] <- 0x148a380428f1 ;  0x148a380428f1 <ClientRequest map = 0x148a9c2505f1>  (input #1)
    0x7fff5fbf5440: [top + 240] <- 0x148af3d08c61 ;  0x148af3d08c61 <String[8]: response>  (input #2)
    -------------------------
    0x7fff5fbf5438: [top + 232] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf5430: [top + 224] <- 0x7fff5fbf5468 ;  caller's fp
    0x7fff5fbf5428: [top + 216] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #3)
    0x7fff5fbf5420: [top + 208] <- 0x148ad6ebd719 ;  function    0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>  (input #0)
    0x7fff5fbf5418: [top + 200] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5410: [top + 192] <- 0x148a5a8b2711 ;  bytecode array 0x148a5a8b2711 <BytecodeArray[498]>  (input #0)
    0x7fff5fbf5408: [top + 184] <- 0x12500000000 ;  bytecode offset @ 240
    -------------------------
    0x7fff5fbf5400: [top + 176] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf53f8: [top + 168] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf53f0: [top + 160] <- 0x148a380432d9 ;  0x148a380432d9 <JSFunction get.on (sfi = 0x148af3d73889)>  (input #6)
    0x7fff5fbf53e8: [top + 152] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf53e0: [top + 144] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf53d8: [top + 136] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf53d0: [top + 128] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf53c8: [top + 120] <- 0x148a89a82201 ;  0x148a89a82201 <null>  (input #11)
    0x7fff5fbf53c0: [top + 112] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #12)
    0x7fff5fbf53b8: [top + 104] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf53b0: [top + 96] <- 0x148a89a823b1 ;  0x148a89a823b1 <true>  (input #14)
    0x7fff5fbf53a8: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf53a0: [top + 80] <- 0x148a37e6b059 ;  0x148a37e6b059 <Arguments map = 0x148a9c206611>  (input #16)
    0x7fff5fbf5398: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf5390: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #18)
    0x7fff5fbf5388: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf5380: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf5378: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #21)
    0x7fff5fbf5370: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #22)
    0x7fff5fbf5368: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #23)
    0x7fff5fbf5360: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #24)
    0x7fff5fbf5358: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #25)
    0x7fff5fbf5350: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #26)
[deoptimizing (eager): end 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> @21 => node=240, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5450, state=TOS_REGISTER, took 4.199 ms]
[deoptimizer unlinked: emit / 148ad6ebd719]
[deoptimizing (DEOPT eager): begin 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> (opt #1) @33, FP to SP delta: 48, caller sp: 0x7fff5fbf4e18]
            ;;; deoptimize at <events.js:90:12> inlined at <events.js:277:11> inlined at <events.js:297:10> inlined at <_stream_readable.js:772:35>, wrong map
  reading input frame Readable.on => bytecode_offset=34, args=3, height=8; inputs:
      0: 0x148a5a8f2e51 ; [fp - 16] 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)>
      1: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>
      2: 0x148ad6eb6601 ; [fp + 24] 0x148ad6eb6601 <String[3]: end>
      3: 0x148a37e6b8f9 ; [fp + 16] 0x148a37e6b8f9 <JSFunction onend (sfi = 0x148a785f1629)>
      4: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      5: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148ad6e88a11 ; (literal 6) 0x148ad6e88a11 <JSFunction call (sfi = 0x148a89aa7169)>
  reading input frame addListener => bytecode_offset=20, args=3, height=7; inputs:
      0: 0x148ad6ebd761 ; (literal 7) 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>
      1: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>
      2: 0x148ad6eb6601 ; [fp + 24] 0x148ad6eb6601 <String[3]: end>
      3: 0x148a37e6b8f9 ; [fp + 16] 0x148a37e6b8f9 <JSFunction onend (sfi = 0x148a785f1629)>
      4: 0x148a2b515ff9 ; (literal 8) 0x148a2b515ff9 <FixedArray[21]>
      5: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a82421 ; (literal 9) 0x148a89a82421 <false>
  reading input frame _addListener => bytecode_offset=252, args=5, height=10; inputs:
      0: 0x148a2b543ff1 ; (literal 10) 0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)>
      1: 0x148a89a82311 ; (literal 11) 0x148a89a82311 <undefined>
      2: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>
      3: 0x148ad6eb6601 ; [fp + 24] 0x148ad6eb6601 <String[3]: end>
      4: 0x148a37e6b8f9 ; [fp + 16] 0x148a37e6b8f9 <JSFunction onend (sfi = 0x148a785f1629)>
      5: 0x148a89a82421 ; (literal 9) 0x148a89a82421 <false>
      6: 0x148a2b515ff9 ; (literal 8) 0x148a2b515ff9 <FixedArray[21]>
      7: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a37e6ba39 ; [fp - 24] 0x148a37e6ba39 <JSArray[2]>
     11: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame Readable.on => bytecode_offset=34, height=56
    0x7fff5fbf4e10: [top + 128] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>  (input #1)
    0x7fff5fbf4e08: [top + 120] <- 0x148ad6eb6601 ;  0x148ad6eb6601 <String[3]: end>  (input #2)
    0x7fff5fbf4e00: [top + 112] <- 0x148a37e6b8f9 ;  0x148a37e6b8f9 <JSFunction onend (sfi = 0x148a785f1629)>  (input #3)
    -------------------------
    0x7fff5fbf4df8: [top + 104] <- 0x1ddcf167474a ;  caller's pc
    0x7fff5fbf4df0: [top + 96] <- 0x7fff5fbf4e20 ;  caller's fp
    0x7fff5fbf4de8: [top + 88] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #4)
    0x7fff5fbf4de0: [top + 80] <- 0x148a5a8f2e51 ;  function    0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)>  (input #0)
    0x7fff5fbf4dd8: [top + 72] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf4dd0: [top + 64] <- 0x148a53bef949 ;  bytecode array 0x148a53bef949 <BytecodeArray[163]>  (input #0)
    0x7fff5fbf4dc8: [top + 56] <- 0x5700000000 ;  bytecode offset @ 34
    -------------------------
    0x7fff5fbf4dc0: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf4db8: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf4db0: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf4da8: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf4da0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf4d98: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf4d90: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
  translating interpreted frame addListener => bytecode_offset=20, height=48
    0x7fff5fbf4d88: [top + 120] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>  (input #1)
    0x7fff5fbf4d80: [top + 112] <- 0x148ad6eb6601 ;  0x148ad6eb6601 <String[3]: end>  (input #2)
    0x7fff5fbf4d78: [top + 104] <- 0x148a37e6b8f9 ;  0x148a37e6b8f9 <JSFunction onend (sfi = 0x148a785f1629)>  (input #3)
    -------------------------
    0x7fff5fbf4d70: [top + 96] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf4d68: [top + 88] <- 0x7fff5fbf4df0 ;  caller's fp
    0x7fff5fbf4d60: [top + 80] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #4)
    0x7fff5fbf4d58: [top + 72] <- 0x148ad6ebd761 ;  function    0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>  (input #0)
    0x7fff5fbf4d50: [top + 64] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf4d48: [top + 56] <- 0x148a5a89ba21 ;  bytecode array 0x148a5a89ba21 <BytecodeArray[26]>  (input #0)
    0x7fff5fbf4d40: [top + 48] <- 0x4900000000 ;  bytecode offset @ 20
    -------------------------
    0x7fff5fbf4d38: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf4d30: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf4d28: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf4d20: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf4d18: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf4d10: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
  translating interpreted frame _addListener => bytecode_offset=252, height=80
    0x7fff5fbf4d08: [top + 168] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf4d00: [top + 160] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>  (input #2)
    0x7fff5fbf4cf8: [top + 152] <- 0x148ad6eb6601 ;  0x148ad6eb6601 <String[3]: end>  (input #3)
    0x7fff5fbf4cf0: [top + 144] <- 0x148a37e6b8f9 ;  0x148a37e6b8f9 <JSFunction onend (sfi = 0x148a785f1629)>  (input #4)
    0x7fff5fbf4ce8: [top + 136] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #5)
    -------------------------
    0x7fff5fbf4ce0: [top + 128] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf4cd8: [top + 120] <- 0x7fff5fbf4d68 ;  caller's fp
    0x7fff5fbf4cd0: [top + 112] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #6)
    0x7fff5fbf4cc8: [top + 104] <- 0x148a2b543ff1 ;  function    0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)>  (input #0)
    0x7fff5fbf4cc0: [top + 96] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf4cb8: [top + 88] <- 0x148a5a89bdc1 ;  bytecode array 0x148a5a89bdc1 <BytecodeArray[427]>  (input #0)
    0x7fff5fbf4cb0: [top + 80] <- 0x13100000000 ;  bytecode offset @ 252
    -------------------------
    0x7fff5fbf4ca8: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf4ca0: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf4c98: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf4c90: [top + 48] <- 0x148a37e6ba39 ;  0x148a37e6ba39 <JSArray[2]>  (input #10)
    0x7fff5fbf4c88: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf4c80: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf4c78: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf4c70: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf4c68: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf4c60: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (eager): end 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> @33 => node=252, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf4e18, state=TOS_REGISTER, took 6.547 ms]
[removing optimized code for: 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)>]
[deoptimizing (DEOPT eager): begin 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> (opt #0) @26, FP to SP delta: 40, caller sp: 0x7fff5fbf4d48]
            ;;; deoptimize at <events.js:90:12> inlined at <events.js:277:11> inlined at <events.js:297:10>, wrong map
  reading input frame addListener => bytecode_offset=20, args=3, height=7; inputs:
      0: 0x148ad6ebd761 ; [fp - 16] 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>
      1: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>
      2: 0x148a5a895a81 ; [fp + 24] 0x148a5a895a81 <String[5]: close>
      3: 0x148a37e6b989 ; [fp + 16] 0x148a37e6b989 <JSFunction onclose (sfi = 0x148a785f17b9)>
      4: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      5: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a82421 ; (literal 5) 0x148a89a82421 <false>
  reading input frame _addListener => bytecode_offset=252, args=5, height=10; inputs:
      0: 0x148a2b543ff1 ; (literal 6) 0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)>
      1: 0x148a89a82311 ; (literal 7) 0x148a89a82311 <undefined>
      2: 0x148a37e6a521 ; [fp + 32] 0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>
      3: 0x148a5a895a81 ; [fp + 24] 0x148a5a895a81 <String[5]: close>
      4: 0x148a37e6b989 ; [fp + 16] 0x148a37e6b989 <JSFunction onclose (sfi = 0x148a785f17b9)>
      5: 0x148a89a82421 ; (literal 5) 0x148a89a82421 <false>
      6: 0x148a2b515ff9 ; (literal 8) 0x148a2b515ff9 <FixedArray[21]>
      7: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a37e6bbb9 ; [fp - 24] 0x148a37e6bbb9 <JSArray[2]>
     11: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame addListener => bytecode_offset=20, height=48
    0x7fff5fbf4d40: [top + 120] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>  (input #1)
    0x7fff5fbf4d38: [top + 112] <- 0x148a5a895a81 ;  0x148a5a895a81 <String[5]: close>  (input #2)
    0x7fff5fbf4d30: [top + 104] <- 0x148a37e6b989 ;  0x148a37e6b989 <JSFunction onclose (sfi = 0x148a785f17b9)>  (input #3)
    -------------------------
    0x7fff5fbf4d28: [top + 96] <- 0x1ddcf1674048 ;  caller's pc
    0x7fff5fbf4d20: [top + 88] <- 0x7fff5fbf4d80 ;  caller's fp
    0x7fff5fbf4d18: [top + 80] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #4)
    0x7fff5fbf4d10: [top + 72] <- 0x148ad6ebd761 ;  function    0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>  (input #0)
    0x7fff5fbf4d08: [top + 64] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf4d00: [top + 56] <- 0x148a5a89ba21 ;  bytecode array 0x148a5a89ba21 <BytecodeArray[26]>  (input #0)
    0x7fff5fbf4cf8: [top + 48] <- 0x4900000000 ;  bytecode offset @ 20
    -------------------------
    0x7fff5fbf4cf0: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf4ce8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf4ce0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf4cd8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf4cd0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf4cc8: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
  translating interpreted frame _addListener => bytecode_offset=252, height=80
    0x7fff5fbf4cc0: [top + 168] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf4cb8: [top + 160] <- 0x148a37e6a521 ;  0x148a37e6a521 <IncomingMessage map = 0x148a9c251cf9>  (input #2)
    0x7fff5fbf4cb0: [top + 152] <- 0x148a5a895a81 ;  0x148a5a895a81 <String[5]: close>  (input #3)
    0x7fff5fbf4ca8: [top + 144] <- 0x148a37e6b989 ;  0x148a37e6b989 <JSFunction onclose (sfi = 0x148a785f17b9)>  (input #4)
    0x7fff5fbf4ca0: [top + 136] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #5)
    -------------------------
    0x7fff5fbf4c98: [top + 128] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf4c90: [top + 120] <- 0x7fff5fbf4d20 ;  caller's fp
    0x7fff5fbf4c88: [top + 112] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #6)
    0x7fff5fbf4c80: [top + 104] <- 0x148a2b543ff1 ;  function    0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)>  (input #0)
    0x7fff5fbf4c78: [top + 96] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf4c70: [top + 88] <- 0x148a5a89bdc1 ;  bytecode array 0x148a5a89bdc1 <BytecodeArray[427]>  (input #0)
    0x7fff5fbf4c68: [top + 80] <- 0x13100000000 ;  bytecode offset @ 252
    -------------------------
    0x7fff5fbf4c60: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf4c58: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf4c50: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf4c48: [top + 48] <- 0x148a37e6bbb9 ;  0x148a37e6bbb9 <JSArray[2]>  (input #10)
    0x7fff5fbf4c40: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf4c38: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf4c30: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf4c28: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf4c20: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf4c18: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (eager): end 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> @26 => node=252, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf4d48, state=TOS_REGISTER, took 4.447 ms]
[removing optimized code for: 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>]
[deoptimizing (DEOPT eager): begin 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> (opt #15) @17, FP to SP delta: 56, caller sp: 0x7fff5fbf5d88]
            ;;; deoptimize at <events.js:382:40>, wrong map
  reading input frame removeListener => bytecode_offset=218, args=3, height=12; inputs:
      0: 0x148ad6ebd881 ; [fp - 16] 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>
      1: 0x148a38042619 ; [fp + 32] 0x148a38042619 <Socket map = 0x148a9c251511>
      2: 0x148ad6eb6601 ; [fp + 24] 0x148ad6eb6601 <String[3]: end>
      3: 0x148a38007ef9 ; rbx 0x148a38007ef9 <JSFunction socketOnEnd (sfi = 0x148af3d09cf1)>
      4: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      5: 0x148a38043049 ; rdx 0x148a38043049 <JSArray[2]>
      6: 0x148a380427d1 ; [fp - 40] 0x148a380427d1 <Object map = 0x148a9c206669>
      7: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 1 ; rsi 
      9: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 1 ; rsi 
  translating interpreted frame removeListener => bytecode_offset=218, height=96
    0x7fff5fbf5d80: [top + 168] <- 0x148a38042619 ;  0x148a38042619 <Socket map = 0x148a9c251511>  (input #1)
    0x7fff5fbf5d78: [top + 160] <- 0x148ad6eb6601 ;  0x148ad6eb6601 <String[3]: end>  (input #2)
    0x7fff5fbf5d70: [top + 152] <- 0x148a38007ef9 ;  0x148a38007ef9 <JSFunction socketOnEnd (sfi = 0x148af3d09cf1)>  (input #3)
    -------------------------
    0x7fff5fbf5d68: [top + 144] <- 0x1ddcf167474a ;  caller's pc
    0x7fff5fbf5d60: [top + 136] <- 0x7fff5fbf5d90 ;  caller's fp
    0x7fff5fbf5d58: [top + 128] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #4)
    0x7fff5fbf5d50: [top + 120] <- 0x148ad6ebd881 ;  function    0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>  (input #0)
    0x7fff5fbf5d48: [top + 112] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5d40: [top + 104] <- 0x148af3d68179 ;  bytecode array 0x148af3d68179 <BytecodeArray[364]>  (input #0)
    0x7fff5fbf5d38: [top + 96] <- 0x10f00000000 ;  bytecode offset @ 218
    -------------------------
    0x7fff5fbf5d30: [top + 88] <- 0x148a38043049 ;  0x148a38043049 <JSArray[2]>  (input #5)
    0x7fff5fbf5d28: [top + 80] <- 0x148a380427d1 ;  0x148a380427d1 <Object map = 0x148a9c206669>  (input #6)
    0x7fff5fbf5d20: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5d18: [top + 64] <- 0x100000000 ;  1  (input #8)
    0x7fff5fbf5d10: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5d08: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5d00: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5cf8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5cf0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5ce8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5ce0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5cd8: [top + 0] <- 0x100000000 ;  accumulator 1  (input #16)
[deoptimizing (eager): end 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> @17 => node=218, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5d88, state=TOS_REGISTER, took 1.781 ms]
[removing optimized code for: 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
[deoptimizing (DEOPT lazy): begin 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> (opt #13) @22, FP to SP delta: 72, caller sp: 0x7fff5fbf5ec0]
  reading input frame emit => bytecode_offset=321, args=2, height=23; inputs:
      0: 0x148ad6ebd719 ; [fp - 16] 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>
      1: 0x148a38042619 ; [fp + 24] 0x148a38042619 <Socket map = 0x148a9c251511>
      2: 0x148ad6eb65e1 ; [fp + 16] 0x148ad6eb65e1 <String[4]: data>
      3: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      4: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a82201 ; [fp - 32] 0x148a89a82201 <null>
     12: 0x148a89a82421 ; (literal 5) 0x148a89a82421 <false>
     13: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     17: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     18: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     19: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     20: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     21: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     22: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     23: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     24: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     25: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     26: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame emitOne => bytecode_offset=11, args=5, height=6; inputs:
      0: 0x148a53ba9431 ; (literal 12) 0x148a53ba9431 <JSFunction emitOne (sfi = 0x148ad6ebb4f9)>
      1: 0x148a89a82311 ; (literal 4) 0x148a89a82311 <undefined>
      2: 0x148a38007f41 ; [fp - 24] 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)>
      3: 1 ; (bool) [fp - 48] 
      4: 0x148a38042619 ; [fp + 24] 0x148a38042619 <Socket map = 0x148a9c251511>
      5: 0x148a37e6a1e9 ; [fp - 56] 0x148a37e6a1e9 <Uint8Array map = 0x148a9c2519e1>
      6: 0x148a2b515ff9 ; (literal 11) 0x148a2b515ff9 <FixedArray[21]>
      7: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a82311 ; rax 0x148a89a82311 <undefined>
  translating interpreted frame emit => bytecode_offset=321, height=176
    0x7fff5fbf5eb8: [top + 240] <- 0x148a38042619 ;  0x148a38042619 <Socket map = 0x148a9c251511>  (input #1)
    0x7fff5fbf5eb0: [top + 232] <- 0x148ad6eb65e1 ;  0x148ad6eb65e1 <String[4]: data>  (input #2)
    -------------------------
    0x7fff5fbf5ea8: [top + 224] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf5ea0: [top + 216] <- 0x7fff5fbf5ed8 ;  caller's fp
    0x7fff5fbf5e98: [top + 208] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #3)
    0x7fff5fbf5e90: [top + 200] <- 0x148ad6ebd719 ;  function    0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>  (input #0)
    0x7fff5fbf5e88: [top + 192] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5e80: [top + 184] <- 0x148a5a8b2711 ;  bytecode array 0x148a5a8b2711 <BytecodeArray[498]>  (input #0)
    0x7fff5fbf5e78: [top + 176] <- 0x17600000000 ;  bytecode offset @ 321
    -------------------------
    0x7fff5fbf5e70: [top + 168] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5e68: [top + 160] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5e60: [top + 152] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5e58: [top + 144] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5e50: [top + 136] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5e48: [top + 128] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5e40: [top + 120] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5e38: [top + 112] <- 0x148a89a82201 ;  0x148a89a82201 <null>  (input #11)
    0x7fff5fbf5e30: [top + 104] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #12)
    0x7fff5fbf5e28: [top + 96] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5e20: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5e18: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5e10: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5e08: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf5e00: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #18)
    0x7fff5fbf5df8: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf5df0: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf5de8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #21)
    0x7fff5fbf5de0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #22)
    0x7fff5fbf5dd8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #23)
    0x7fff5fbf5dd0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #24)
    0x7fff5fbf5dc8: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #25)
  translating interpreted frame emitOne => bytecode_offset=11, height=48
    0x7fff5fbf5dc0: [top + 136] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5db8: [top + 128] <- 0x148a38007f41 ;  0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)>  (input #2)
    0x7fff5fbf5db0: [top + 120] <- 0x148a89a823b1 ;  0x148a89a823b1 <true>  (input #3)
    0x7fff5fbf5da8: [top + 112] <- 0x148a38042619 ;  0x148a38042619 <Socket map = 0x148a9c251511>  (input #4)
    0x7fff5fbf5da0: [top + 104] <- 0x148a37e6a1e9 ;  0x148a37e6a1e9 <Uint8Array map = 0x148a9c2519e1>  (input #5)
    -------------------------
    0x7fff5fbf5d98: [top + 96] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf5d90: [top + 88] <- 0x7fff5fbf5ea0 ;  caller's fp
    0x7fff5fbf5d88: [top + 80] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #6)
    0x7fff5fbf5d80: [top + 72] <- 0x148a53ba9431 ;  function    0x148a53ba9431 <JSFunction emitOne (sfi = 0x148ad6ebb4f9)>  (input #0)
    0x7fff5fbf5d78: [top + 64] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5d70: [top + 56] <- 0x148af3d67119 ;  bytecode array 0x148af3d67119 <BytecodeArray[77]>  (input #0)
    0x7fff5fbf5d68: [top + 48] <- 0x4000000000 ;  bytecode offset @ 11
    -------------------------
    0x7fff5fbf5d60: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5d58: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5d50: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5d48: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5d40: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5d38: [top + 0] <- 0x148a89a82311 ;  accumulator 0x148a89a82311 <undefined>  (input #12)
[deoptimizing (lazy): end 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> @22 => node=11, pc=0x1ddcf16401e0, caller sp=0x7fff5fbf5ec0, state=TOS_REGISTER, took 4.176 ms]
[deoptimizing (DEOPT soft): begin 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> (opt #3) @3, FP to SP delta: 48, caller sp: 0x7fff5fbf5be8]
            ;;; deoptimize at <internal/process/next_tick.js:259:36>, Insufficient type feedback for generic named access
  reading input frame nextTick => bytecode_offset=207, args=2, height=13; inputs:
      0: 0x148a53badbc1 ; [fp - 16] 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)>
      1: 0x148a2b5099a1 ; [fp + 24] 0x148a2b5099a1 <process map = 0x148a9c20a399>
      2: 0x148a380110d1 ; [fp + 16] 0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)>
      3: 0x148a53b99451 ; [fp - 8] 0x148a53b99451 <FixedArray[30]>
      4: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a37e70a01 ; [fp - 24] 0x148a37e70a01 <Arguments map = 0x148a9c206611>
     11: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148ad6e854f9 ; (literal 6) 0x148ad6e854f9 <JSFunction Array (sfi = 0x148a89aa7809)>
     13: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame nextTick => bytecode_offset=207, height=104
    0x7fff5fbf5be0: [top + 168] <- 0x148a2b5099a1 ;  0x148a2b5099a1 <process map = 0x148a9c20a399>  (input #1)
    0x7fff5fbf5bd8: [top + 160] <- 0x148a380110d1 ;  0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)>  (input #2)
    -------------------------
    0x7fff5fbf5bd0: [top + 152] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf5bc8: [top + 144] <- 0x7fff5fbf5c00 ;  caller's fp
    0x7fff5fbf5bc0: [top + 136] <- 0x148a53b99451 ;  context    0x148a53b99451 <FixedArray[30]>  (input #3)
    0x7fff5fbf5bb8: [top + 128] <- 0x148a53badbc1 ;  function    0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)>  (input #0)
    0x7fff5fbf5bb0: [top + 120] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5ba8: [top + 112] <- 0x148af3d6b389 ;  bytecode array 0x148af3d6b389 <BytecodeArray[406]>  (input #0)
    0x7fff5fbf5ba0: [top + 104] <- 0x10400000000 ;  bytecode offset @ 207
    -------------------------
    0x7fff5fbf5b98: [top + 96] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5b90: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5b88: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5b80: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5b78: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5b70: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5b68: [top + 48] <- 0x148a37e70a01 ;  0x148a37e70a01 <Arguments map = 0x148a9c206611>  (input #10)
    0x7fff5fbf5b60: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5b58: [top + 32] <- 0x148ad6e854f9 ;  0x148ad6e854f9 <JSFunction Array (sfi = 0x148a89aa7809)>  (input #12)
    0x7fff5fbf5b50: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5b48: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5b40: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5b38: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (soft): end 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> @3 => node=207, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5be8, state=TOS_REGISTER, took 3.163 ms]
[removing optimized code for: 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)>]
[deoptimizing (DEOPT eager): begin 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> (opt #6) @11, FP to SP delta: 72, caller sp: 0x7fff5fbf6230]
            ;;; deoptimize at <internal/process/next_tick.js:133:20> inlined at <internal/process/next_tick.js:180:9>, wrong map
  reading input frame _tickCallback => bytecode_offset=103, args=1, height=7; inputs:
      0: 0x148a2b50c291 ; [fp - 16] 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)>
      1: 0x148a2b5099a1 ; [fp + 16] 0x148a2b5099a1 <process map = 0x148a9c20a399>
      2: 0x148a53b99451 ; [fp - 8] 0x148a53b99451 <FixedArray[30]>
      3: 0x148a37e70ac1 ; [fp - 24] 0x148a37e70ac1 <TickObject map = 0x148a9c24cd39>
      4: 0x148a380110d1 ; [fp - 32] 0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)>
      5: 0x148a37e70a21 ; r8 0x148a37e70a21 <JSArray[4]>
      6: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame emitBeforeScript => bytecode_offset=48, args=3, height=4; inputs:
      0: 0x148a53b99fc1 ; (literal 15) 0x148a53b99fc1 <JSFunction emitBeforeScript (sfi = 0x148a5a8a03b9)>
      1: 0x148a89a82311 ; (literal 16) 0x148a89a82311 <undefined>
      2: 8.279000e+03 ; (double) [fp - 48] 
      3: 8.273000e+03 ; (double) [fp - 56] 
      4: 0x148a53b99719 ; (literal 17) 0x148a53b99719 <FixedArray[49]>
      5: 0x148a2b50bf71 ; (literal 18) 0x148a2b50bf71 <Uint32Array map = 0x148a9c2031d1>
      6: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x100000000 ; (literal 19) 1
  translating interpreted frame _tickCallback => bytecode_offset=103, height=48
    0x7fff5fbf6228: [top + 104] <- 0x148a2b5099a1 ;  0x148a2b5099a1 <process map = 0x148a9c20a399>  (input #1)
    -------------------------
    0x7fff5fbf6220: [top + 96] <- 0x1ddcf163e479 ;  caller's pc
    0x7fff5fbf6218: [top + 88] <- 0x7fff5fbf6248 ;  caller's fp
    0x7fff5fbf6210: [top + 80] <- 0x148a53b99451 ;  context    0x148a53b99451 <FixedArray[30]>  (input #2)
    0x7fff5fbf6208: [top + 72] <- 0x148a2b50c291 ;  function    0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)>  (input #0)
    0x7fff5fbf6200: [top + 64] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf61f8: [top + 56] <- 0x148af3d62d61 ;  bytecode array 0x148af3d62d61 <BytecodeArray[257]>  (input #0)
    0x7fff5fbf61f0: [top + 48] <- 0x9c00000000 ;  bytecode offset @ 103
    -------------------------
    0x7fff5fbf61e8: [top + 40] <- 0x148a37e70ac1 ;  0x148a37e70ac1 <TickObject map = 0x148a9c24cd39>  (input #3)
    0x7fff5fbf61e0: [top + 32] <- 0x148a380110d1 ;  0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)>  (input #4)
    0x7fff5fbf61d8: [top + 24] <- 0x148a37e70a21 ;  0x148a37e70a21 <JSArray[4]>  (input #5)
    0x7fff5fbf61d0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf61c8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf61c0: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
  translating interpreted frame emitBeforeScript => bytecode_offset=48, height=32
    0x7fff5fbf61b8: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf61b0: [top + 96] <- 0x148a89a82499 ;  0x148a89a82499 <Odd Oddball: arguments_marker>  (input #2)
    0x7fff5fbf61a8: [top + 88] <- 0x148a89a82499 ;  0x148a89a82499 <Odd Oddball: arguments_marker>  (input #3)
    -------------------------
    0x7fff5fbf61a0: [top + 80] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf6198: [top + 72] <- 0x7fff5fbf6218 ;  caller's fp
    0x7fff5fbf6190: [top + 64] <- 0x148a53b99719 ;  context    0x148a53b99719 <FixedArray[49]>  (input #4)
    0x7fff5fbf6188: [top + 56] <- 0x148a53b99fc1 ;  function    0x148a53b99fc1 <JSFunction emitBeforeScript (sfi = 0x148a5a8a03b9)>  (input #0)
    0x7fff5fbf6180: [top + 48] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6178: [top + 40] <- 0x148af3d63489 ;  bytecode array 0x148af3d63489 <BytecodeArray[71]>  (input #0)
    0x7fff5fbf6170: [top + 32] <- 0x6500000000 ;  bytecode offset @ 48
    -------------------------
    0x7fff5fbf6168: [top + 24] <- 0x148a2b50bf71 ;  0x148a2b50bf71 <Uint32Array map = 0x148a9c2031d1>  (input #5)
    0x7fff5fbf6160: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf6158: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf6150: [top + 0] <- 0x100000000 ;  accumulator 1  (input #8)
[deoptimizing (eager): end 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> @11 => node=48, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6230, state=TOS_REGISTER, took 2.156 ms]
Materialization [0x7fff5fbf61b0] <- 0x205700000000 ;  8279
Materialization [0x7fff5fbf61a8] <- 0x205100000000 ;  8273
[removing optimized code for: 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)>]
[marking 0x148a754f31c9 <JSFunction matchKnownFields (sfi = 0x148af3d10a49)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 45/78 (57%), generic ICs: 0/78 (0%)]
[compiling method 0x148a754f31c9 <JSFunction matchKnownFields (sfi = 0x148af3d10a49)> using TurboFan]
[marking 0x148a53b9a009 <JSFunction emitAfterScript (sfi = 0x148a5a8a0481)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/5 (80%), generic ICs: 0/5 (0%)]
[compiling method 0x148a53b9a009 <JSFunction emitAfterScript (sfi = 0x148a5a8a0481)> using TurboFan]
Candidates for inlining (size=1):
  #16:JSCall, frequency: 1
  - size:30, name: validateAsyncId
Inlining validateAsyncId into emitAfterScript
[optimizing 0x148a754f31c9 <JSFunction matchKnownFields (sfi = 0x148af3d10a49)> - took 0.593, 3.336, 0.022 ms]
[completed optimizing 0x148a754f31c9 <JSFunction matchKnownFields (sfi = 0x148af3d10a49)>]
[optimizing 0x148a53b9a009 <JSFunction emitAfterScript (sfi = 0x148a5a8a0481)> - took 0.392, 0.335, 0.012 ms]
[completed optimizing 0x148a53b9a009 <JSFunction emitAfterScript (sfi = 0x148a5a8a0481)>]
[marking 0x148a53b8e181 <JSFunction TickObject (sfi = 0x148a5a89dee1)> for optimized recompilation, reason: small function, ICs with typeinfo: 7/7 (100%), generic ICs: 2/7 (28%)]
[compiling method 0x148a53b8e181 <JSFunction TickObject (sfi = 0x148a5a89dee1)> using TurboFan]
[optimizing 0x148a53b8e181 <JSFunction TickObject (sfi = 0x148a5a89dee1)> - took 0.156, 0.807, 0.055 ms]
[completed optimizing 0x148a53b8e181 <JSFunction TickObject (sfi = 0x148a5a89dee1)>]
[marking 0x148a53502689 <JSFunction isRequest (sfi = 0x148af3d25799)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/3 (66%), generic ICs: 0/3 (0%)]
[compiling method 0x148a53502689 <JSFunction isRequest (sfi = 0x148af3d25799)> using TurboFan]
[optimizing 0x148a53502689 <JSFunction isRequest (sfi = 0x148af3d25799)> - took 0.114, 0.342, 0.014 ms]
[completed optimizing 0x148a53502689 <JSFunction isRequest (sfi = 0x148af3d25799)>]
[marking 0x148a53b99f31 <JSFunction initTriggerId (sfi = 0x148a5a8a0099)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x148a53b99f31 <JSFunction initTriggerId (sfi = 0x148a5a8a0099)> using TurboFan]
[optimizing 0x148a53b99f31 <JSFunction initTriggerId (sfi = 0x148a5a8a0099)> - took 0.174, 0.531, 0.008 ms]
[completed optimizing 0x148a53b99f31 <JSFunction initTriggerId (sfi = 0x148a5a8a0099)>]
[marking 0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 26/54 (48%), generic ICs: 6/54 (11%)]
[compiling method 0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)> using TurboFan]
Candidates for inlining (size=1):
  #215:JSCall, frequency: 0.321862
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into _addListener
Inlining small function(s) at call site #324:JSCall
Inlining get into _addListener
[marking 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 35/49 (71%), generic ICs: 6/49 (12%)]
[optimizing 0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)> - took 0.430, 2.122, 0.024 ms]
[completed optimizing 0x148a2b543ff1 <JSFunction _addListener (sfi = 0x148ad6ebb819)>]
[compiling method 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> using TurboFan]
[marking 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 33/43 (76%), generic ICs: 0/43 (0%)]
[compiling method 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> using TurboFan]
Candidates for inlining (size=3):
  #259:JSCall, frequency: 1.00029
  - size:42, name: push
  #247:JSConstruct, frequency: 1.00029
  - size:34, name: TickObject
  #232:JSCall, frequency: 1.00029
  - size:27, name: initTriggerId
Inlining push into nextTick
Candidates for inlining (size=2):
  #247:JSConstruct, frequency: 1.00029
  - size:34, name: TickObject
  #232:JSCall, frequency: 1.00029
  - size:27, name: initTriggerId
Inlining TickObject into nextTick
Candidates for inlining (size=1):
  #232:JSCall, frequency: 1.00029
  - size:27, name: initTriggerId
Inlining initTriggerId into nextTick
[optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> - took 0.361, 2.276, 0.027 ms]
[completed optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
[marking 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/28 (89%), generic ICs: 3/28 (10%)]
[compiling method 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> using TurboFan]
Candidates for inlining (size=6):
  #259:JSCall, frequency: 12.568
  - size:19, name: emitAfterScript
  #231:JSCall, frequency: 12.568
  - size:65, name: _combinedTickCallback
  #172:JSCall, frequency: 12.5653
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining emitAfterScript into _tickCallback
Candidates for inlining (size=6):
  #481:JSCall, frequency: 12.568
  - size:30, name: validateAsyncId
  #231:JSCall, frequency: 12.568
  - size:65, name: _combinedTickCallback
  #172:JSCall, frequency: 12.5653
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=5):
  #231:JSCall, frequency: 12.568
  - size:65, name: _combinedTickCallback
  #172:JSCall, frequency: 12.5653
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining _combinedTickCallback into _tickCallback
Candidates for inlining (size=4):
  #172:JSCall, frequency: 12.5653
  - size:25, name: emitBeforeScript
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining emitBeforeScript into _tickCallback
Candidates for inlining (size=5):
  #765:JSCall, frequency: 12.5653
  - size:30, name: validateAsyncId
  #757:JSCall, frequency: 12.5653
  - size:30, name: validateAsyncId
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=4):
  #757:JSCall, frequency: 12.5653
  - size:30, name: validateAsyncId
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=3):
  #119:JSCall, frequency: 12.5653
  - size:52, name: shift
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining shift into _tickCallback
Candidates for inlining (size=2):
  #318:JSCall, frequency: 1.00267
  - size:83, name: emitPendingUnhandledRejections
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining emitPendingUnhandledRejections into _tickCallback
Candidates for inlining (size=1):
  #298:JSCall, frequency: 1.00267
  - size:43, name: tickDone
Inlining tickDone into _tickCallback
Candidates for inlining (size=1):
  #1192:JSCall, frequency: 1.00267
  - size:18, name: clear
Inlining clear into _tickCallback
[optimizing 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)> - took 1.036, 2.385, 0.032 ms]
[completed optimizing 0x148a53badbc1 <JSFunction nextTick (sfi = 0x148a5a89dd51)>]
[optimizing 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)> - took 2.599, 2.603, 0.036 ms]
[completed optimizing 0x148a2b50c291 <JSFunction _tickCallback (sfi = 0x148a5a89dbc1)>]
[marking 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/54 (31%), generic ICs: 3/54 (5%)]
[compiling method 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> using TurboFan]
Candidates for inlining (size=2):
  #142:JSCall, frequency: 0.191967
  - size:52, name: emitOne
  #164:JSCall, frequency: 0.157931
  - size:54, name: emitTwo
Inlining emitOne into emit
Candidates for inlining (size=1):
  #164:JSCall, frequency: 0.157931
  - size:54, name: emitTwo
Inlining emitTwo into emit
[optimizing 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> - took 0.490, 1.523, 0.026 ms]
[completed optimizing 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>]
[marking 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> using TurboFan]
Candidates for inlining (size=1):
  #17:JSCall, frequency: 1
  - size:230, name: _addListener
Inlining _addListener into addListener
Candidates for inlining (size=1):
  #236:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into addListener
Inlining small function(s) at call site #344:JSCall
Inlining get into addListener
[optimizing 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)> - took 0.513, 1.628, 0.019 ms]
[completed optimizing 0x148ad6ebd761 <JSFunction addListener (sfi = 0x148ad6ebc179)>]
[deoptimizing (DEOPT eager): begin 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> (opt #12) @1, FP to SP delta: 40, caller sp: 0x7fff5fbf6120]
            ;;; deoptimize at <_http_common.js:234:10>, wrong map
  reading input frame httpSocketSetup => bytecode_offset=0, args=2, height=5; inputs:
      0: 0x148a754f2f91 ; [fp - 16] 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)>
      1: 0x148a89a82311 ; [fp + 24] 0x148a89a82311 <undefined>
      2: 0x148a38042619 ; rdi 0x148a38042619 <Socket map = 0x148a9c251511>
      3: 0x148a75484d41 ; [fp - 8] 0x148a75484d41 <FixedArray[23]>
      4: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame httpSocketSetup => bytecode_offset=0, height=40
    0x7fff5fbf6118: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf6110: [top + 96] <- 0x148a38042619 ;  0x148a38042619 <Socket map = 0x148a9c251511>  (input #2)
    -------------------------
    0x7fff5fbf6108: [top + 88] <- 0x1ddcf1674ed2 ;  caller's pc
    0x7fff5fbf6100: [top + 80] <- 0x7fff5fbf6128 ;  caller's fp
    0x7fff5fbf60f8: [top + 72] <- 0x148a75484d41 ;  context    0x148a75484d41 <FixedArray[23]>  (input #3)
    0x7fff5fbf60f0: [top + 64] <- 0x148a754f2f91 ;  function    0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)>  (input #0)
    0x7fff5fbf60e8: [top + 56] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf60e0: [top + 48] <- 0x148af3d67f39 ;  bytecode array 0x148af3d67f39 <BytecodeArray[47]>  (input #0)
    0x7fff5fbf60d8: [top + 40] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf60d0: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf60c8: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf60c0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf60b8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf60b0: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
[deoptimizing (eager): end 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> @1 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6120, state=TOS_REGISTER, took 0.916 ms]
[removing optimized code for: 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)>]
[deoptimizing (DEOPT eager): begin 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> (opt #23) @4, FP to SP delta: 56, caller sp: 0x7fff5fbf6120]
            ;;; deoptimize at <events.js:369:37>, wrong map
  reading input frame removeListener => bytecode_offset=52, args=3, height=12; inputs:
      0: 0x148ad6ebd881 ; [fp - 16] 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>
      1: 0x148a38042619 ; [fp + 32] 0x148a38042619 <Socket map = 0x148a9c251511>
      2: 0x148a89ab80a1 ; [fp + 24] 0x148a89ab80a1 <String[5]: error>
      3: 0x148a38007eb1 ; [fp + 16] 0x148a38007eb1 <JSFunction freeSocketErrorListener (sfi = 0x148af3d09c29)>
      4: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      5: 0x148a72e8cbe1 ; rbx 0x148a72e8cbe1 <JSBoundFunction (BoundTargetFunction 0x148a53ba9509)>
      6: 0x148a380427d1 ; [fp - 40] 0x148a380427d1 <Object map = 0x148a9c206669>
      7: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a82311 ; (literal 2) 0x148a89a82311 <undefined>
     10: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a38007eb1 ; [fp + 16] 0x148a38007eb1 <JSFunction freeSocketErrorListener (sfi = 0x148af3d09c29)>
  translating interpreted frame removeListener => bytecode_offset=52, height=96
    0x7fff5fbf6118: [top + 168] <- 0x148a38042619 ;  0x148a38042619 <Socket map = 0x148a9c251511>  (input #1)
    0x7fff5fbf6110: [top + 160] <- 0x148a89ab80a1 ;  0x148a89ab80a1 <String[5]: error>  (input #2)
    0x7fff5fbf6108: [top + 152] <- 0x148a38007eb1 ;  0x148a38007eb1 <JSFunction freeSocketErrorListener (sfi = 0x148af3d09c29)>  (input #3)
    -------------------------
    0x7fff5fbf6100: [top + 144] <- 0x1ddcf167474a ;  caller's pc
    0x7fff5fbf60f8: [top + 136] <- 0x7fff5fbf6128 ;  caller's fp
    0x7fff5fbf60f0: [top + 128] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #4)
    0x7fff5fbf60e8: [top + 120] <- 0x148ad6ebd881 ;  function    0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>  (input #0)
    0x7fff5fbf60e0: [top + 112] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf60d8: [top + 104] <- 0x148af3d68179 ;  bytecode array 0x148af3d68179 <BytecodeArray[364]>  (input #0)
    0x7fff5fbf60d0: [top + 96] <- 0x6900000000 ;  bytecode offset @ 52
    -------------------------
    0x7fff5fbf60c8: [top + 88] <- 0x148a72e8cbe1 ;  0x148a72e8cbe1 <JSBoundFunction (BoundTargetFunction 0x148a53ba9509)>  (input #5)
    0x7fff5fbf60c0: [top + 80] <- 0x148a380427d1 ;  0x148a380427d1 <Object map = 0x148a9c206669>  (input #6)
    0x7fff5fbf60b8: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf60b0: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf60a8: [top + 56] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #9)
    0x7fff5fbf60a0: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf6098: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6090: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf6088: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf6080: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf6078: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf6070: [top + 0] <- 0x148a38007eb1 ;  accumulator 0x148a38007eb1 <JSFunction freeSocketErrorListener (sfi = 0x148af3d09c29)>  (input #16)
[deoptimizing (eager): end 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> @4 => node=52, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6120, state=TOS_REGISTER, took 1.701 ms]
[removing optimized code for: 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
[marking 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 56/67 (83%), generic ICs: 1/67 (1%)]
[compiling method 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> using TurboFan]
Candidates for inlining (size=8):
  #117:JSCall, frequency: 1.0002
  - size:90, name: howMuchToRead
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #217:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #172:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.390558
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.299454
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining howMuchToRead into Readable.read
Candidates for inlining (size=7):
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #217:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #172:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.390558
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.299454
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=6):
  #217:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #172:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.390558
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.299454
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=5):
  #172:JSCall, frequency: 0.633437
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.390558
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.299454
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=4):
  #258:JSCall, frequency: 0.390558
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.299454
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=3):
  #148:JSCall, frequency: 0.299454
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining endReadable into Readable.read
Candidates for inlining (size=3):
  #786:JSCall, frequency: 0.299454
  - size:167, name: nextTick
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining nextTick into Readable.read
Candidates for inlining (size=5):
  #1066:JSCall, frequency: 0.299537
  - size:42, name: push
  #1054:JSConstruct, frequency: 0.299537
  - size:34, name: TickObject
  #1039:JSCall, frequency: 0.299537
  - size:27, name: initTriggerId
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining push into Readable.read
Candidates for inlining (size=4):
  #1054:JSConstruct, frequency: 0.299537
  - size:34, name: TickObject
  #1039:JSCall, frequency: 0.299537
  - size:27, name: initTriggerId
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining TickObject into Readable.read
Candidates for inlining (size=3):
  #1039:JSCall, frequency: 0.299537
  - size:27, name: initTriggerId
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining initTriggerId into Readable.read
Candidates for inlining (size=2):
  #320:JSCall, frequency: 0.242879
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
Inlining Socket._read into Readable.read
Candidates for inlining (size=2):
  #1550:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
  #282:JSCall, frequency: 0.242879
  - size:0, name: debugs.(anonymous function)
[optimizing 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> - took 3.912, 9.353, 0.085 ms]
[completed optimizing 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>]
[marking 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/7 (85%), generic ICs: 2/7 (28%)]
[compiling method 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)> using TurboFan]
Candidates for inlining (size=2):
  #36:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #64:JSCall, frequency: 0.687096
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining debugs.(anonymous function) into flow
Candidates for inlining (size=1):
  #64:JSCall, frequency: 0.687096
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining Socket.read into flow
[optimizing 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)> - took 0.512, 2.347, 0.062 ms]
[completed optimizing 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)>]
[marking 0x148a53ba1211 <JSFunction args (sfi = 0x148ad6ee5b09)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148a53ba1211 <JSFunction args (sfi = 0x148ad6ee5b09)> using TurboFan]
[optimizing 0x148a53ba1211 <JSFunction args (sfi = 0x148ad6ee5b09)> - took 0.093, 0.450, 0.013 ms]
[completed optimizing 0x148a53ba1211 <JSFunction args (sfi = 0x148ad6ee5b09)>]
[marking 0x148a785b3dd9 <JSFunction Stream (sfi = 0x148a5a8ec789)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a785b3dd9 <JSFunction Stream (sfi = 0x148a5a8ec789)> using TurboFan]
Inlining small function(s) at call site #31:JSCall
Inlining EventEmitter into Stream
Candidates for inlining (size=1):
  #63:JSCall, frequency: 1
  - size:83, name: EventEmitter.init
Inlining EventEmitter.init into Stream
[optimizing 0x148a785b3dd9 <JSFunction Stream (sfi = 0x148a5a8ec789)> - took 0.333, 1.691, 0.029 ms]
[completed optimizing 0x148a785b3dd9 <JSFunction Stream (sfi = 0x148a5a8ec789)>]
[marking 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 35/49 (71%), generic ICs: 6/49 (12%)]
[compiling method 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> using TurboFan]
Candidates for inlining (size=1):
  #263:JSCall, frequency: 0.204508
  - size:54, name: spliceOne
Inlining spliceOne into removeListener
[optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> - took 0.499, 3.816, 0.044 ms]
[completed optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
[marking 0x148a53ba9551 <JSFunction _onceWrap (sfi = 0x148ad6ebb9a9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/9 (100%), generic ICs: 0/9 (0%)]
[compiling method 0x148a53ba9551 <JSFunction _onceWrap (sfi = 0x148ad6ebb9a9)> using TurboFan]
[optimizing 0x148a53ba9551 <JSFunction _onceWrap (sfi = 0x148ad6ebb9a9)> - took 0.135, 0.597, 0.013 ms]
[completed optimizing 0x148a53ba9551 <JSFunction _onceWrap (sfi = 0x148ad6ebb9a9)>]
[marking 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/27 (92%), generic ICs: 0/27 (0%)]
[compiling method 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)> using TurboFan]
Candidates for inlining (size=1):
  #25:JSCall, frequency: 0.554482
  - size:29, name: decodeChunk
Inlining decodeChunk into writeOrBuffer
[optimizing 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)> - took 0.392, 1.772, 0.093 ms]
[completed optimizing 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)>]
[marking 0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 1/6 (16%)]
[compiling method 0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)> using TurboFan]
Candidates for inlining (size=2):
  #46:JSCall, frequency: 1
  - size:38, name: finishMaybe
  #23:JSCall, frequency: 1
  - size:23, name: onwriteDrain
Inlining finishMaybe into afterWrite
Candidates for inlining (size=2):
  #75:JSCall, frequency: 1
  - size:26, name: needFinish
  #23:JSCall, frequency: 1
  - size:23, name: onwriteDrain
Inlining needFinish into afterWrite
Candidates for inlining (size=1):
  #23:JSCall, frequency: 1
  - size:23, name: onwriteDrain
Inlining onwriteDrain into afterWrite
[optimizing 0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)> - took 0.478, 0.770, 0.016 ms]
[completed optimizing 0x148a380110d1 <JSFunction afterWrite (sfi = 0x148a5a8f4551)>]
[marking 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/9 (100%), generic ICs: 0/9 (0%)]
[compiling method 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> using TurboFan]
Candidates for inlining (size=1):
  #37:JSCall, frequency: 0.734256
  - size:33, name: arrayClone
Inlining arrayClone into emitNone
[optimizing 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> - took 0.290, 1.501, 0.078 ms]
[completed optimizing 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)>]
[marking 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 47/63 (74%), generic ICs: 1/63 (1%)]
[compiling method 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)> using TurboFan]
Candidates for inlining (size=3):
  #69:JSCall, frequency: 0.596449
  - size:28, name: _unrefTimer
  #48:JSCall, frequency: 0.403551
  - size:28, name: once
  #296:JSCall, frequency: 0.330508
  - size:78, name: createWriteReq
Inlining _unrefTimer into Socket._writeGeneric
Inlining small function(s) at call site #591:JSCall
Inlining exports._unrefActive into Socket._writeGeneric
Candidates for inlining (size=3):
  #616:JSCall, frequency: 0.596449
  - size:134, name: insert
  #48:JSCall, frequency: 0.403551
  - size:28, name: once
  #296:JSCall, frequency: 0.330508
  - size:78, name: createWriteReq
Inlining insert into Socket._writeGeneric
Candidates for inlining (size=2):
  #48:JSCall, frequency: 0.403551
  - size:28, name: once
  #296:JSCall, frequency: 0.330508
  - size:78, name: createWriteReq
Inlining once into Socket._writeGeneric
Candidates for inlining (size=3):
  #1137:JSCall, frequency: 0.403551
  - size:101, name: Readable.on
  - size:56, name: socketOnWrap
  #1131:JSCall, frequency: 0.403551
  - size:42, name: _onceWrap
  #296:JSCall, frequency: 0.330508
  - size:78, name: createWriteReq
Inlining Readable.on into Socket._writeGeneric
Inlining socketOnWrap into Socket._writeGeneric
Candidates for inlining (size=4):
  #1307:JSCall, frequency: 0.403551
  - size:101, name: Readable.on
  #1212:JSCall, frequency: 0.403551
  - size:11, name: addListener
  #1131:JSCall, frequency: 0.403551
  - size:42, name: _onceWrap
  #296:JSCall, frequency: 0.330508
  - size:78, name: createWriteReq
Inlining Readable.on into Socket._writeGeneric
Candidates for inlining (size=4):
  #1434:JSCall, frequency: 0.403551
  - size:11, name: addListener
  #1212:JSCall, frequency: 0.403551
  - size:11, name: addListener
  #1131:JSCall, frequency: 0.403551
  - size:42, name: _onceWrap
  #296:JSCall, frequency: 0.330508
  - size:78, name: createWriteReq
[marking 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 28/37 (75%), generic ICs: 1/37 (2%)]
[compiling method 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> using TurboFan]
Candidates for inlining (size=3):
  #123:JSCall, frequency: 0.407298
  - size:33, name: Socket.write
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining Socket.write into _writeRaw
Candidates for inlining (size=3):
  #422:JSCall, frequency: 0.407298
  - size:130, name: Writable.write
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining Writable.write into _writeRaw
Inlining small function(s) at call site #484:JSCall
Inlining isUint8Array into _writeRaw
Candidates for inlining (size=5):
  #677:JSCall, frequency: 0.407298
  - size:19, name: args
  #634:JSCall, frequency: 0.407298
  - size:158, name: writeOrBuffer
  #605:JSCall, frequency: 0.221851
  - size:71, name: validChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining args into _writeRaw
Candidates for inlining (size=4):
  #634:JSCall, frequency: 0.407298
  - size:158, name: writeOrBuffer
  #605:JSCall, frequency: 0.221851
  - size:71, name: validChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining writeOrBuffer into _writeRaw
Candidates for inlining (size=4):
  #761:JSCall, frequency: 0.225288
  - size:29, name: decodeChunk
  #605:JSCall, frequency: 0.221851
  - size:71, name: validChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining decodeChunk into _writeRaw
Candidates for inlining (size=3):
  #605:JSCall, frequency: 0.221851
  - size:71, name: validChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining validChunk into _writeRaw
Candidates for inlining (size=2):
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
[marking 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/9 (55%), generic ICs: 0/9 (0%)]
[compiling method 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)> using TurboFan]
[optimizing 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)> - took 0.112, 0.457, 0.013 ms]
[completed optimizing 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)>]
[marking 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/13 (84%), generic ICs: 0/13 (0%)]
[compiling method 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> using TurboFan]
Candidates for inlining (size=1):
  #105:JSCall, frequency: 1.19656
  - size:116, name: _addHeaderLine
Inlining _addHeaderLine into _addHeaderLines
[optimizing 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)> - took 2.270, 6.636, 0.224 ms]
[completed optimizing 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)>]
[optimizing 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)> - took 0.520, 1.531, 0.019 ms]
[completed optimizing 0x148a754f3139 <JSFunction _addHeaderLines (sfi = 0x148af3d10981)>]
[marking 0x148a2de88c51 <JSFunction (sfi = 0x148a785effb1)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x148a2de88c51 <JSFunction (sfi = 0x148a785effb1)> using TurboFan]
Candidates for inlining (size=1):
  #33:JSCall, frequency: 1
  - size:39, name: destroyer
Inlining destroyer into 
Candidates for inlining (size=3):
  #100:JSCall, frequency: 1
  - size:227, name: eos
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining eos into 
Candidates for inlining (size=11):
  #409:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.499631
  - size:11, name: addListener
  #309:JSCall, frequency: 0.499631
  - size:11, name: addListener
Inlining addListener into 
Inlining Readable.on into 
Candidates for inlining (size=12):
  #559:JSCall, frequency: 1
  - size:11, name: addListener
  #513:JSCall, frequency: 1
  - size:230, name: _addListener
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.499631
  - size:11, name: addListener
  #309:JSCall, frequency: 0.499631
  - size:11, name: addListener
Inlining addListener into 
Candidates for inlining (size=12):
  #660:JSCall, frequency: 1
  - size:230, name: _addListener
  #513:JSCall, frequency: 1
  - size:230, name: _addListener
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.499631
  - size:11, name: addListener
  #309:JSCall, frequency: 0.499631
  - size:11, name: addListener
Inlining _addListener into 
Not considering call site #875:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=11):
  #513:JSCall, frequency: 1
  - size:230, name: _addListener
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.499631
  - size:11, name: addListener
  #309:JSCall, frequency: 0.499631
  - size:11, name: addListener
[optimizing 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> - took 2.156, 5.944, 0.112 ms]
[completed optimizing 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)>]
[marking 0x148a5a8f2dc1 <JSFunction Readable.pipe (sfi = 0x148a5a8efa49)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 32/47 (68%), generic ICs: 0/47 (0%)]
[compiling method 0x148a5a8f2dc1 <JSFunction Readable.pipe (sfi = 0x148a5a8efa49)> using TurboFan]
Inlining small function(s) at call site #236:JSCall
Inlining pipeOnDrain into Readable.pipe
Candidates for inlining (size=8):
  #300:JSCall, frequency: 1
  - size:28, name: once
  #287:JSCall, frequency: 1
  - size:28, name: once
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining once into Readable.pipe
Candidates for inlining (size=9):
  #446:JSCall, frequency: 1
  - size:11, name: addListener
  #440:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #287:JSCall, frequency: 1
  - size:28, name: once
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining addListener into Readable.pipe
Candidates for inlining (size=9):
  #468:JSCall, frequency: 1
  - size:230, name: _addListener
  #440:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #287:JSCall, frequency: 1
  - size:28, name: once
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining _addListener into Readable.pipe
Candidates for inlining (size=9):
  #440:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #287:JSCall, frequency: 1
  - size:28, name: once
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #683:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining _onceWrap into Readable.pipe
Candidates for inlining (size=8):
  #287:JSCall, frequency: 1
  - size:28, name: once
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #683:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining once into Readable.pipe
Candidates for inlining (size=9):
  #882:JSCall, frequency: 1
  - size:11, name: addListener
  #876:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #683:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining addListener into Readable.pipe
Candidates for inlining (size=9):
  #902:JSCall, frequency: 1
  - size:230, name: _addListener
  #876:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #683:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining _addListener into Readable.pipe
Candidates for inlining (size=9):
  #876:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #274:JSCall, frequency: 1
  - size:67, name: prependListener
  #265:JSCall, frequency: 1
  - size:101, name: Readable.on
  #250:JSCall, frequency: 1
  - size:11, name: addListener
  #229:JSCall, frequency: 1
  - size:11, name: addListener
  #216:JSCall, frequency: 1
  - size:28, name: once
  #117:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #1114:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
  #683:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a2de88c51 <JSFunction (sfi = 0x148a785effb1)> - took 2.817, 6.160, 0.052 ms]
[completed optimizing 0x148a2de88c51 <JSFunction (sfi = 0x148a785effb1)>]
[marking 0x148a3807f6f1 <JSFunction wrapper (sfi = 0x148af3d24649)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 18/20 (90%), generic ICs: 0/20 (0%)]
[compiling method 0x148a3807f6f1 <JSFunction wrapper (sfi = 0x148af3d24649)> using TurboFan]
Candidates for inlining (size=1):
  #202:JSCall, frequency: 1
  - size:0, name: 
[optimizing 0x148a3807f6f1 <JSFunction wrapper (sfi = 0x148af3d24649)> - took 0.314, 1.728, 0.051 ms]
[completed optimizing 0x148a3807f6f1 <JSFunction wrapper (sfi = 0x148af3d24649)>]
[marking 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/14 (85%), generic ICs: 0/14 (0%)]
[compiling method 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)> using TurboFan]
Candidates for inlining (size=4):
  #48:JSCall, frequency: 1
  - size:26, name: needFinish
  #31:JSCall, frequency: 1
  - size:33, name: onwriteStateUpdate
  #106:JSCall, frequency: 0.510006
  - size:167, name: nextTick
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining needFinish into onwrite
Candidates for inlining (size=3):
  #31:JSCall, frequency: 1
  - size:33, name: onwriteStateUpdate
  #106:JSCall, frequency: 0.510006
  - size:167, name: nextTick
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining onwriteStateUpdate into onwrite
Candidates for inlining (size=2):
  #106:JSCall, frequency: 0.510006
  - size:167, name: nextTick
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining nextTick into onwrite
Candidates for inlining (size=4):
  #520:JSCall, frequency: 0.510149
  - size:42, name: push
  #508:JSConstruct, frequency: 0.510149
  - size:34, name: TickObject
  #493:JSCall, frequency: 0.510149
  - size:27, name: initTriggerId
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining push into onwrite
Candidates for inlining (size=3):
  #508:JSConstruct, frequency: 0.510149
  - size:34, name: TickObject
  #493:JSCall, frequency: 0.510149
  - size:27, name: initTriggerId
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining TickObject into onwrite
Candidates for inlining (size=2):
  #493:JSCall, frequency: 0.510149
  - size:27, name: initTriggerId
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining initTriggerId into onwrite
Candidates for inlining (size=1):
  #113:JSCall, frequency: 0.489994
  - size:21, name: afterWrite
Inlining afterWrite into onwrite
Candidates for inlining (size=2):
  #1022:JSCall, frequency: 0.489994
  - size:38, name: finishMaybe
  #998:JSCall, frequency: 0.489994
  - size:23, name: onwriteDrain
Inlining finishMaybe into onwrite
Candidates for inlining (size=2):
  #1049:JSCall, frequency: 0.489994
  - size:26, name: needFinish
  #998:JSCall, frequency: 0.489994
  - size:23, name: onwriteDrain
Inlining needFinish into onwrite
Candidates for inlining (size=1):
  #998:JSCall, frequency: 0.489994
  - size:23, name: onwriteDrain
[optimizing 0x148a5a8f2dc1 <JSFunction Readable.pipe (sfi = 0x148a5a8efa49)> - took 4.048, 5.779, 0.050 ms]
[completed optimizing 0x148a5a8f2dc1 <JSFunction Readable.pipe (sfi = 0x148a5a8efa49)>]
[marking dependent code 0x1ddcf17115e1 (opt #5) for deoptimization, reason: allocation-site-tenuring-changed]
[deoptimize marked code in all contexts]
[deoptimizer unlinked: ClientRequest / 148a754f3489]
[optimizing 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)> - took 2.210, 4.001, 0.073 ms]
[completed optimizing 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)>]
[marking 0x148a5a8f2e99 <JSFunction Readable.resume (sfi = 0x148a5a8efca1)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 1/5 (20%)]
[compiling method 0x148a5a8f2e99 <JSFunction Readable.resume (sfi = 0x148a5a8efca1)> using TurboFan]
Candidates for inlining (size=2):
  #50:JSCall, frequency: 0.560955
  - size:20, name: resume
  #39:JSCall, frequency: 0.560955
  - size:0, name: debugs.(anonymous function)
Inlining resume into Readable.resume
Candidates for inlining (size=2):
  #105:JSCall, frequency: 0.560955
  - size:167, name: nextTick
  #39:JSCall, frequency: 0.560955
  - size:0, name: debugs.(anonymous function)
Inlining nextTick into Readable.resume
Candidates for inlining (size=4):
  #380:JSCall, frequency: 0.561111
  - size:42, name: push
  #368:JSConstruct, frequency: 0.561111
  - size:34, name: TickObject
  #353:JSCall, frequency: 0.561111
  - size:27, name: initTriggerId
  #39:JSCall, frequency: 0.560955
  - size:0, name: debugs.(anonymous function)
Inlining push into Readable.resume
Candidates for inlining (size=3):
  #368:JSConstruct, frequency: 0.561111
  - size:34, name: TickObject
  #353:JSCall, frequency: 0.561111
  - size:27, name: initTriggerId
  #39:JSCall, frequency: 0.560955
  - size:0, name: debugs.(anonymous function)
Inlining TickObject into Readable.resume
Candidates for inlining (size=2):
  #353:JSCall, frequency: 0.561111
  - size:27, name: initTriggerId
  #39:JSCall, frequency: 0.560955
  - size:0, name: debugs.(anonymous function)
Inlining initTriggerId into Readable.resume
Candidates for inlining (size=1):
  #39:JSCall, frequency: 0.560955
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.resume
[optimizing 0x148a5a8f2e99 <JSFunction Readable.resume (sfi = 0x148a5a8efca1)> - took 1.472, 2.887, 0.046 ms]
[completed optimizing 0x148a5a8f2e99 <JSFunction Readable.resume (sfi = 0x148a5a8efca1)>]
[deoptimize marked code in all contexts]
[marking 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/23 (52%), generic ICs: 1/23 (4%)]
[compiling method 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> using TurboFan]
Candidates for inlining (size=1):
  #43:JSCall, frequency: 1
  - size:11, name: addListener
Inlining addListener into Readable.on
Candidates for inlining (size=1):
  #148:JSCall, frequency: 1
  - size:230, name: _addListener
Inlining _addListener into Readable.on
Candidates for inlining (size=1):
  #365:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into Readable.on
Inlining small function(s) at call site #473:JSCall
Inlining get into Readable.on
[marking 0x148a754f3321 <JSFunction OutgoingMessage (sfi = 0x148af3d12fb9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 26/26 (100%), generic ICs: 1/26 (3%)]
[marking 0x148a754f3369 <JSFunction _storeHeader (sfi = 0x148af3d13149)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 48/120 (40%), generic ICs: 4/120 (3%)]
[compiling method 0x148a754f3321 <JSFunction OutgoingMessage (sfi = 0x148af3d12fb9)> using TurboFan]
Inlining small function(s) at call site #31:JSCall
Inlining Stream into OutgoingMessage
Inlining small function(s) at call site #184:JSCall
Inlining EventEmitter into OutgoingMessage
Candidates for inlining (size=1):
  #213:JSCall, frequency: 1
  - size:83, name: EventEmitter.init
Inlining EventEmitter.init into OutgoingMessage
[optimizing 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)> - took 0.937, 2.368, 0.055 ms]
[completed optimizing 0x148a5a8f2e51 <JSFunction Readable.on (sfi = 0x148a5a8efbd9)>]
[compiling method 0x148a754f3369 <JSFunction _storeHeader (sfi = 0x148af3d13149)> using TurboFan]
Candidates for inlining (size=2):
  #177:JSCall, frequency: 0.650669
  - size:87, name: storeHeader
  #306:JSCall, frequency: 0.349331
  - size:39, name: utcDate
Inlining storeHeader into _storeHeader
Candidates for inlining (size=3):
  #901:JSCall, frequency: 0.650669
  - size:138, name: matchHeader
  #869:JSCall, frequency: 0.650669
  - size:14, name: escapeHeaderValue
  #306:JSCall, frequency: 0.349331
  - size:39, name: utcDate
Inlining matchHeader into _storeHeader
Candidates for inlining (size=2):
  #869:JSCall, frequency: 0.650669
  - size:14, name: escapeHeaderValue
  #306:JSCall, frequency: 0.349331
  - size:39, name: utcDate
Inlining escapeHeaderValue into _storeHeader
Candidates for inlining (size=1):
  #306:JSCall, frequency: 0.349331
  - size:39, name: utcDate
Inlining utcDate into _storeHeader
[optimizing 0x148a754f3321 <JSFunction OutgoingMessage (sfi = 0x148af3d12fb9)> - took 1.248, 3.871, 0.135 ms]
[completed optimizing 0x148a754f3321 <JSFunction OutgoingMessage (sfi = 0x148af3d12fb9)>]
[optimizing 0x148a754f3369 <JSFunction _storeHeader (sfi = 0x148af3d13149)> - took 2.383, 7.007, 0.093 ms]
[completed optimizing 0x148a754f3369 <JSFunction _storeHeader (sfi = 0x148af3d13149)>]
[deoptimizing (DEOPT eager): begin 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> (opt #38) @41, FP to SP delta: 104, caller sp: 0x7fff5fbf5b58]
            ;;; deoptimize at <_http_outgoing.js:283:27>, wrong map
  reading input frame _writeRaw => bytecode_offset=203, args=4, height=8; inputs:
      0: 0x148a754848d1 ; [fp - 16] 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)>
      1: 0x148a58ff62f9 ; rcx 0x148a58ff62f9 <ClientRequest map = 0x148a9c2505f1>
      2: 0x148a58ff7e91 ; r8 0x148a58ff7e91 <String[64]\: GET / HTTP/1.1\r\nHost: localhost:3001\r\nConnection: keep-alive\r\n\r\n>
      3: 0x148ad6ed46c1 ; r9 0x148ad6ed46c1 <String[6]: latin1>
      4: 0x148a58ff7ed1 ; rbx 0x148a58ff7ed1 <JSBoundFunction (BoundTargetFunction 0x148a38011e81)>
      5: 0x148a75484919 ; [fp - 8] 0x148a75484919 <FixedArray[30]>
      6: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame _writeRaw => bytecode_offset=203, height=64
    0x7fff5fbf5b50: [top + 144] <- 0x148a58ff62f9 ;  0x148a58ff62f9 <ClientRequest map = 0x148a9c2505f1>  (input #1)
    0x7fff5fbf5b48: [top + 136] <- 0x148a58ff7e91 ;  0x148a58ff7e91 <String[64]\: GET / HTTP/1.1\r\nHost: localhost:3001\r\nConnection: keep-alive\r\n\r\n>  (input #2)
    0x7fff5fbf5b40: [top + 128] <- 0x148ad6ed46c1 ;  0x148ad6ed46c1 <String[6]: latin1>  (input #3)
    0x7fff5fbf5b38: [top + 120] <- 0x148a58ff7ed1 ;  0x148a58ff7ed1 <JSBoundFunction (BoundTargetFunction 0x148a38011e81)>  (input #4)
    -------------------------
    0x7fff5fbf5b30: [top + 112] <- 0x1ddcf1674048 ;  caller's pc
    0x7fff5fbf5b28: [top + 104] <- 0x7fff5fbf5b90 ;  caller's fp
    0x7fff5fbf5b20: [top + 96] <- 0x148a75484919 ;  context    0x148a75484919 <FixedArray[30]>  (input #5)
    0x7fff5fbf5b18: [top + 88] <- 0x148a754848d1 ;  function    0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)>  (input #0)
    0x7fff5fbf5b10: [top + 80] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5b08: [top + 72] <- 0x148a785ba751 ;  bytecode array 0x148a785ba751 <BytecodeArray[239]>  (input #0)
    0x7fff5fbf5b00: [top + 64] <- 0x10000000000 ;  bytecode offset @ 203
    -------------------------
    0x7fff5fbf5af8: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5af0: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5ae8: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5ae0: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5ad8: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5ad0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5ac8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5ac0: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
[deoptimizing (eager): end 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> @41 => node=203, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5b58, state=TOS_REGISTER, took 2.106 ms]
[removing optimized code for: 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)>]
[deoptimizing (DEOPT eager): begin 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)> (opt #34) @6, FP to SP delta: 64, caller sp: 0x7fff5fbf5b10]
            ;;; deoptimize at <_stream_writable.js:348:42>, wrong map
  reading input frame writeOrBuffer => bytecode_offset=44, args=7, height=13; inputs:
      0: 0x148a754f3d61 ; [fp - 16] 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)>
      1: 0x148a89a82311 ; [fp + 64] 0x148a89a82311 <undefined>
      2: 0x148a58ff6ea1 ; [fp + 56] 0x148a58ff6ea1 <Socket map = 0x148a9c2512a9>
      3: 0x148a58ff7131 ; rax 0x148a58ff7131 <WritableState map = 0x148a9c2375d1>
      4: 0x148a89a82421 ; rsi 0x148a89a82421 <false>
      5: 0x148a58ff7e91 ; rcx 0x148a58ff7e91 <String[64]\: GET / HTTP/1.1\r\nHost: localhost:3001\r\nConnection: keep-alive\r\n\r\n>
      6: 0x148ad6ed46c1 ; rdx 0x148ad6ed46c1 <String[6]: latin1>
      7: 0x148a58ff7ed1 ; [fp + 16] 0x148a58ff7ed1 <JSBoundFunction (BoundTargetFunction 0x148a38011e81)>
      8: 0x148a7548b169 ; [fp - 8] 0x148a7548b169 <FixedArray[27]>
      9: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     17: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     18: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     19: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     20: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     21: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame writeOrBuffer => bytecode_offset=44, height=104
    0x7fff5fbf5b08: [top + 208] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5b00: [top + 200] <- 0x148a58ff6ea1 ;  0x148a58ff6ea1 <Socket map = 0x148a9c2512a9>  (input #2)
    0x7fff5fbf5af8: [top + 192] <- 0x148a58ff7131 ;  0x148a58ff7131 <WritableState map = 0x148a9c2375d1>  (input #3)
    0x7fff5fbf5af0: [top + 184] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #4)
    0x7fff5fbf5ae8: [top + 176] <- 0x148a58ff7e91 ;  0x148a58ff7e91 <String[64]\: GET / HTTP/1.1\r\nHost: localhost:3001\r\nConnection: keep-alive\r\n\r\n>  (input #5)
    0x7fff5fbf5ae0: [top + 168] <- 0x148ad6ed46c1 ;  0x148ad6ed46c1 <String[6]: latin1>  (input #6)
    0x7fff5fbf5ad8: [top + 160] <- 0x148a58ff7ed1 ;  0x148a58ff7ed1 <JSBoundFunction (BoundTargetFunction 0x148a38011e81)>  (input #7)
    -------------------------
    0x7fff5fbf5ad0: [top + 152] <- 0x1ddcf16748a5 ;  caller's pc
    0x7fff5fbf5ac8: [top + 144] <- 0x7fff5fbf5b48 ;  caller's fp
    0x7fff5fbf5ac0: [top + 136] <- 0x148a7548b169 ;  context    0x148a7548b169 <FixedArray[27]>  (input #8)
    0x7fff5fbf5ab8: [top + 128] <- 0x148a754f3d61 ;  function    0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)>  (input #0)
    0x7fff5fbf5ab0: [top + 120] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5aa8: [top + 112] <- 0x148a785c1671 ;  bytecode array 0x148a785c1671 <BytecodeArray[218]>  (input #0)
    0x7fff5fbf5aa0: [top + 104] <- 0x6100000000 ;  bytecode offset @ 44
    -------------------------
    0x7fff5fbf5a98: [top + 96] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5a90: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5a88: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5a80: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5a78: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5a70: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5a68: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5a60: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5a58: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf5a50: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #18)
    0x7fff5fbf5a48: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf5a40: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf5a38: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #21)
[deoptimizing (eager): end 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)> @6 => node=44, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5b10, state=TOS_REGISTER, took 2.769 ms]
[removing optimized code for: 0x148a754f3d61 <JSFunction writeOrBuffer (sfi = 0x148a5a8f4169)>]
[marking 0x148a754a77d1 <JSFunction WritableState (sfi = 0x148a5a8f3d81)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 50/52 (96%), generic ICs: 3/52 (5%)]
[compiling method 0x148a754a77d1 <JSFunction WritableState (sfi = 0x148a5a8f3d81)> using TurboFan]
[optimizing 0x148a754a77d1 <JSFunction WritableState (sfi = 0x148a5a8f3d81)> - took 0.622, 1.839, 0.089 ms]
[completed optimizing 0x148a754a77d1 <JSFunction WritableState (sfi = 0x148a5a8f3d81)>]
[marking 0x148a754f3681 <JSFunction lookupAndConnect (sfi = 0x148a53bcb7f9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 30/50 (60%), generic ICs: 2/50 (4%)]
[compiling method 0x148a754f3681 <JSFunction lookupAndConnect (sfi = 0x148a53bcb7f9)> using TurboFan]
Inlining small function(s) at call site #425:JSCall
Inlining setInitTriggerId into lookupAndConnect
Candidates for inlining (size=3):
  #361:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #347:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #151:JSCall, frequency: 1
  - size:42, name: isLegalPort
Inlining debugs.(anonymous function) into lookupAndConnect
Candidates for inlining (size=2):
  #347:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #151:JSCall, frequency: 1
  - size:42, name: isLegalPort
Inlining debugs.(anonymous function) into lookupAndConnect
Candidates for inlining (size=1):
  #151:JSCall, frequency: 1
  - size:42, name: isLegalPort
Inlining isLegalPort into lookupAndConnect
[optimizing 0x148a754f3681 <JSFunction lookupAndConnect (sfi = 0x148a53bcb7f9)> - took 1.241, 1.664, 0.077 ms]
[completed optimizing 0x148a754f3681 <JSFunction lookupAndConnect (sfi = 0x148a53bcb7f9)>]
[marking 0x148a37e64299 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a37e68239 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148a37e68239 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.130, 0.717, 0.042 ms]
[completed optimizing 0x148a37e68239 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148a785b83b1 <JSFunction needMoreData (sfi = 0x148a5a8ee469)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/7 (71%), generic ICs: 0/7 (0%)]
[compiling method 0x148a785b83b1 <JSFunction needMoreData (sfi = 0x148a5a8ee469)> using TurboFan]
[optimizing 0x148a785b83b1 <JSFunction needMoreData (sfi = 0x148a5a8ee469)> - took 0.164, 0.671, 0.009 ms]
[completed optimizing 0x148a785b83b1 <JSFunction needMoreData (sfi = 0x148a5a8ee469)>]
[marking 0x148a5a8f6b31 <JSFunction Writable.write (sfi = 0x148a5a8f5041)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 15/21 (71%), generic ICs: 0/21 (0%)]
[compiling method 0x148a5a8f6b31 <JSFunction Writable.write (sfi = 0x148a5a8f5041)> using TurboFan]
Inlining small function(s) at call site #49:JSCall
Inlining isUint8Array into Writable.write
Candidates for inlining (size=3):
  #246:JSCall, frequency: 1
  - size:19, name: args
  #201:JSCall, frequency: 1
  - size:158, name: writeOrBuffer
  #172:JSCall, frequency: 0.597457
  - size:71, name: validChunk
Inlining args into Writable.write
Candidates for inlining (size=2):
  #201:JSCall, frequency: 1
  - size:158, name: writeOrBuffer
  #172:JSCall, frequency: 0.597457
  - size:71, name: validChunk
Inlining writeOrBuffer into Writable.write
Candidates for inlining (size=2):
  #172:JSCall, frequency: 0.597457
  - size:71, name: validChunk
  #333:JSCall, frequency: 0.575778
  - size:29, name: decodeChunk
Inlining validChunk into Writable.write
Candidates for inlining (size=1):
  #333:JSCall, frequency: 0.575778
  - size:29, name: decodeChunk
Inlining decodeChunk into Writable.write
[marking 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 83/199 (41%), generic ICs: 2/199 (1%)]
[compiling method 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)> using TurboFan]
Candidates for inlining (size=8):
  #884:JSCall, frequency: 1
  - size:31, name: _deferToConnect
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining _deferToConnect into ClientRequest
Candidates for inlining (size=8):
  #1249:JSCall, frequency: 1
  - size:28, name: once
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining once into ClientRequest
Candidates for inlining (size=9):
  #1305:JSCall, frequency: 1
  - size:11, name: addListener
  #1299:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining addListener into ClientRequest
Candidates for inlining (size=9):
  #1327:JSCall, frequency: 1
  - size:230, name: _addListener
  #1299:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
Inlining _addListener into ClientRequest
Candidates for inlining (size=9):
  #1299:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1541:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining _onceWrap into ClientRequest
Candidates for inlining (size=8):
  #746:JSCall, frequency: 1
  - size:46, name: getHeader
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1541:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining getHeader into ClientRequest
Candidates for inlining (size=7):
  #665:JSCall, frequency: 1
  - size:92, name: setHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1541:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining setHeader into ClientRequest
Candidates for inlining (size=7):
  #1817:JSCall, frequency: 1
  - size:61, name: validateHeader
  #595:JSCall, frequency: 1
  - size:46, name: getHeader
  #401:JSCall, frequency: 1
  - size:24, name: validateHost
  #383:JSCall, frequency: 1
  - size:24, name: validateHost
  #113:JSCall, frequency: 1
  - size:50, name: _extend
  #36:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #1541:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a5a8f6b31 <JSFunction Writable.write (sfi = 0x148a5a8f5041)> - took 1.471, 2.484, 0.075 ms]
[completed optimizing 0x148a5a8f6b31 <JSFunction Writable.write (sfi = 0x148a5a8f5041)>]
[optimizing 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)> - took 6.000, 10.911, 0.118 ms]
[completed optimizing 0x148a754f3489 <JSFunction ClientRequest (sfi = 0x148af3d09841)>]
[marking 0x148a754fd3c1 <JSFunction onlookup (sfi = 0x148a53bde001)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 6/14 (42%), generic ICs: 1/14 (7%)]
[compiling method 0x148a754fd3c1 <JSFunction onlookup (sfi = 0x148a53bde001)> using TurboFan]
Candidates for inlining (size=1):
  #53:JSCall, frequency: 1
  - size:83, name: isIPv4
Inlining isIPv4 into onlookup
[optimizing 0x148a754fd3c1 <JSFunction onlookup (sfi = 0x148a53bde001)> - took 0.658, 1.960, 0.026 ms]
[completed optimizing 0x148a754fd3c1 <JSFunction onlookup (sfi = 0x148a53bde001)>]
[marking 0x148a3807f669 <JSFunction eos (sfi = 0x148af3d25929)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/39 (64%), generic ICs: 7/39 (17%)]
[compiling method 0x148a3807f669 <JSFunction eos (sfi = 0x148af3d25929)> using TurboFan]
Candidates for inlining (size=9):
  #281:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #263:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #240:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #204:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #144:JSCall, frequency: 1
  - size:11, name: isRequest
  #56:JSCall, frequency: 1
  - size:84, name: wrapper
  #193:JSCall, frequency: 0.5
  - size:11, name: addListener
  #180:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining addListener into eos
Inlining Readable.on into eos
Candidates for inlining (size=10):
  #435:JSCall, frequency: 1
  - size:11, name: addListener
  #389:JSCall, frequency: 1
  - size:230, name: _addListener
  #263:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #240:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #204:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #144:JSCall, frequency: 1
  - size:11, name: isRequest
  #56:JSCall, frequency: 1
  - size:84, name: wrapper
  #193:JSCall, frequency: 0.5
  - size:11, name: addListener
  #180:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining addListener into eos
Candidates for inlining (size=10):
  #536:JSCall, frequency: 1
  - size:230, name: _addListener
  #389:JSCall, frequency: 1
  - size:230, name: _addListener
  #263:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #240:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #204:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #144:JSCall, frequency: 1
  - size:11, name: isRequest
  #56:JSCall, frequency: 1
  - size:84, name: wrapper
  #193:JSCall, frequency: 0.5
  - size:11, name: addListener
  #180:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining _addListener into eos
Candidates for inlining (size=10):
  #389:JSCall, frequency: 1
  - size:230, name: _addListener
  #263:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #240:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #204:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #144:JSCall, frequency: 1
  - size:11, name: isRequest
  #56:JSCall, frequency: 1
  - size:84, name: wrapper
  #193:JSCall, frequency: 0.5
  - size:11, name: addListener
  #180:JSCall, frequency: 0.5
  - size:11, name: addListener
  #752:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining _addListener into eos
Candidates for inlining (size=10):
  #263:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #240:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #204:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #144:JSCall, frequency: 1
  - size:11, name: isRequest
  #56:JSCall, frequency: 1
  - size:84, name: wrapper
  #193:JSCall, frequency: 0.5
  - size:11, name: addListener
  #180:JSCall, frequency: 0.5
  - size:11, name: addListener
  #1029:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
  #752:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a3807f669 <JSFunction eos (sfi = 0x148af3d25929)> - took 5.207, 7.931, 0.083 ms]
[completed optimizing 0x148a3807f669 <JSFunction eos (sfi = 0x148af3d25929)>]
[marking 0x148a53b9b211 <JSFunction remove (sfi = 0x148a5a8ae7a1)> for optimized recompilation, reason: small function, ICs with typeinfo: 10/10 (100%), generic ICs: 5/10 (50%)]
[compiling method 0x148a53b9b211 <JSFunction remove (sfi = 0x148a5a8ae7a1)> using TurboFan]
[optimizing 0x148a53b9b211 <JSFunction remove (sfi = 0x148a5a8ae7a1)> - took 0.244, 1.257, 0.049 ms]
[completed optimizing 0x148a53b9b211 <JSFunction remove (sfi = 0x148a5a8ae7a1)>]
[marking 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)> for optimized recompilation, reason: small function, ICs with typeinfo: 7/7 (100%), generic ICs: 0/7 (0%)]
[compiling method 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)> using TurboFan]
[optimizing 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)> - took 0.094, 0.629, 0.015 ms]
[completed optimizing 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)>]
[marking 0x148a75484cf9 <JSFunction parserOnHeadersComplete (sfi = 0x148af3d0dbc9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 37/45 (82%), generic ICs: 3/45 (6%)]
[compiling method 0x148a75484cf9 <JSFunction parserOnHeadersComplete (sfi = 0x148af3d0dbc9)> using TurboFan]
Candidates for inlining (size=2):
  #175:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
  #67:JSConstruct, frequency: 1
  - size:130, name: IncomingMessage
Inlining _addHeaderLines into parserOnHeadersComplete
Candidates for inlining (size=2):
  #502:JSCall, frequency: 1.19727
  - size:116, name: _addHeaderLine
  #67:JSConstruct, frequency: 1
  - size:130, name: IncomingMessage
Inlining _addHeaderLine into parserOnHeadersComplete
Candidates for inlining (size=1):
  #67:JSConstruct, frequency: 1
  - size:130, name: IncomingMessage
Inlining IncomingMessage into parserOnHeadersComplete
Candidates for inlining (size=1):
  #676:JSCall, frequency: 1
  - size:63, name: Readable
Inlining Readable into parserOnHeadersComplete
Inlining small function(s) at call site #992:JSCall
Inlining Stream into parserOnHeadersComplete
Inlining small function(s) at call site #1048:JSCall
Inlining EventEmitter into parserOnHeadersComplete
Candidates for inlining (size=1):
  #1077:JSCall, frequency: 1
  - size:83, name: EventEmitter.init
Inlining EventEmitter.init into parserOnHeadersComplete
[optimizing 0x148a75484cf9 <JSFunction parserOnHeadersComplete (sfi = 0x148af3d0dbc9)> - took 1.497, 5.192, 0.198 ms]
[completed optimizing 0x148a75484cf9 <JSFunction parserOnHeadersComplete (sfi = 0x148af3d0dbc9)>]
[marking dependent code 0x1ddcf17447e1 (opt #49) for deoptimization, reason: allocation-site-tenuring-changed]
[deoptimize marked code in all contexts]
[deoptimizer unlinked: WritableState / 148a754a77d1]
[marking 0x148a53b9f1e1 <JSFunction isUint8Array (sfi = 0x148ad6ee5419)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 1/2 (50%)]
[compiling method 0x148a53b9f1e1 <JSFunction isUint8Array (sfi = 0x148ad6ee5419)> using TurboFan]
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:19, name: args
Inlining args into isUint8Array
[optimizing 0x148a53b9f1e1 <JSFunction isUint8Array (sfi = 0x148ad6ee5419)> - took 0.200, 0.408, 0.011 ms]
[completed optimizing 0x148a53b9f1e1 <JSFunction isUint8Array (sfi = 0x148ad6ee5419)>]
[marking 0x148a1cc6cf21 <JSFunction (sfi = 0x148a785effb1)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x148a1cc71481 <JSFunction (sfi = 0x148a785effb1)> using TurboFan]
Candidates for inlining (size=1):
  #33:JSCall, frequency: 1
  - size:39, name: destroyer
Inlining destroyer into 
Candidates for inlining (size=3):
  #100:JSCall, frequency: 1
  - size:227, name: eos
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining eos into 
Candidates for inlining (size=11):
  #409:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.5
  - size:11, name: addListener
  #309:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining addListener into 
Inlining Readable.on into 
Candidates for inlining (size=12):
  #559:JSCall, frequency: 1
  - size:11, name: addListener
  #513:JSCall, frequency: 1
  - size:230, name: _addListener
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.5
  - size:11, name: addListener
  #309:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining addListener into 
Candidates for inlining (size=12):
  #660:JSCall, frequency: 1
  - size:230, name: _addListener
  #513:JSCall, frequency: 1
  - size:230, name: _addListener
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.5
  - size:11, name: addListener
  #309:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining _addListener into 
Not considering call site #875:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=11):
  #513:JSCall, frequency: 1
  - size:230, name: _addListener
  #391:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #368:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #355:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #332:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #273:JSCall, frequency: 1
  - size:11, name: isRequest
  #184:JSCall, frequency: 1
  - size:84, name: wrapper
  #80:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #63:JSCall, frequency: 1
  - size:84, name: wrapper
  #321:JSCall, frequency: 0.5
  - size:11, name: addListener
  #309:JSCall, frequency: 0.5
  - size:11, name: addListener
[optimizing 0x148a1cc71481 <JSFunction (sfi = 0x148a785effb1)> - took 2.786, 5.371, 0.052 ms]
[completed optimizing 0x148a1cc71481 <JSFunction (sfi = 0x148a785effb1)>]
[marking 0x148a2b555d59 <JSFunction append (sfi = 0x148a5a8ae869)> for optimized recompilation, reason: small function, ICs with typeinfo: 9/9 (100%), generic ICs: 2/9 (22%)]
[compiling method 0x148a2b555d59 <JSFunction append (sfi = 0x148a5a8ae869)> using TurboFan]
Candidates for inlining (size=1):
  #37:JSCall, frequency: 0.999335
  - size:42, name: remove
Inlining remove into append
[optimizing 0x148a2b555d59 <JSFunction append (sfi = 0x148a5a8ae869)> - took 0.336, 1.659, 0.025 ms]
[completed optimizing 0x148a2b555d59 <JSFunction append (sfi = 0x148a5a8ae869)>]
[marking 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/47 (42%), generic ICs: 0/47 (0%)]
[compiling method 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)> using TurboFan]
Candidates for inlining (size=1):
  #45:JSCall, frequency: 1
  - size:216, name: removeListener
Inlining removeListener into onceWrapper
Candidates for inlining (size=1):
  #451:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining spliceOne into onceWrapper
[optimizing 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)> - took 0.760, 3.961, 0.033 ms]
[completed optimizing 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)>]
[marking 0x148a380173a9 <JSFunction once (sfi = 0x148af3d23599)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148a380173a9 <JSFunction once (sfi = 0x148af3d23599)> using TurboFan]
[optimizing 0x148a380173a9 <JSFunction once (sfi = 0x148af3d23599)> - took 0.094, 0.498, 0.028 ms]
[completed optimizing 0x148a380173a9 <JSFunction once (sfi = 0x148af3d23599)>]
[marking 0x148a53ba93a1 <JSFunction $getMaxListeners (sfi = 0x148ad6ebb369)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/5 (60%), generic ICs: 1/5 (20%)]
[compiling method 0x148a53ba93a1 <JSFunction $getMaxListeners (sfi = 0x148ad6ebb369)> using TurboFan]
Inlining small function(s) at call site #41:JSCall
Inlining get into $getMaxListeners
[optimizing 0x148a53ba93a1 <JSFunction $getMaxListeners (sfi = 0x148ad6ebb369)> - took 0.071, 0.256, 0.008 ms]
[completed optimizing 0x148a53ba93a1 <JSFunction $getMaxListeners (sfi = 0x148ad6ebb369)>]
[marking 0x148af3d17e61 <JSFunction end (sfi = 0x148af3d14729)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 29/51 (56%), generic ICs: 0/51 (0%)]
[compiling method 0x148af3d17e61 <JSFunction end (sfi = 0x148af3d14729)> using TurboFan]
Candidates for inlining (size=5):
  #218:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #185:JSCall, frequency: 0.604552
  - size:137, name: _send
  #105:JSCall, frequency: 0.604552
  - size:33, name: _implicitHeader
  #174:JSCall, frequency: 0.395448
  - size:137, name: _send
  #267:JSCall, frequency: 0.278236
  - size:20, name: _finish
Inlining debugs.(anonymous function) into end
Candidates for inlining (size=4):
  #185:JSCall, frequency: 0.604552
  - size:137, name: _send
  #105:JSCall, frequency: 0.604552
  - size:33, name: _implicitHeader
  #174:JSCall, frequency: 0.395448
  - size:137, name: _send
  #267:JSCall, frequency: 0.278236
  - size:20, name: _finish
Inlining _send into end
Candidates for inlining (size=4):
  #482:JSCall, frequency: 0.604552
  - size:158, name: _writeRaw
  #105:JSCall, frequency: 0.604552
  - size:33, name: _implicitHeader
  #174:JSCall, frequency: 0.395448
  - size:137, name: _send
  #267:JSCall, frequency: 0.278236
  - size:20, name: _finish
Inlining _writeRaw into end
Candidates for inlining (size=6):
  #105:JSCall, frequency: 0.604552
  - size:33, name: _implicitHeader
  #174:JSCall, frequency: 0.395448
  - size:137, name: _send
  #635:JSCall, frequency: 0.33322
  - size:33, name: Socket.write
  #267:JSCall, frequency: 0.278236
  - size:20, name: _finish
  #744:JSCall, frequency: unknown
  - size:27, name: get
  #732:JSCall, frequency: unknown
  - size:27, name: get
Inlining _implicitHeader into end
Candidates for inlining (size=5):
  #174:JSCall, frequency: 0.395448
  - size:137, name: _send
  #635:JSCall, frequency: 0.33322
  - size:33, name: Socket.write
  #267:JSCall, frequency: 0.278236
  - size:20, name: _finish
  #744:JSCall, frequency: unknown
  - size:27, name: get
  #732:JSCall, frequency: unknown
  - size:27, name: get
Inlining _send into end
Candidates for inlining (size=5):
  #1027:JSCall, frequency: 0.395448
  - size:158, name: _writeRaw
  #635:JSCall, frequency: 0.33322
  - size:33, name: Socket.write
  #267:JSCall, frequency: 0.278236
  - size:20, name: _finish
  #744:JSCall, frequency: unknown
  - size:27, name: get
  #732:JSCall, frequency: unknown
  - size:27, name: get
[marking 0x148a53be1ea1 <JSFunction Socket.write (sfi = 0x148a53bcd419)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 6/9 (66%), generic ICs: 0/9 (0%)]
[compiling method 0x148a53be1ea1 <JSFunction Socket.write (sfi = 0x148a53bcd419)> using TurboFan]
[optimizing 0x148a53be1ea1 <JSFunction Socket.write (sfi = 0x148a53bcd419)> - took 0.136, 1.035, 0.016 ms]
[completed optimizing 0x148a53be1ea1 <JSFunction Socket.write (sfi = 0x148a53bcd419)>]
[optimizing 0x148af3d17e61 <JSFunction end (sfi = 0x148af3d14729)> - took 2.325, 5.444, 0.111 ms]
[completed optimizing 0x148af3d17e61 <JSFunction end (sfi = 0x148af3d14729)>]
[marking 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> using TurboFan]
Candidates for inlining (size=2):
  #49:JSCall, frequency: 1.00046
  - size:101, name: Readable.on
  #31:JSCall, frequency: 1.00046
  - size:216, name: removeListener
Inlining Readable.on into httpSocketSetup
Candidates for inlining (size=2):
  #101:JSCall, frequency: 1.00046
  - size:11, name: addListener
  #31:JSCall, frequency: 1.00046
  - size:216, name: removeListener
Inlining addListener into httpSocketSetup
Candidates for inlining (size=2):
  #205:JSCall, frequency: 1.00046
  - size:230, name: _addListener
  #31:JSCall, frequency: 1.00046
  - size:216, name: removeListener
Inlining _addListener into httpSocketSetup
Candidates for inlining (size=2):
  #31:JSCall, frequency: 1.00046
  - size:216, name: removeListener
  #422:JSCall, frequency: 0.325017
  - size:14, name: $getMaxListeners
Inlining removeListener into httpSocketSetup
Candidates for inlining (size=2):
  #422:JSCall, frequency: 0.325017
  - size:14, name: $getMaxListeners
  #747:JSCall, frequency: 0.208047
  - size:54, name: spliceOne
[optimizing 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)> - took 1.311, 4.237, 0.040 ms]
[completed optimizing 0x148a754f2f91 <JSFunction httpSocketSetup (sfi = 0x148af3d0dee9)>]
[marking 0x148a754f3cd1 <JSFunction tickOnSocket (sfi = 0x148af3d0a269)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 30/38 (78%), generic ICs: 0/38 (0%)]
[compiling method 0x148a754f3cd1 <JSFunction tickOnSocket (sfi = 0x148af3d0a269)> using TurboFan]
Candidates for inlining (size=7):
  #216:JSCall, frequency: 1
  - size:101, name: Readable.on
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #190:JSCall, frequency: 1
  - size:101, name: Readable.on
  #177:JSCall, frequency: 1
  - size:101, name: Readable.on
  #165:JSCall, frequency: 1
  - size:216, name: removeListener
  #124:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #36:JSCall, frequency: 1
  - size:21, name: alloc
Inlining Readable.on into tickOnSocket
Candidates for inlining (size=7):
  #463:JSCall, frequency: 1
  - size:11, name: addListener
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #190:JSCall, frequency: 1
  - size:101, name: Readable.on
  #177:JSCall, frequency: 1
  - size:101, name: Readable.on
  #165:JSCall, frequency: 1
  - size:216, name: removeListener
  #124:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #36:JSCall, frequency: 1
  - size:21, name: alloc
Inlining addListener into tickOnSocket
Candidates for inlining (size=7):
  #563:JSCall, frequency: 1
  - size:230, name: _addListener
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #190:JSCall, frequency: 1
  - size:101, name: Readable.on
  #177:JSCall, frequency: 1
  - size:101, name: Readable.on
  #165:JSCall, frequency: 1
  - size:216, name: removeListener
  #124:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #36:JSCall, frequency: 1
  - size:21, name: alloc
Inlining _addListener into tickOnSocket
Candidates for inlining (size=7):
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #190:JSCall, frequency: 1
  - size:101, name: Readable.on
  #177:JSCall, frequency: 1
  - size:101, name: Readable.on
  #165:JSCall, frequency: 1
  - size:216, name: removeListener
  #124:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #36:JSCall, frequency: 1
  - size:21, name: alloc
  #780:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining Readable.on into tickOnSocket
Candidates for inlining (size=7):
  #887:JSCall, frequency: 1
  - size:11, name: addListener
  #190:JSCall, frequency: 1
  - size:101, name: Readable.on
  #177:JSCall, frequency: 1
  - size:101, name: Readable.on
  #165:JSCall, frequency: 1
  - size:216, name: removeListener
  #124:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #36:JSCall, frequency: 1
  - size:21, name: alloc
  #780:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a754f3cd1 <JSFunction tickOnSocket (sfi = 0x148af3d0a269)> - took 2.470, 3.610, 0.111 ms]
[completed optimizing 0x148a754f3cd1 <JSFunction tickOnSocket (sfi = 0x148af3d0a269)>]
[marking 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)> using TurboFan]
Candidates for inlining (size=2):
  #44:JSCall, frequency: 1
  - size:29, name: flow
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining flow into emitReadable_
Candidates for inlining (size=3):
  #87:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #115:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining debugs.(anonymous function) into emitReadable_
Candidates for inlining (size=2):
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #115:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining debugs.(anonymous function) into emitReadable_
Candidates for inlining (size=1):
  #115:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining Socket.read into emitReadable_
[optimizing 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)> - took 0.817, 2.156, 0.042 ms]
[completed optimizing 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)>]
[marking 0x148a5a8f2ca1 <JSFunction Readable.isPaused (sfi = 0x148a5a8ef729)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 1/3 (33%)]
[compiling method 0x148a5a8f2ca1 <JSFunction Readable.isPaused (sfi = 0x148a5a8ef729)> using TurboFan]
[optimizing 0x148a5a8f2ca1 <JSFunction Readable.isPaused (sfi = 0x148a5a8ef729)> - took 0.064, 0.234, 0.006 ms]
[completed optimizing 0x148a5a8f2ca1 <JSFunction Readable.isPaused (sfi = 0x148a5a8ef729)>]
[marking 0x148af3d17f39 <JSFunction _flushOutput (sfi = 0x148af3d14981)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/25 (100%), generic ICs: 1/25 (4%)]
[compiling method 0x148af3d17f39 <JSFunction _flushOutput (sfi = 0x148af3d14981)> using TurboFan]
Candidates for inlining (size=3):
  #112:JSCall, frequency: 1.1496
  - size:33, name: Socket.write
  #127:JSCall, frequency: 0.707388
  - size:48, name: Writable.uncork
  #55:JSCall, frequency: 0.707388
  - size:14, name: Writable.cork
Inlining Socket.write into _flushOutput
Candidates for inlining (size=3):
  #329:JSCall, frequency: 1.1496
  - size:130, name: Writable.write
  #127:JSCall, frequency: 0.707388
  - size:48, name: Writable.uncork
  #55:JSCall, frequency: 0.707388
  - size:14, name: Writable.cork
Inlining Writable.write into _flushOutput
Inlining small function(s) at call site #392:JSCall
Inlining isUint8Array into _flushOutput
Candidates for inlining (size=5):
  #585:JSCall, frequency: 1.1496
  - size:19, name: args
  #542:JSCall, frequency: 1.1496
  - size:158, name: writeOrBuffer
  #127:JSCall, frequency: 0.707388
  - size:48, name: Writable.uncork
  #55:JSCall, frequency: 0.707388
  - size:14, name: Writable.cork
  #514:JSCall, frequency: 0.687803
  - size:71, name: validChunk
Inlining args into _flushOutput
Candidates for inlining (size=4):
  #542:JSCall, frequency: 1.1496
  - size:158, name: writeOrBuffer
  #127:JSCall, frequency: 0.707388
  - size:48, name: Writable.uncork
  #55:JSCall, frequency: 0.707388
  - size:14, name: Writable.cork
  #514:JSCall, frequency: 0.687803
  - size:71, name: validChunk
Inlining writeOrBuffer into _flushOutput
Candidates for inlining (size=4):
  #127:JSCall, frequency: 0.707388
  - size:48, name: Writable.uncork
  #55:JSCall, frequency: 0.707388
  - size:14, name: Writable.cork
  #514:JSCall, frequency: 0.687803
  - size:71, name: validChunk
  #667:JSCall, frequency: 0.663124
  - size:29, name: decodeChunk
Inlining Writable.uncork into _flushOutput
Candidates for inlining (size=3):
  #55:JSCall, frequency: 0.707388
  - size:14, name: Writable.cork
  #514:JSCall, frequency: 0.687803
  - size:71, name: validChunk
  #667:JSCall, frequency: 0.663124
  - size:29, name: decodeChunk
Inlining Writable.cork into _flushOutput
Candidates for inlining (size=2):
  #514:JSCall, frequency: 0.687803
  - size:71, name: validChunk
  #667:JSCall, frequency: 0.663124
  - size:29, name: decodeChunk
[optimizing 0x148af3d17f39 <JSFunction _flushOutput (sfi = 0x148af3d14981)> - took 2.390, 6.598, 0.117 ms]
[completed optimizing 0x148af3d17f39 <JSFunction _flushOutput (sfi = 0x148af3d14981)>]
[marking 0x148af3d17ea9 <JSFunction _finish (sfi = 0x148af3d147f1)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[marking 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 28/37 (75%), generic ICs: 1/37 (2%)]
[compiling method 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> using TurboFan]
Candidates for inlining (size=3):
  #123:JSCall, frequency: 0.583103
  - size:33, name: Socket.write
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining Socket.write into _writeRaw
Candidates for inlining (size=3):
  #431:JSCall, frequency: 0.583103
  - size:130, name: Writable.write
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining Writable.write into _writeRaw
Inlining small function(s) at call site #493:JSCall
Inlining isUint8Array into _writeRaw
Candidates for inlining (size=5):
  #686:JSCall, frequency: 0.583103
  - size:19, name: args
  #643:JSCall, frequency: 0.583103
  - size:158, name: writeOrBuffer
  #614:JSCall, frequency: 0.348868
  - size:71, name: validChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining args into _writeRaw
Candidates for inlining (size=4):
  #643:JSCall, frequency: 0.583103
  - size:158, name: writeOrBuffer
  #614:JSCall, frequency: 0.348868
  - size:71, name: validChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining writeOrBuffer into _writeRaw
Candidates for inlining (size=4):
  #614:JSCall, frequency: 0.348868
  - size:71, name: validChunk
  #770:JSCall, frequency: 0.33635
  - size:29, name: decodeChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
Inlining validChunk into _writeRaw
Candidates for inlining (size=3):
  #770:JSCall, frequency: 0.33635
  - size:29, name: decodeChunk
  #234:JSCall, frequency: unknown
  - size:27, name: get
  #222:JSCall, frequency: unknown
  - size:27, name: get
[compiling method 0x148af3d17ea9 <JSFunction _finish (sfi = 0x148af3d147f1)> using TurboFan]
Candidates for inlining (size=1):
  #31:JSCall, frequency: 1
  - size:11, name: ok
Inlining ok into _finish
[optimizing 0x148af3d17ea9 <JSFunction _finish (sfi = 0x148af3d147f1)> - took 0.324, 0.541, 0.020 ms]
[completed optimizing 0x148af3d17ea9 <JSFunction _finish (sfi = 0x148af3d147f1)>]
[marking 0x148a754f3df1 <JSFunction clearBuffer (sfi = 0x148a5a8f46e1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 45/47 (95%), generic ICs: 0/47 (0%)]
[compiling method 0x148a754f3df1 <JSFunction clearBuffer (sfi = 0x148a5a8f46e1)> using TurboFan]
Candidates for inlining (size=2):
  #302:JSCall, frequency: 0.610737
  - size:51, name: doWrite
  #141:JSCall, frequency: 0.389263
  - size:51, name: doWrite
Inlining doWrite into clearBuffer
Inlining small function(s) at call site #589:JSCall
Inlining Socket._writev into clearBuffer
Inlining small function(s) at call site #604:JSCall
Inlining Socket._write into clearBuffer
Candidates for inlining (size=1):
  #141:JSCall, frequency: 0.389263
  - size:51, name: doWrite
Inlining doWrite into clearBuffer
Inlining small function(s) at call site #747:JSCall
Inlining Socket._writev into clearBuffer
Inlining small function(s) at call site #762:JSCall
Inlining Socket._write into clearBuffer
[optimizing 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)> - took 3.650, 7.266, 0.081 ms]
[completed optimizing 0x148a754848d1 <JSFunction _writeRaw (sfi = 0x148af3d13081)>]
[marking 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 19/23 (82%), generic ICs: 1/23 (4%)]
[compiling method 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)> using TurboFan]
Candidates for inlining (size=2):
  #140:JSCall, frequency: 1
  - size:23, name: emitDestroyScript
  #106:JSCall, frequency: 1
  - size:23, name: free
Inlining emitDestroyScript into freeParser
Candidates for inlining (size=2):
  #250:JSCall, frequency: 1
  - size:30, name: validateAsyncId
  #106:JSCall, frequency: 1
  - size:23, name: free
Inlining validateAsyncId into freeParser
Candidates for inlining (size=1):
  #106:JSCall, frequency: 1
  - size:23, name: free
Inlining free into freeParser
[optimizing 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)> - took 1.089, 1.694, 0.069 ms]
[completed optimizing 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)>]
[optimizing 0x148a754f3df1 <JSFunction clearBuffer (sfi = 0x148a5a8f46e1)> - took 1.378, 4.656, 0.140 ms]
[completed optimizing 0x148a754f3df1 <JSFunction clearBuffer (sfi = 0x148a5a8f46e1)>]
[marking 0x148a38011da9 <JSFunction write_ (sfi = 0x148af3d13531)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 33/49 (67%), generic ICs: 1/49 (2%)]
[compiling method 0x148a38011da9 <JSFunction write_ (sfi = 0x148af3d13531)> using TurboFan]
Candidates for inlining (size=8):
  #327:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #302:JSCall, frequency: 1
  - size:137, name: _send
  #284:JSCall, frequency: 1
  - size:137, name: _send
  #275:JSCall, frequency: 1
  - size:137, name: _send
  #256:JSCall, frequency: 1
  - size:137, name: _send
  #50:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #199:JSCall, frequency: 0.735597
  - size:167, name: nextTick
  #179:JSCall, frequency: 0.735597
  - size:14, name: Writable.cork
Inlining debugs.(anonymous function) into write_
Candidates for inlining (size=7):
  #302:JSCall, frequency: 1
  - size:137, name: _send
  #284:JSCall, frequency: 1
  - size:137, name: _send
  #275:JSCall, frequency: 1
  - size:137, name: _send
  #256:JSCall, frequency: 1
  - size:137, name: _send
  #50:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #199:JSCall, frequency: 0.735597
  - size:167, name: nextTick
  #179:JSCall, frequency: 0.735597
  - size:14, name: Writable.cork
Inlining _send into write_
Candidates for inlining (size=7):
  #498:JSCall, frequency: 1
  - size:158, name: _writeRaw
  #284:JSCall, frequency: 1
  - size:137, name: _send
  #275:JSCall, frequency: 1
  - size:137, name: _send
  #256:JSCall, frequency: 1
  - size:137, name: _send
  #50:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #199:JSCall, frequency: 0.735597
  - size:167, name: nextTick
  #179:JSCall, frequency: 0.735597
  - size:14, name: Writable.cork
Inlining _writeRaw into write_
Candidates for inlining (size=9):
  #284:JSCall, frequency: 1
  - size:137, name: _send
  #275:JSCall, frequency: 1
  - size:137, name: _send
  #256:JSCall, frequency: 1
  - size:137, name: _send
  #50:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #199:JSCall, frequency: 0.735597
  - size:167, name: nextTick
  #179:JSCall, frequency: 0.735597
  - size:14, name: Writable.cork
  #653:JSCall, frequency: 0.587753
  - size:33, name: Socket.write
  #763:JSCall, frequency: unknown
  - size:27, name: get
  #751:JSCall, frequency: unknown
  - size:27, name: get
Inlining _send into write_
Candidates for inlining (size=9):
  #947:JSCall, frequency: 1
  - size:158, name: _writeRaw
  #275:JSCall, frequency: 1
  - size:137, name: _send
  #256:JSCall, frequency: 1
  - size:137, name: _send
  #50:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #199:JSCall, frequency: 0.735597
  - size:167, name: nextTick
  #179:JSCall, frequency: 0.735597
  - size:14, name: Writable.cork
  #653:JSCall, frequency: 0.587753
  - size:33, name: Socket.write
  #763:JSCall, frequency: unknown
  - size:27, name: get
  #751:JSCall, frequency: unknown
  - size:27, name: get
[optimizing 0x148a38011da9 <JSFunction write_ (sfi = 0x148af3d13531)> - took 2.971, 3.921, 0.084 ms]
[completed optimizing 0x148a38011da9 <JSFunction write_ (sfi = 0x148af3d13531)>]
[marking 0x148a75484b39 <JSFunction parserOnIncoming (sfi = 0x148af3d1ae51)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 32/63 (50%), generic ICs: 0/63 (0%)]
[compiling method 0x148a75484b39 <JSFunction parserOnIncoming (sfi = 0x148af3d1ae51)> using TurboFan]
Candidates for inlining (size=3):
  #179:JSCall, frequency: 1
  - size:11, name: addListener
  #90:JSConstruct, frequency: 1
  - size:69, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:23, name: resetSocketTimeout
Inlining addListener into parserOnIncoming
Candidates for inlining (size=3):
  #301:JSCall, frequency: 1
  - size:230, name: _addListener
  #90:JSConstruct, frequency: 1
  - size:69, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:23, name: resetSocketTimeout
Inlining _addListener into parserOnIncoming
Candidates for inlining (size=3):
  #90:JSConstruct, frequency: 1
  - size:69, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:23, name: resetSocketTimeout
  #518:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining ServerResponse into parserOnIncoming
Candidates for inlining (size=3):
  #616:JSCall, frequency: 1
  - size:150, name: OutgoingMessage
  #19:JSCall, frequency: 1
  - size:23, name: resetSocketTimeout
  #518:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining OutgoingMessage into parserOnIncoming
Inlining small function(s) at call site #794:JSCall
Inlining Stream into parserOnIncoming
Inlining small function(s) at call site #942:JSCall
Inlining EventEmitter into parserOnIncoming
Candidates for inlining (size=3):
  #970:JSCall, frequency: 1
  - size:83, name: EventEmitter.init
  #19:JSCall, frequency: 1
  - size:23, name: resetSocketTimeout
  #518:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[marking 0x148a785b86c9 <JSFunction resume_ (sfi = 0x148a5a8eed01)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 13/13 (100%), generic ICs: 1/13 (7%)]
[compiling method 0x148a785b86c9 <JSFunction resume_ (sfi = 0x148a5a8eed01)> using TurboFan]
Candidates for inlining (size=3):
  #76:JSCall, frequency: 1
  - size:29, name: flow
  #46:JSCall, frequency: 0.979851
  - size:41, name: Socket.read
  - size:41, name: read
  #36:JSCall, frequency: 0.979851
  - size:0, name: debugs.(anonymous function)
Inlining flow into resume_
Candidates for inlining (size=4):
  #180:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #46:JSCall, frequency: 0.979851
  - size:41, name: Socket.read
  - size:41, name: read
  #36:JSCall, frequency: 0.979851
  - size:0, name: debugs.(anonymous function)
  #208:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining debugs.(anonymous function) into resume_
Candidates for inlining (size=3):
  #46:JSCall, frequency: 0.979851
  - size:41, name: Socket.read
  - size:41, name: read
  #36:JSCall, frequency: 0.979851
  - size:0, name: debugs.(anonymous function)
  #208:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining Socket.read into resume_
Inlining read into resume_
Candidates for inlining (size=2):
  #36:JSCall, frequency: 0.979851
  - size:0, name: debugs.(anonymous function)
  #208:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining debugs.(anonymous function) into resume_
Candidates for inlining (size=1):
  #208:JSCall, frequency: 0.689602
  - size:41, name: Socket.read
  - size:323, name: Readable.read
Inlining Socket.read into resume_
[optimizing 0x148a75484b39 <JSFunction parserOnIncoming (sfi = 0x148af3d1ae51)> - took 1.884, 5.253, 0.275 ms]
[completed optimizing 0x148a75484b39 <JSFunction parserOnIncoming (sfi = 0x148af3d1ae51)>]
[marking 0x148a53503219 <JSFunction (sfi = 0x148af3d07c99)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 34/57 (59%), generic ICs: 5/57 (8%)]
[compiling method 0x148a53503219 <JSFunction (sfi = 0x148af3d07c99)> using TurboFan]
Candidates for inlining (size=5):
  #39:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #22:JSCall, frequency: 1
  - size:107, name: getName
  #284:JSCall, frequency: 0.707459
  - size:162, name: removeSocket
  #226:JSCall, frequency: 0.707459
  - size:20, name: keepSocketAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining debugs.(anonymous function) into 
Candidates for inlining (size=4):
  #22:JSCall, frequency: 1
  - size:107, name: getName
  #284:JSCall, frequency: 0.707459
  - size:162, name: removeSocket
  #226:JSCall, frequency: 0.707459
  - size:20, name: keepSocketAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining getName into 
Candidates for inlining (size=3):
  #284:JSCall, frequency: 0.707459
  - size:162, name: removeSocket
  #226:JSCall, frequency: 0.707459
  - size:20, name: keepSocketAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining removeSocket into 
Candidates for inlining (size=4):
  #612:JSCall, frequency: 0.707459
  - size:0, name: debugs.(anonymous function)
  #591:JSCall, frequency: 0.707459
  - size:107, name: getName
  #226:JSCall, frequency: 0.707459
  - size:20, name: keepSocketAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining debugs.(anonymous function) into 
Candidates for inlining (size=3):
  #591:JSCall, frequency: 0.707459
  - size:107, name: getName
  #226:JSCall, frequency: 0.707459
  - size:20, name: keepSocketAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining getName into 
Candidates for inlining (size=2):
  #226:JSCall, frequency: 0.707459
  - size:20, name: keepSocketAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining keepSocketAlive into 
Candidates for inlining (size=3):
  #1037:JSCall, frequency: 0.707459
  - size:26, name: Socket.unref
  #1028:JSCall, frequency: 0.707459
  - size:38, name: Socket.setKeepAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
Inlining Socket.unref into 
Candidates for inlining (size=2):
  #1028:JSCall, frequency: 0.707459
  - size:38, name: Socket.setKeepAlive
  #214:JSCall, frequency: 0.292541
  - size:104, name: destroy
[optimizing 0x148a785b86c9 <JSFunction resume_ (sfi = 0x148a5a8eed01)> - took 1.278, 3.881, 0.049 ms]
[completed optimizing 0x148a785b86c9 <JSFunction resume_ (sfi = 0x148a5a8eed01)>]
[optimizing 0x148a53503219 <JSFunction (sfi = 0x148af3d07c99)> - took 2.121, 6.773, 0.046 ms]
[completed optimizing 0x148a53503219 <JSFunction (sfi = 0x148af3d07c99)>]
[marking 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 19/42 (45%), generic ICs: 0/42 (0%)]
[compiling method 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)> using TurboFan]
Candidates for inlining (size=4):
  #228:JSCall, frequency: 1
  - size:23, name: needMoreData
  #36:JSCall, frequency: 0.539347
  - size:73, name: onEofChunk
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining needMoreData into readableAddChunk
Candidates for inlining (size=3):
  #36:JSCall, frequency: 0.539347
  - size:73, name: onEofChunk
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining onEofChunk into readableAddChunk
Candidates for inlining (size=3):
  #403:JSCall, frequency: 0.539347
  - size:49, name: emitReadable
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining emitReadable into readableAddChunk
Candidates for inlining (size=4):
  #491:JSCall, frequency: 0.539347
  - size:167, name: nextTick
  #463:JSCall, frequency: 0.539347
  - size:0, name: debugs.(anonymous function)
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining nextTick into readableAddChunk
Candidates for inlining (size=6):
  #781:JSCall, frequency: 0.539498
  - size:42, name: push
  #769:JSConstruct, frequency: 0.539498
  - size:34, name: TickObject
  #754:JSCall, frequency: 0.539498
  - size:27, name: initTriggerId
  #463:JSCall, frequency: 0.539347
  - size:0, name: debugs.(anonymous function)
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining push into readableAddChunk
Candidates for inlining (size=5):
  #769:JSConstruct, frequency: 0.539498
  - size:34, name: TickObject
  #754:JSCall, frequency: 0.539498
  - size:27, name: initTriggerId
  #463:JSCall, frequency: 0.539347
  - size:0, name: debugs.(anonymous function)
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining TickObject into readableAddChunk
Candidates for inlining (size=4):
  #754:JSCall, frequency: 0.539498
  - size:27, name: initTriggerId
  #463:JSCall, frequency: 0.539347
  - size:0, name: debugs.(anonymous function)
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
Inlining initTriggerId into readableAddChunk
Candidates for inlining (size=3):
  #463:JSCall, frequency: 0.539347
  - size:0, name: debugs.(anonymous function)
  #207:JSCall, frequency: 0.460653
  - size:86, name: addChunk
  #48:JSCall, frequency: 0.460653
  - size:35, name: chunkInvalid
[marking 0x148a91dfb109 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148a91dff569 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)> - took 2.538, 5.316, 0.056 ms]
[completed optimizing 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)>]
[optimizing 0x148a91dff569 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 1.874, 8.350, 0.089 ms]
[completed optimizing 0x148a91dff569 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[marking 0x148a785b8561 <JSFunction maybeReadMore (sfi = 0x148a5a8ee919)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x148a785b8561 <JSFunction maybeReadMore (sfi = 0x148a5a8ee919)> using TurboFan]
Candidates for inlining (size=1):
  #40:JSCall, frequency: 0.499874
  - size:167, name: nextTick
Inlining nextTick into maybeReadMore
Candidates for inlining (size=3):
  #317:JSCall, frequency: 0.500013
  - size:42, name: push
  #305:JSConstruct, frequency: 0.500013
  - size:34, name: TickObject
  #290:JSCall, frequency: 0.500013
  - size:27, name: initTriggerId
Inlining push into maybeReadMore
Candidates for inlining (size=2):
  #305:JSConstruct, frequency: 0.500013
  - size:34, name: TickObject
  #290:JSCall, frequency: 0.500013
  - size:27, name: initTriggerId
Inlining TickObject into maybeReadMore
Candidates for inlining (size=1):
  #290:JSCall, frequency: 0.500013
  - size:27, name: initTriggerId
Inlining initTriggerId into maybeReadMore
[optimizing 0x148a785b8561 <JSFunction maybeReadMore (sfi = 0x148a5a8ee919)> - took 1.093, 3.189, 0.047 ms]
[completed optimizing 0x148a785b8561 <JSFunction maybeReadMore (sfi = 0x148a5a8ee919)>]
[marking 0x148a380114b9 <JSFunction parserOnMessageComplete (sfi = 0x148af3d0dd59)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 13/13 (100%), generic ICs: 0/13 (0%)]
[compiling method 0x148a380114b9 <JSFunction parserOnMessageComplete (sfi = 0x148af3d0dd59)> using TurboFan]
Candidates for inlining (size=3):
  #108:JSCall, frequency: 1
  - size:16, name: readStart
  #80:JSCall, frequency: 1
  - size:70, name: Readable.push
  #54:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
Inlining readStart into parserOnMessageComplete
Candidates for inlining (size=3):
  #191:JSCall, frequency: 1
  - size:32, name: Readable.resume
  #80:JSCall, frequency: 1
  - size:70, name: Readable.push
  #54:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
Inlining Readable.resume into parserOnMessageComplete
Candidates for inlining (size=4):
  #80:JSCall, frequency: 1
  - size:70, name: Readable.push
  #54:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
  #262:JSCall, frequency: 0.55112
  - size:20, name: resume
  #252:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
Inlining Readable.push into parserOnMessageComplete
Candidates for inlining (size=4):
  #331:JSCall, frequency: 1
  - size:200, name: readableAddChunk
  #54:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
  #262:JSCall, frequency: 0.55112
  - size:20, name: resume
  #252:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
Inlining readableAddChunk into parserOnMessageComplete
Candidates for inlining (size=7):
  #567:JSCall, frequency: 1
  - size:23, name: needMoreData
  #54:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
  #262:JSCall, frequency: 0.55112
  - size:20, name: resume
  #252:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #546:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #390:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining needMoreData into parserOnMessageComplete
Candidates for inlining (size=6):
  #54:JSCall, frequency: 1
  - size:73, name: _addHeaderLines
  #262:JSCall, frequency: 0.55112
  - size:20, name: resume
  #252:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #546:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #390:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining _addHeaderLines into parserOnMessageComplete
Candidates for inlining (size=6):
  #770:JSCall, frequency: 1.19727
  - size:116, name: _addHeaderLine
  #262:JSCall, frequency: 0.55112
  - size:20, name: resume
  #252:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #546:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #390:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
[optimizing 0x148a380114b9 <JSFunction parserOnMessageComplete (sfi = 0x148af3d0dd59)> - took 2.091, 1.912, 0.034 ms]
[completed optimizing 0x148a380114b9 <JSFunction parserOnMessageComplete (sfi = 0x148af3d0dd59)>]
[marking 0x148a3800cfb9 <JSFunction onCorkedFinish (sfi = 0x148a5a8f4b91)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/12 (91%), generic ICs: 1/12 (8%)]
[compiling method 0x148a3800cfb9 <JSFunction onCorkedFinish (sfi = 0x148a5a8f4b91)> using TurboFan]
[optimizing 0x148a3800cfb9 <JSFunction onCorkedFinish (sfi = 0x148a5a8f4b91)> - took 0.145, 1.144, 0.022 ms]
[completed optimizing 0x148a3800cfb9 <JSFunction onCorkedFinish (sfi = 0x148a5a8f4b91)>]
[marking 0x148af3d079f9 <JSFunction addRequest (sfi = 0x148af3d06a61)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 58/78 (74%), generic ICs: 7/78 (8%)]
[compiling method 0x148af3d079f9 <JSFunction addRequest (sfi = 0x148af3d06a61)> using TurboFan]
Inlining small function(s) at call site #437:JSCall
Inlining handleSocketCreation into addRequest
Candidates for inlining (size=8):
  #155:JSCall, frequency: 1
  - size:107, name: getName
  #116:JSCall, frequency: 1
  - size:46, name: getHeader
  #77:JSCall, frequency: 1
  - size:50, name: _extend
  #52:JSCall, frequency: 1
  - size:50, name: _extend
  #443:JSCall, frequency: 0.516367
  - size:138, name: createSocket
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
Inlining getName into addRequest
Candidates for inlining (size=7):
  #116:JSCall, frequency: 1
  - size:46, name: getHeader
  #77:JSCall, frequency: 1
  - size:50, name: _extend
  #52:JSCall, frequency: 1
  - size:50, name: _extend
  #443:JSCall, frequency: 0.516367
  - size:138, name: createSocket
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
Inlining getHeader into addRequest
Candidates for inlining (size=6):
  #77:JSCall, frequency: 1
  - size:50, name: _extend
  #52:JSCall, frequency: 1
  - size:50, name: _extend
  #443:JSCall, frequency: 0.516367
  - size:138, name: createSocket
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
Inlining _extend into addRequest
Candidates for inlining (size=5):
  #52:JSCall, frequency: 1
  - size:50, name: _extend
  #443:JSCall, frequency: 0.516367
  - size:138, name: createSocket
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
Inlining _extend into addRequest
Candidates for inlining (size=4):
  #443:JSCall, frequency: 0.516367
  - size:138, name: createSocket
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
Inlining createSocket into addRequest
Candidates for inlining (size=9):
  #1269:JSCall, frequency: 0.516367
  - size:63, name: oncreate
  #1259:JSCall, frequency: 0.516367
  - size:64, name: connect
  #1240:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #1215:JSCall, frequency: 0.516367
  - size:107, name: getName
  #1169:JSCall, frequency: 0.516367
  - size:50, name: _extend
  #1142:JSCall, frequency: 0.516367
  - size:50, name: _extend
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
Inlining oncreate into addRequest
Candidates for inlining (size=10):
  #1259:JSCall, frequency: 0.516367
  - size:64, name: connect
  #1240:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #1215:JSCall, frequency: 0.516367
  - size:107, name: getName
  #1169:JSCall, frequency: 0.516367
  - size:50, name: _extend
  #1142:JSCall, frequency: 0.516367
  - size:50, name: _extend
  #427:JSCall, frequency: 0.516367
  - size:0, name: debugs.(anonymous function)
  #378:JSCall, frequency: 0.483633
  - size:12, name: onSocket
  #369:JSCall, frequency: 0.483633
  - size:13, name: reuseSocket
  #1442:JSCall, frequency: 0.269098
  - size:30, name: installListeners
  #1434:JSCall, frequency: 0.269098
  - size:0, name: debugs.(anonymous function)
[marking 0x148a38007f89 <JSFunction parserOnIncomingClient (sfi = 0x148af3d09e81)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 24/38 (63%), generic ICs: 0/38 (0%)]
[compiling method 0x148a38007f89 <JSFunction parserOnIncomingClient (sfi = 0x148af3d09e81)> using TurboFan]
Candidates for inlining (size=4):
  #177:JSCall, frequency: 1
  - size:11, name: addListener
  #166:JSCall, frequency: 1
  - size:101, name: Readable.on
  #105:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #49:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining addListener into parserOnIncomingClient
Candidates for inlining (size=4):
  #293:JSCall, frequency: 1
  - size:230, name: _addListener
  #166:JSCall, frequency: 1
  - size:101, name: Readable.on
  #105:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #49:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining _addListener into parserOnIncomingClient
Candidates for inlining (size=4):
  #166:JSCall, frequency: 1
  - size:101, name: Readable.on
  #105:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #49:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #510:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining Readable.on into parserOnIncomingClient
Candidates for inlining (size=4):
  #628:JSCall, frequency: 1
  - size:11, name: addListener
  #105:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #49:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #510:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining addListener into parserOnIncomingClient
Candidates for inlining (size=4):
  #728:JSCall, frequency: 1
  - size:230, name: _addListener
  #105:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #49:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #510:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining _addListener into parserOnIncomingClient
Candidates for inlining (size=4):
  #105:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #49:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #940:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
  #510:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148af3d079f9 <JSFunction addRequest (sfi = 0x148af3d06a61)> - took 3.285, 8.118, 0.081 ms]
[completed optimizing 0x148af3d079f9 <JSFunction addRequest (sfi = 0x148af3d06a61)>]
[marking 0x148af3d07a89 <JSFunction removeSocket (sfi = 0x148af3d06bf1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/38 (71%), generic ICs: 5/38 (13%)]
[compiling method 0x148af3d07a89 <JSFunction removeSocket (sfi = 0x148af3d06bf1)> using TurboFan]
Candidates for inlining (size=2):
  #43:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #20:JSCall, frequency: 1
  - size:107, name: getName
Inlining debugs.(anonymous function) into removeSocket
Candidates for inlining (size=1):
  #20:JSCall, frequency: 1
  - size:107, name: getName
Inlining getName into removeSocket
[optimizing 0x148a38007f89 <JSFunction parserOnIncomingClient (sfi = 0x148af3d09e81)> - took 2.003, 4.434, 0.042 ms]
[completed optimizing 0x148a38007f89 <JSFunction parserOnIncomingClient (sfi = 0x148af3d09e81)>]
[optimizing 0x148af3d07a89 <JSFunction removeSocket (sfi = 0x148af3d06bf1)> - took 0.645, 2.160, 0.028 ms]
[completed optimizing 0x148af3d07a89 <JSFunction removeSocket (sfi = 0x148af3d06bf1)>]
[marking 0x148a754f32d9 <JSFunction writeHead (sfi = 0x148af3d1a361)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/49 (51%), generic ICs: 1/49 (2%)]
[compiling method 0x148a754f32d9 <JSFunction writeHead (sfi = 0x148af3d1a361)> using TurboFan]
Candidates for inlining (size=1):
  #185:JSCall, frequency: 1
  - size:113, name: checkInvalidHeaderChar
Inlining checkInvalidHeaderChar into writeHead
[optimizing 0x148a754f32d9 <JSFunction writeHead (sfi = 0x148af3d1a361)> - took 0.579, 2.511, 0.059 ms]
[completed optimizing 0x148a754f32d9 <JSFunction writeHead (sfi = 0x148af3d1a361)>]
[marking 0x148af3d18171 <JSFunction _finish (sfi = 0x148af3d0a4c1)> for optimized recompilation, reason: small function, ICs with typeinfo: 7/7 (100%), generic ICs: 0/7 (0%)]
[compiling method 0x148af3d18171 <JSFunction _finish (sfi = 0x148af3d0a4c1)> using TurboFan]
Candidates for inlining (size=1):
  #53:JSCall, frequency: 1
  - size:16, name: _finish
Inlining _finish into _finish
Candidates for inlining (size=1):
  #100:JSCall, frequency: 1
  - size:11, name: ok
Inlining ok into _finish
[optimizing 0x148af3d18171 <JSFunction _finish (sfi = 0x148af3d0a4c1)> - took 0.342, 0.411, 0.019 ms]
[completed optimizing 0x148af3d18171 <JSFunction _finish (sfi = 0x148af3d0a4c1)>]
[marking 0x148a754f35a9 <JSFunction checkIsHttpToken (sfi = 0x148af3d0dfb1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/24 (83%), generic ICs: 0/24 (0%)]
[compiling method 0x148a754f35a9 <JSFunction checkIsHttpToken (sfi = 0x148af3d0dfb1)> using TurboFan]
[optimizing 0x148a754f35a9 <JSFunction checkIsHttpToken (sfi = 0x148af3d0dfb1)> - took 0.182, 0.866, 0.017 ms]
[completed optimizing 0x148a754f35a9 <JSFunction checkIsHttpToken (sfi = 0x148af3d0dfb1)>]
[marking 0x148af3d07b19 <JSFunction reuseSocket (sfi = 0x148af3d06d81)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148af3d07b19 <JSFunction reuseSocket (sfi = 0x148af3d06d81)> using TurboFan]
Candidates for inlining (size=2):
  #38:JSCall, frequency: 1
  - size:26, name: Socket.ref
  #29:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Socket.ref into reuseSocket
Candidates for inlining (size=1):
  #29:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into reuseSocket
[optimizing 0x148af3d07b19 <JSFunction reuseSocket (sfi = 0x148af3d06d81)> - took 0.531, 0.394, 0.013 ms]
[completed optimizing 0x148af3d07b19 <JSFunction reuseSocket (sfi = 0x148af3d06d81)>]
[marking 0x148af3d079b1 <JSFunction getName (sfi = 0x148af3d06999)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/26 (46%), generic ICs: 3/26 (11%)]
[compiling method 0x148af3d079b1 <JSFunction getName (sfi = 0x148af3d06999)> using TurboFan]
[optimizing 0x148af3d079b1 <JSFunction getName (sfi = 0x148af3d06999)> - took 0.216, 0.956, 0.016 ms]
[completed optimizing 0x148af3d079b1 <JSFunction getName (sfi = 0x148af3d06999)>]
[marking 0x148ad6ebd7f1 <JSFunction once (sfi = 0x148ad6ebc309)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 4/6 (66%), generic ICs: 2/6 (33%)]
[compiling method 0x148ad6ebd7f1 <JSFunction once (sfi = 0x148ad6ebc309)> using TurboFan]
Candidates for inlining (size=1):
  #37:JSCall, frequency: 1
  - size:42, name: _onceWrap
Inlining _onceWrap into once
[optimizing 0x148ad6ebd7f1 <JSFunction once (sfi = 0x148ad6ebc309)> - took 0.311, 0.729, 0.021 ms]
[completed optimizing 0x148ad6ebd7f1 <JSFunction once (sfi = 0x148ad6ebc309)>]
[marking 0x148a53b9b979 <JSFunction internalNextTick (sfi = 0x148a5a89de19)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/45 (44%), generic ICs: 0/45 (0%)]
[marking 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 22/62 (35%), generic ICs: 0/62 (0%)]
[compiling method 0x148a53b9b979 <JSFunction internalNextTick (sfi = 0x148a5a89de19)> using TurboFan]
Candidates for inlining (size=2):
  #196:JSCall, frequency: 1
  - size:42, name: push
  #184:JSConstruct, frequency: 1
  - size:34, name: TickObject
Inlining push into internalNextTick
Candidates for inlining (size=1):
  #184:JSConstruct, frequency: 1
  - size:34, name: TickObject
Inlining TickObject into internalNextTick
[compiling method 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)> using TurboFan]
Candidates for inlining (size=4):
  #195:JSCall, frequency: 1
  - size:106, name: freeParser
  #181:JSCall, frequency: 1
  - size:216, name: removeListener
  #170:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:11, name: ok
Inlining freeParser into socketOnData
Candidates for inlining (size=5):
  #392:JSCall, frequency: 1
  - size:23, name: emitDestroyScript
  #359:JSCall, frequency: 1
  - size:23, name: free
  #181:JSCall, frequency: 1
  - size:216, name: removeListener
  #170:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:11, name: ok
Inlining emitDestroyScript into socketOnData
Candidates for inlining (size=5):
  #502:JSCall, frequency: 1
  - size:30, name: validateAsyncId
  #359:JSCall, frequency: 1
  - size:23, name: free
  #181:JSCall, frequency: 1
  - size:216, name: removeListener
  #170:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:11, name: ok
Inlining validateAsyncId into socketOnData
Candidates for inlining (size=4):
  #359:JSCall, frequency: 1
  - size:23, name: free
  #181:JSCall, frequency: 1
  - size:216, name: removeListener
  #170:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:11, name: ok
Inlining free into socketOnData
Candidates for inlining (size=3):
  #181:JSCall, frequency: 1
  - size:216, name: removeListener
  #170:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:11, name: ok
Inlining removeListener into socketOnData
Candidates for inlining (size=3):
  #170:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:11, name: ok
  #942:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into socketOnData
Candidates for inlining (size=3):
  #53:JSCall, frequency: 1
  - size:11, name: ok
  #1367:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #942:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148a53b9b979 <JSFunction internalNextTick (sfi = 0x148a5a89de19)> - took 0.897, 1.844, 0.075 ms]
[completed optimizing 0x148a53b9b979 <JSFunction internalNextTick (sfi = 0x148a5a89de19)>]
[marking 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/9 (33%), generic ICs: 0/9 (0%)]
[compiling method 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)> using TurboFan]
Candidates for inlining (size=1):
  #53:JSCall, frequency: 1
  - size:200, name: readableAddChunk
Inlining readableAddChunk into Readable.push
Candidates for inlining (size=4):
  #311:JSCall, frequency: 1
  - size:23, name: needMoreData
  #121:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #290:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #133:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining needMoreData into Readable.push
Candidates for inlining (size=3):
  #121:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #290:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #133:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining onEofChunk into Readable.push
Candidates for inlining (size=3):
  #483:JSCall, frequency: 0.538279
  - size:49, name: emitReadable
  #290:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #133:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining emitReadable into Readable.push
Candidates for inlining (size=4):
  #571:JSCall, frequency: 0.538279
  - size:167, name: nextTick
  #543:JSCall, frequency: 0.538279
  - size:0, name: debugs.(anonymous function)
  #290:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #133:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining nextTick into Readable.push
Candidates for inlining (size=6):
  #861:JSCall, frequency: 0.538429
  - size:42, name: push
  #849:JSConstruct, frequency: 0.538429
  - size:34, name: TickObject
  #834:JSCall, frequency: 0.538429
  - size:27, name: initTriggerId
  #543:JSCall, frequency: 0.538279
  - size:0, name: debugs.(anonymous function)
  #290:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #133:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
[marking 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/27 (62%), generic ICs: 0/27 (0%)]
[compiling method 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)> using TurboFan]
Candidates for inlining (size=4):
  #167:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #122:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #67:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining debugs.(anonymous function) into afterWrite
Candidates for inlining (size=3):
  #122:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #67:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining _unrefTimer into afterWrite
Inlining small function(s) at call site #265:JSCall
Inlining exports._unrefActive into afterWrite
Candidates for inlining (size=3):
  #290:JSCall, frequency: 1
  - size:134, name: insert
  #67:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining insert into afterWrite
Inlining small function(s) at call site #630:JSCall
Inlining isEmpty into afterWrite
Candidates for inlining (size=4):
  #67:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #638:JSCall, frequency: 0.172813
  - size:11, name: ok
  #602:JSCall, frequency: 0.17255
  - size:41, name: append
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining debugs.(anonymous function) into afterWrite
Candidates for inlining (size=3):
  #638:JSCall, frequency: 0.172813
  - size:11, name: ok
  #602:JSCall, frequency: 0.17255
  - size:41, name: append
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining ok into afterWrite
Candidates for inlining (size=2):
  #602:JSCall, frequency: 0.17255
  - size:41, name: append
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining append into afterWrite
Candidates for inlining (size=2):
  #838:JSCall, frequency: 0.172436
  - size:42, name: remove
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining remove into afterWrite
Candidates for inlining (size=1):
  #200:JSCall, frequency: unknown
  - size:27, name: get
Inlining get into afterWrite
[optimizing 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)> - took 3.618, 10.414, 0.100 ms]
[completed optimizing 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)>]
[optimizing 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)> - took 2.945, 6.429, 0.091 ms]
[completed optimizing 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)>]
[optimizing 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)> - took 3.982, 6.840, 0.077 ms]
[completed optimizing 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)>]
[marking 0x148ad6ebd629 <JSFunction EventEmitter.init (sfi = 0x148ad6ebbe59)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 16/21 (76%), generic ICs: 7/21 (33%)]
[compiling method 0x148ad6ebd629 <JSFunction EventEmitter.init (sfi = 0x148ad6ebbe59)> using TurboFan]
[optimizing 0x148ad6ebd629 <JSFunction EventEmitter.init (sfi = 0x148ad6ebbe59)> - took 0.196, 1.285, 0.018 ms]
[completed optimizing 0x148ad6ebd629 <JSFunction EventEmitter.init (sfi = 0x148ad6ebbe59)>]
[marking 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/11 (90%), generic ICs: 0/11 (0%)]
[compiling method 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)> using TurboFan]
Candidates for inlining (size=2):
  #79:JSCall, frequency: 1
  - size:167, name: nextTick
  #50:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining nextTick into emitReadable
Candidates for inlining (size=4):
  #370:JSCall, frequency: 1.00028
  - size:42, name: push
  #358:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #343:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
  #50:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining push into emitReadable
Candidates for inlining (size=3):
  #358:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #343:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
  #50:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining TickObject into emitReadable
Candidates for inlining (size=2):
  #343:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
  #50:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining initTriggerId into emitReadable
Candidates for inlining (size=1):
  #50:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into emitReadable
[marking 0x148a38035fe9 <JSFunction pump (sfi = 0x148af3d22571)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 19/23 (82%), generic ICs: 0/23 (0%)]
[compiling method 0x148a38035fe9 <JSFunction pump (sfi = 0x148af3d22571)> using TurboFan]
Inlining small function(s) at call site #67:JSCall
Inlining isFn into pump
Candidates for inlining (size=1):
  #249:JSCall, frequency: 1
  - size:29, name: 
Inlining  into pump
Candidates for inlining (size=1):
  #281:JSCall, frequency: 1
  - size:39, name: destroyer
Inlining destroyer into pump
Candidates for inlining (size=3):
  #349:JSCall, frequency: 1
  - size:227, name: eos
  #329:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #313:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining eos into pump
Candidates for inlining (size=11):
  #657:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #639:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #616:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #603:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #580:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #521:JSCall, frequency: 1
  - size:11, name: isRequest
  #432:JSCall, frequency: 1
  - size:84, name: wrapper
  #329:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #313:JSCall, frequency: 1
  - size:84, name: wrapper
  #569:JSCall, frequency: 0.5
  - size:11, name: addListener
  #557:JSCall, frequency: 0.5
  - size:11, name: addListener
Inlining addListener into pump
Inlining Readable.on into pump
Not considering call site #761:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #807:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #838:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=10):
  #639:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #616:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #603:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #580:JSCall, frequency: 1
  - size:20, name: isChildProcess
  #521:JSCall, frequency: 1
  - size:11, name: isRequest
  #432:JSCall, frequency: 1
  - size:84, name: wrapper
  #329:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #313:JSCall, frequency: 1
  - size:84, name: wrapper
  #569:JSCall, frequency: 0.5
  - size:11, name: addListener
  #557:JSCall, frequency: 0.5
  - size:11, name: addListener
[optimizing 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)> - took 1.932, 3.562, 0.049 ms]
[completed optimizing 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)>]
[optimizing 0x148a38035fe9 <JSFunction pump (sfi = 0x148af3d22571)> - took 3.030, 7.040, 0.104 ms]
[completed optimizing 0x148a38035fe9 <JSFunction pump (sfi = 0x148af3d22571)>]
[marking 0x148a380119c1 <JSFunction resOnFinish (sfi = 0x148af3d1ad89)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 33/35 (94%), generic ICs: 0/35 (0%)]
[compiling method 0x148a380119c1 <JSFunction resOnFinish (sfi = 0x148af3d1ad89)> using TurboFan]
Candidates for inlining (size=4):
  #123:JSCall, frequency: 1
  - size:35, name: detachSocket
  #114:JSCall, frequency: 1
  - size:27, name: _dump
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
Inlining detachSocket into resOnFinish
Candidates for inlining (size=5):
  #340:JSCall, frequency: 1
  - size:216, name: removeListener
  #329:JSCall, frequency: 1
  - size:11, name: ok
  #114:JSCall, frequency: 1
  - size:27, name: _dump
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
Inlining removeListener into resOnFinish
Candidates for inlining (size=5):
  #329:JSCall, frequency: 1
  - size:11, name: ok
  #114:JSCall, frequency: 1
  - size:27, name: _dump
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
  #637:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining ok into resOnFinish
Candidates for inlining (size=4):
  #114:JSCall, frequency: 1
  - size:27, name: _dump
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
  #637:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining _dump into resOnFinish
Candidates for inlining (size=5):
  #875:JSCall, frequency: 1
  - size:32, name: Readable.resume
  #866:JSCall, frequency: 1
  - size:205, name: removeAllListeners
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
  #637:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining Readable.resume into resOnFinish
Candidates for inlining (size=6):
  #866:JSCall, frequency: 1
  - size:205, name: removeAllListeners
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
  #942:JSCall, frequency: 0.55112
  - size:20, name: resume
  #932:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
  #637:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeAllListeners into resOnFinish
Candidates for inlining (size=5):
  #66:JSCall, frequency: 1
  - size:11, name: ok
  #225:JSCall, frequency: 0.902368
  - size:48, name: assignSocket
  #942:JSCall, frequency: 0.55112
  - size:20, name: resume
  #932:JSCall, frequency: 0.55112
  - size:0, name: debugs.(anonymous function)
  #637:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148a380119c1 <JSFunction resOnFinish (sfi = 0x148af3d1ad89)> - took 2.342, 6.161, 0.100 ms]
[completed optimizing 0x148a380119c1 <JSFunction resOnFinish (sfi = 0x148af3d1ad89)>]
[marking 0x148a785b8321 <JSFunction addChunk (sfi = 0x148a5a8ee2d9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 18/24 (75%), generic ICs: 0/24 (0%)]
[compiling method 0x148a785b8321 <JSFunction addChunk (sfi = 0x148a5a8ee2d9)> using TurboFan]
Candidates for inlining (size=2):
  #139:JSCall, frequency: 1
  - size:20, name: maybeReadMore
  #115:JSCall, frequency: 0.5
  - size:42, name: push
Inlining maybeReadMore into addChunk
Candidates for inlining (size=2):
  #224:JSCall, frequency: 0.5
  - size:167, name: nextTick
  #115:JSCall, frequency: 0.5
  - size:42, name: push
Inlining nextTick into addChunk
Candidates for inlining (size=4):
  #498:JSCall, frequency: 0.500139
  - size:42, name: push
  #486:JSConstruct, frequency: 0.500139
  - size:34, name: TickObject
  #471:JSCall, frequency: 0.500139
  - size:27, name: initTriggerId
  #115:JSCall, frequency: 0.5
  - size:42, name: push
Inlining push into addChunk
Candidates for inlining (size=3):
  #486:JSConstruct, frequency: 0.500139
  - size:34, name: TickObject
  #471:JSCall, frequency: 0.500139
  - size:27, name: initTriggerId
  #115:JSCall, frequency: 0.5
  - size:42, name: push
Inlining TickObject into addChunk
Candidates for inlining (size=2):
  #471:JSCall, frequency: 0.500139
  - size:27, name: initTriggerId
  #115:JSCall, frequency: 0.5
  - size:42, name: push
Inlining initTriggerId into addChunk
Candidates for inlining (size=1):
  #115:JSCall, frequency: 0.5
  - size:42, name: push
Inlining push into addChunk
[marking 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/36 (33%), generic ICs: 0/36 (0%)]
[compiling method 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)> using TurboFan]
Candidates for inlining (size=5):
  #95:JSCall, frequency: 1
  - size:70, name: Readable.push
  #86:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #62:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #47:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #38:JSCall, frequency: 1
  - size:11, name: ok
Inlining Readable.push into onread
Candidates for inlining (size=5):
  #221:JSCall, frequency: 1
  - size:200, name: readableAddChunk
  #86:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #62:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #47:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #38:JSCall, frequency: 1
  - size:11, name: ok
Inlining readableAddChunk into onread
Candidates for inlining (size=8):
  #458:JSCall, frequency: 1
  - size:23, name: needMoreData
  #86:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #62:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #47:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #38:JSCall, frequency: 1
  - size:11, name: ok
  #269:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #437:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #281:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining needMoreData into onread
Candidates for inlining (size=7):
  #86:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #62:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #47:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #38:JSCall, frequency: 1
  - size:11, name: ok
  #269:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #437:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #281:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining debugs.(anonymous function) into onread
Candidates for inlining (size=6):
  #62:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #47:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #38:JSCall, frequency: 1
  - size:11, name: ok
  #269:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #437:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #281:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining debugs.(anonymous function) into onread
Candidates for inlining (size=5):
  #47:JSCall, frequency: 1
  - size:28, name: _unrefTimer
  #38:JSCall, frequency: 1
  - size:11, name: ok
  #269:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #437:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #281:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining _unrefTimer into onread
Inlining small function(s) at call site #641:JSCall
Inlining exports._unrefActive into onread
Candidates for inlining (size=5):
  #666:JSCall, frequency: 1
  - size:134, name: insert
  #38:JSCall, frequency: 1
  - size:11, name: ok
  #269:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #437:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #281:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining insert into onread
Inlining small function(s) at call site #1005:JSCall
Inlining isEmpty into onread
Candidates for inlining (size=6):
  #38:JSCall, frequency: 1
  - size:11, name: ok
  #269:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #437:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #281:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
  #1013:JSCall, frequency: 0.186107
  - size:11, name: ok
  #978:JSCall, frequency: 0.185848
  - size:41, name: append
[optimizing 0x148a785b8321 <JSFunction addChunk (sfi = 0x148a5a8ee2d9)> - took 1.681, 3.325, 0.038 ms]
[completed optimizing 0x148a785b8321 <JSFunction addChunk (sfi = 0x148a5a8ee2d9)>]
[optimizing 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)> - took 2.852, 4.410, 0.068 ms]
[completed optimizing 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)>]
[marking 0x148a754f3da9 <JSFunction decodeChunk (sfi = 0x148a5a8f40a1)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/6 (50%), generic ICs: 1/6 (16%)]
[compiling method 0x148a754f3da9 <JSFunction decodeChunk (sfi = 0x148a5a8f40a1)> using TurboFan]
[optimizing 0x148a754f3da9 <JSFunction decodeChunk (sfi = 0x148a5a8f40a1)> - took 0.098, 0.355, 0.007 ms]
[completed optimizing 0x148a754f3da9 <JSFunction decodeChunk (sfi = 0x148a5a8f40a1)>]
[marking 0x148a487b2bf9 <JSFunction onfinish (sfi = 0x148a785f2ec9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 1/4 (25%)]
[compiling method 0x148a487cb3b1 <JSFunction onfinish (sfi = 0x148a785f2ec9)> using TurboFan]
Candidates for inlining (size=2):
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into onfinish
Candidates for inlining (size=2):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #318:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining debugs.(anonymous function) into onfinish
Candidates for inlining (size=1):
  #318:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining spliceOne into onfinish
[optimizing 0x148a487cb3b1 <JSFunction onfinish (sfi = 0x148a785f2ec9)> - took 1.266, 3.873, 0.050 ms]
[completed optimizing 0x148a487cb3b1 <JSFunction onfinish (sfi = 0x148a785f2ec9)>]
[marking 0x148a785b8369 <JSFunction chunkInvalid (sfi = 0x148a5a8ee3a1)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/8 (50%), generic ICs: 0/8 (0%)]
[compiling method 0x148a785b8369 <JSFunction chunkInvalid (sfi = 0x148a5a8ee3a1)> using TurboFan]
Inlining small function(s) at call site #33:JSCall
Inlining isUint8Array into chunkInvalid
Candidates for inlining (size=1):
  #83:JSCall, frequency: 1
  - size:19, name: args
Inlining args into chunkInvalid
[optimizing 0x148a785b8369 <JSFunction chunkInvalid (sfi = 0x148a5a8ee3a1)> - took 0.438, 0.509, 0.013 ms]
[completed optimizing 0x148a785b8369 <JSFunction chunkInvalid (sfi = 0x148a5a8ee3a1)>]
[marking 0x148a38007fd1 <JSFunction responseKeepAlive (sfi = 0x148af3d09f49)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 15/25 (60%), generic ICs: 0/25 (0%)]
[compiling method 0x148a38007fd1 <JSFunction responseKeepAlive (sfi = 0x148af3d09f49)> using TurboFan]
Candidates for inlining (size=5):
  #133:JSCall, frequency: 1
  - size:169, name: internalNextTick
  #88:JSCall, frequency: 1
  - size:28, name: once
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining internalNextTick into responseKeepAlive
Candidates for inlining (size=6):
  #366:JSCall, frequency: 1
  - size:42, name: push
  #354:JSConstruct, frequency: 1
  - size:34, name: TickObject
  #88:JSCall, frequency: 1
  - size:28, name: once
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining push into responseKeepAlive
Candidates for inlining (size=5):
  #354:JSConstruct, frequency: 1
  - size:34, name: TickObject
  #88:JSCall, frequency: 1
  - size:28, name: once
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining TickObject into responseKeepAlive
Candidates for inlining (size=4):
  #88:JSCall, frequency: 1
  - size:28, name: once
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining once into responseKeepAlive
Candidates for inlining (size=5):
  #721:JSCall, frequency: 1
  - size:101, name: Readable.on
  #715:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Readable.on into responseKeepAlive
Candidates for inlining (size=5):
  #769:JSCall, frequency: 1
  - size:11, name: addListener
  #715:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining addListener into responseKeepAlive
Candidates for inlining (size=5):
  #870:JSCall, frequency: 1
  - size:230, name: _addListener
  #715:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining _addListener into responseKeepAlive
Candidates for inlining (size=5):
  #715:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #78:JSCall, frequency: 1
  - size:216, name: removeListener
  #67:JSCall, frequency: 1
  - size:216, name: removeListener
  #44:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #1084:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a38007fd1 <JSFunction responseKeepAlive (sfi = 0x148af3d09f49)> - took 2.947, 4.603, 0.082 ms]
[completed optimizing 0x148a38007fd1 <JSFunction responseKeepAlive (sfi = 0x148af3d09f49)>]
[marking 0x148a55102a29 <JSFunction onFree (sfi = 0x148af3d7cd51)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148a55123c71 <JSFunction onFree (sfi = 0x148af3d7cd51)> using TurboFan]
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onFree
[optimizing 0x148a55123c71 <JSFunction onFree (sfi = 0x148af3d7cd51)> - took 0.201, 0.347, 0.013 ms]
[completed optimizing 0x148a55123c71 <JSFunction onFree (sfi = 0x148af3d7cd51)>]
[marking 0x148acaa36179 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148acaa39c59 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148acaa39c59 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.156, 0.750, 0.018 ms]
[completed optimizing 0x148acaa39c59 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148a53b8b321 <JSFunction FastBuffer (sfi = 0x148ad6ef1449)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148a53b8b321 <JSFunction FastBuffer (sfi = 0x148ad6ef1449)> using TurboFan]
[optimizing 0x148a53b8b321 <JSFunction FastBuffer (sfi = 0x148ad6ef1449)> - took 0.118, 0.336, 0.012 ms]
[completed optimizing 0x148a53b8b321 <JSFunction FastBuffer (sfi = 0x148ad6ef1449)>]
[marking 0x148a785b8681 <JSFunction resume (sfi = 0x148a5a8eec39)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x148a785b8681 <JSFunction resume (sfi = 0x148a5a8eec39)> using TurboFan]
Candidates for inlining (size=1):
  #40:JSCall, frequency: 1
  - size:167, name: nextTick
Inlining nextTick into resume
Candidates for inlining (size=3):
  #317:JSCall, frequency: 1.00028
  - size:42, name: push
  #305:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #290:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining push into resume
Candidates for inlining (size=2):
  #305:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #290:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining TickObject into resume
Candidates for inlining (size=1):
  #290:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining initTriggerId into resume
[marking 0x148a38011e81 <JSFunction onFinish (sfi = 0x148af3d13851)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a38011e81 <JSFunction onFinish (sfi = 0x148af3d13851)> using TurboFan]
[optimizing 0x148a38011e81 <JSFunction onFinish (sfi = 0x148af3d13851)> - took 0.065, 0.289, 0.012 ms]
[completed optimizing 0x148a38011e81 <JSFunction onFinish (sfi = 0x148af3d13851)>]
[optimizing 0x148a785b8681 <JSFunction resume (sfi = 0x148a5a8eec39)> - took 1.135, 2.688, 0.043 ms]
[completed optimizing 0x148a785b8681 <JSFunction resume (sfi = 0x148a5a8eec39)>]
[marking 0x148a38008019 <JSFunction responseOnEnd (sfi = 0x148af3d0a011)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[marking 0x148a336e7d71 <JSFunction unpipe (sfi = 0x148a785f2f91)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148a38008019 <JSFunction responseOnEnd (sfi = 0x148af3d0a011)> using TurboFan]
Candidates for inlining (size=1):
  #46:JSCall, frequency: 1
  - size:105, name: responseKeepAlive
Inlining responseKeepAlive into responseOnEnd
Candidates for inlining (size=5):
  #201:JSCall, frequency: 1
  - size:169, name: internalNextTick
  #156:JSCall, frequency: 1
  - size:28, name: once
  #146:JSCall, frequency: 1
  - size:216, name: removeListener
  #135:JSCall, frequency: 1
  - size:216, name: removeListener
  #112:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining internalNextTick into responseOnEnd
Candidates for inlining (size=6):
  #432:JSCall, frequency: 1
  - size:42, name: push
  #420:JSConstruct, frequency: 1
  - size:34, name: TickObject
  #156:JSCall, frequency: 1
  - size:28, name: once
  #146:JSCall, frequency: 1
  - size:216, name: removeListener
  #135:JSCall, frequency: 1
  - size:216, name: removeListener
  #112:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining push into responseOnEnd
Candidates for inlining (size=5):
  #420:JSConstruct, frequency: 1
  - size:34, name: TickObject
  #156:JSCall, frequency: 1
  - size:28, name: once
  #146:JSCall, frequency: 1
  - size:216, name: removeListener
  #135:JSCall, frequency: 1
  - size:216, name: removeListener
  #112:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining TickObject into responseOnEnd
Candidates for inlining (size=4):
  #156:JSCall, frequency: 1
  - size:28, name: once
  #146:JSCall, frequency: 1
  - size:216, name: removeListener
  #135:JSCall, frequency: 1
  - size:216, name: removeListener
  #112:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining once into responseOnEnd
Candidates for inlining (size=5):
  #787:JSCall, frequency: 1
  - size:101, name: Readable.on
  #781:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #146:JSCall, frequency: 1
  - size:216, name: removeListener
  #135:JSCall, frequency: 1
  - size:216, name: removeListener
  #112:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Readable.on into responseOnEnd
Candidates for inlining (size=5):
  #835:JSCall, frequency: 1
  - size:11, name: addListener
  #781:JSCall, frequency: 1
  - size:42, name: _onceWrap
  #146:JSCall, frequency: 1
  - size:216, name: removeListener
  #135:JSCall, frequency: 1
  - size:216, name: removeListener
  #112:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
[compiling method 0x148a336ec171 <JSFunction unpipe (sfi = 0x148a785f2f91)> using TurboFan]
Candidates for inlining (size=2):
  #39:JSCall, frequency: 1
  - size:214, name: Readable.unpipe
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Readable.unpipe into unpipe
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into unpipe
[optimizing 0x148a336ec171 <JSFunction unpipe (sfi = 0x148a785f2f91)> - took 0.407, 0.948, 0.017 ms]
[completed optimizing 0x148a336ec171 <JSFunction unpipe (sfi = 0x148a785f2f91)>]
[optimizing 0x148a38008019 <JSFunction responseOnEnd (sfi = 0x148af3d0a011)> - took 2.171, 2.727, 0.052 ms]
[completed optimizing 0x148a38008019 <JSFunction responseOnEnd (sfi = 0x148af3d0a011)>]
[marking 0x148af3d18249 <JSFunction onSocket (sfi = 0x148af3d0a719)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148af3d18249 <JSFunction onSocket (sfi = 0x148af3d0a719)> using TurboFan]
Candidates for inlining (size=1):
  #25:JSCall, frequency: 1
  - size:167, name: nextTick
Inlining nextTick into onSocket
Candidates for inlining (size=3):
  #290:JSCall, frequency: 1.00028
  - size:42, name: push
  #278:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #263:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining push into onSocket
Candidates for inlining (size=2):
  #278:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #263:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining TickObject into onSocket
Candidates for inlining (size=1):
  #263:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining initTriggerId into onSocket
[optimizing 0x148af3d18249 <JSFunction onSocket (sfi = 0x148af3d0a719)> - took 1.099, 2.635, 0.050 ms]
[completed optimizing 0x148af3d18249 <JSFunction onSocket (sfi = 0x148af3d0a719)>]
[marking 0x148af3d17ef1 <JSFunction _flush (sfi = 0x148af3d148b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/9 (77%), generic ICs: 1/9 (11%)]
[compiling method 0x148af3d17ef1 <JSFunction _flush (sfi = 0x148af3d148b9)> using TurboFan]
Candidates for inlining (size=2):
  #38:JSCall, frequency: 1
  - size:128, name: _flushOutput
  #57:JSCall, frequency: 0.608677
  - size:21, name: _finish
  - size:20, name: _finish
Inlining _flushOutput into _flush
Candidates for inlining (size=4):
  #226:JSCall, frequency: 1.14437
  - size:33, name: Socket.write
  #241:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #169:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #57:JSCall, frequency: 0.608677
  - size:21, name: _finish
  - size:20, name: _finish
Inlining Socket.write into _flush
Candidates for inlining (size=4):
  #442:JSCall, frequency: 1.14437
  - size:130, name: Writable.write
  #241:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #169:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #57:JSCall, frequency: 0.608677
  - size:21, name: _finish
  - size:20, name: _finish
Inlining Writable.write into _flush
Inlining small function(s) at call site #505:JSCall
Inlining isUint8Array into _flush
Candidates for inlining (size=6):
  #698:JSCall, frequency: 1.14437
  - size:19, name: args
  #655:JSCall, frequency: 1.14437
  - size:158, name: writeOrBuffer
  #241:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #169:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #627:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #57:JSCall, frequency: 0.608677
  - size:21, name: _finish
  - size:20, name: _finish
Inlining args into _flush
Candidates for inlining (size=5):
  #655:JSCall, frequency: 1.14437
  - size:158, name: writeOrBuffer
  #241:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #169:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #627:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #57:JSCall, frequency: 0.608677
  - size:21, name: _finish
  - size:20, name: _finish
Inlining writeOrBuffer into _flush
Candidates for inlining (size=5):
  #241:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #169:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #627:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #780:JSCall, frequency: 0.660104
  - size:29, name: decodeChunk
  #57:JSCall, frequency: 0.608677
  - size:21, name: _finish
  - size:20, name: _finish
[marking 0x148a75484af1 <JSFunction handler (sfi = 0x148af3d04021)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 6/6 (100%), generic ICs: 0/6 (0%)]
[compiling method 0x148a75484af1 <JSFunction handler (sfi = 0x148af3d04021)> using TurboFan]
Candidates for inlining (size=3):
  #73:JSCall, frequency: 1
  - size:11, name: addListener
  #61:JSCall, frequency: 1
  - size:11, name: addListener
  #48:JSCall, frequency: 1
  - size:17, name: get
Inlining addListener into handler
Candidates for inlining (size=3):
  #103:JSCall, frequency: 1
  - size:230, name: _addListener
  #61:JSCall, frequency: 1
  - size:11, name: addListener
  #48:JSCall, frequency: 1
  - size:17, name: get
Inlining _addListener into handler
Candidates for inlining (size=3):
  #61:JSCall, frequency: 1
  - size:11, name: addListener
  #48:JSCall, frequency: 1
  - size:17, name: get
  #321:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining addListener into handler
Candidates for inlining (size=3):
  #410:JSCall, frequency: 1
  - size:230, name: _addListener
  #48:JSCall, frequency: 1
  - size:17, name: get
  #321:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining _addListener into handler
Candidates for inlining (size=3):
  #48:JSCall, frequency: 1
  - size:17, name: get
  #622:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
  #321:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a75484af1 <JSFunction handler (sfi = 0x148af3d04021)> - took 1.368, 3.896, 0.047 ms]
[completed optimizing 0x148a75484af1 <JSFunction handler (sfi = 0x148af3d04021)>]
[optimizing 0x148af3d17ef1 <JSFunction _flush (sfi = 0x148af3d148b9)> - took 2.273, 6.272, 0.085 ms]
[completed optimizing 0x148af3d17ef1 <JSFunction _flush (sfi = 0x148af3d148b9)>]
[marking 0x148a785b3d91 <JSFunction undestroy (sfi = 0x148a5a8f2629)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/20 (100%), generic ICs: 0/20 (0%)]
[compiling method 0x148a785b3d91 <JSFunction undestroy (sfi = 0x148a5a8f2629)> using TurboFan]
[optimizing 0x148a785b3d91 <JSFunction undestroy (sfi = 0x148a5a8f2629)> - took 0.351, 0.403, 0.012 ms]
[completed optimizing 0x148a785b3d91 <JSFunction undestroy (sfi = 0x148a5a8f2629)>]
[marking 0x148a754cf6c1 <JSFunction Socket (sfi = 0x148a53bcae99)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 38/81 (46%), generic ICs: 1/81 (1%)]
[compiling method 0x148a754cf6c1 <JSFunction Socket (sfi = 0x148a53bcae99)> using TurboFan]
Candidates for inlining (size=4):
  #209:JSCall, frequency: 1
  - size:61, name: initSocketHandle
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #192:JSCall, frequency: 1
  - size:101, name: Readable.on
  #112:JSCall, frequency: 1
  - size:78, name: Duplex
Inlining initSocketHandle into Socket
Candidates for inlining (size=5):
  #516:JSCall, frequency: 1
  - size:82, name: undestroy
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #192:JSCall, frequency: 1
  - size:101, name: Readable.on
  #112:JSCall, frequency: 1
  - size:78, name: Duplex
  #571:JSCall, frequency: 0.512801
  - size:18, name: getNewAsyncId
Inlining undestroy into Socket
Candidates for inlining (size=4):
  #203:JSCall, frequency: 1
  - size:101, name: Readable.on
  #192:JSCall, frequency: 1
  - size:101, name: Readable.on
  #112:JSCall, frequency: 1
  - size:78, name: Duplex
  #571:JSCall, frequency: 0.512801
  - size:18, name: getNewAsyncId
Inlining Readable.on into Socket
Candidates for inlining (size=4):
  #886:JSCall, frequency: 1
  - size:11, name: addListener
  #192:JSCall, frequency: 1
  - size:101, name: Readable.on
  #112:JSCall, frequency: 1
  - size:78, name: Duplex
  #571:JSCall, frequency: 0.512801
  - size:18, name: getNewAsyncId
Inlining addListener into Socket
Candidates for inlining (size=4):
  #985:JSCall, frequency: 1
  - size:230, name: _addListener
  #192:JSCall, frequency: 1
  - size:101, name: Readable.on
  #112:JSCall, frequency: 1
  - size:78, name: Duplex
  #571:JSCall, frequency: 0.512801
  - size:18, name: getNewAsyncId
Inlining _addListener into Socket
Candidates for inlining (size=4):
  #192:JSCall, frequency: 1
  - size:101, name: Readable.on
  #112:JSCall, frequency: 1
  - size:78, name: Duplex
  #571:JSCall, frequency: 0.512801
  - size:18, name: getNewAsyncId
  #1201:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a754cf6c1 <JSFunction Socket (sfi = 0x148a53bcae99)> - took 3.574, 5.154, 0.153 ms]
[completed optimizing 0x148a754cf6c1 <JSFunction Socket (sfi = 0x148a53bcae99)>]
[marking 0x148a38694ba1 <JSFunction (sfi = 0x148a785f09c9)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/2 (50%), generic ICs: 1/2 (50%)]
[compiling method 0x148a38698681 <JSFunction (sfi = 0x148a785f09c9)> using TurboFan]
[optimizing 0x148a38698681 <JSFunction (sfi = 0x148a785f09c9)> - took 0.067, 0.340, 0.006 ms]
[completed optimizing 0x148a38698681 <JSFunction (sfi = 0x148a785f09c9)>]
[marking 0x148a380080a9 <JSFunction emitFreeNT (sfi = 0x148af3d0a1a1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a380080a9 <JSFunction emitFreeNT (sfi = 0x148af3d0a1a1)> using TurboFan]
[optimizing 0x148a380080a9 <JSFunction emitFreeNT (sfi = 0x148af3d0a1a1)> - took 0.075, 0.257, 0.008 ms]
[completed optimizing 0x148a380080a9 <JSFunction emitFreeNT (sfi = 0x148af3d0a1a1)>]
[marking 0x148adad43a49 <JSFunction onend (sfi = 0x148a785f2ae1)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148adad47e49 <JSFunction onend (sfi = 0x148a785f2ae1)> using TurboFan]
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onend
[optimizing 0x148adad47e49 <JSFunction onend (sfi = 0x148a785f2ae1)> - took 0.192, 0.335, 0.020 ms]
[completed optimizing 0x148adad47e49 <JSFunction onend (sfi = 0x148a785f2ae1)>]
[marking 0x148a53ba7b39 <JSFunction adjustOffset (sfi = 0x148ad6ef1129)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/9 (77%), generic ICs: 0/9 (0%)]
[marking 0x148a785b5c69 <JSFunction fromList (sfi = 0x148a5a8eee91)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 15/28 (53%), generic ICs: 0/28 (0%)]
[compiling method 0x148a53ba7b39 <JSFunction adjustOffset (sfi = 0x148ad6ef1129)> using TurboFan]
[compiling method 0x148a785b5c69 <JSFunction fromList (sfi = 0x148a5a8eee91)> using TurboFan]
Candidates for inlining (size=1):
  #119:JSCall, frequency: 1
  - size:16, name: clear
Inlining clear into fromList
[optimizing 0x148a53ba7b39 <JSFunction adjustOffset (sfi = 0x148ad6ef1129)> - took 0.126, 0.429, 0.009 ms]
[completed optimizing 0x148a53ba7b39 <JSFunction adjustOffset (sfi = 0x148ad6ef1129)>]
[optimizing 0x148a785b5c69 <JSFunction fromList (sfi = 0x148a5a8eee91)> - took 0.306, 0.724, 0.011 ms]
[completed optimizing 0x148a785b5c69 <JSFunction fromList (sfi = 0x148a5a8eee91)>]
[marking 0x148a336de571 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148a336e2971 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[marking 0x148a5a8f6bc1 <JSFunction Writable.uncork (sfi = 0x148a5a8f51d1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/11 (100%), generic ICs: 0/11 (0%)]
[compiling method 0x148a5a8f6bc1 <JSFunction Writable.uncork (sfi = 0x148a5a8f51d1)> using TurboFan]
[optimizing 0x148a5a8f6bc1 <JSFunction Writable.uncork (sfi = 0x148a5a8f51d1)> - took 0.122, 0.848, 0.047 ms]
[completed optimizing 0x148a5a8f6bc1 <JSFunction Writable.uncork (sfi = 0x148a5a8f51d1)>]
[marking 0x148a5a8f2e09 <JSFunction Readable.unpipe (sfi = 0x148a5a8efb11)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/40 (30%), generic ICs: 0/40 (0%)]
[optimizing 0x148a336e2971 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 1.852, 6.547, 0.050 ms]
[completed optimizing 0x148a336e2971 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[compiling method 0x148a5a8f2e09 <JSFunction Readable.unpipe (sfi = 0x148a5a8efb11)> using TurboFan]
[optimizing 0x148a5a8f2e09 <JSFunction Readable.unpipe (sfi = 0x148a5a8efb11)> - took 0.176, 0.696, 0.012 ms]
[completed optimizing 0x148a5a8f2e09 <JSFunction Readable.unpipe (sfi = 0x148a5a8efb11)>]
[marking 0x148ad6ef9f01 <JSFunction slice (sfi = 0x148ad6ef2709)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/11 (90%), generic ICs: 0/11 (0%)]
[compiling method 0x148ad6ef9f01 <JSFunction slice (sfi = 0x148ad6ef2709)> using TurboFan]
Candidates for inlining (size=3):
  #80:JSConstruct, frequency: 1
  - size:13, name: FastBuffer
  #34:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #21:JSCall, frequency: 1
  - size:47, name: adjustOffset
Inlining FastBuffer into slice
Candidates for inlining (size=2):
  #34:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #21:JSCall, frequency: 1
  - size:47, name: adjustOffset
Inlining adjustOffset into slice
Candidates for inlining (size=1):
  #21:JSCall, frequency: 1
  - size:47, name: adjustOffset
Inlining adjustOffset into slice
[optimizing 0x148ad6ef9f01 <JSFunction slice (sfi = 0x148ad6ef2709)> - took 0.778, 1.276, 0.021 ms]
[completed optimizing 0x148ad6ef9f01 <JSFunction slice (sfi = 0x148ad6ef2709)>]
[marking 0x148a475ed509 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a475ee141 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148a475ee141 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.116, 0.707, 0.019 ms]
[completed optimizing 0x148a475ee141 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148a5a8f6b79 <JSFunction Writable.cork (sfi = 0x148a5a8f5109)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x148a5a8f6b79 <JSFunction Writable.cork (sfi = 0x148a5a8f5109)> using TurboFan]
[optimizing 0x148a5a8f6b79 <JSFunction Writable.cork (sfi = 0x148a5a8f5109)> - took 0.088, 0.405, 0.012 ms]
[completed optimizing 0x148a5a8f6b79 <JSFunction Writable.cork (sfi = 0x148a5a8f5109)>]
[marking 0x148af3d1cbe9 <JSFunction assignSocket (sfi = 0x148af3d1b3c9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/11 (100%), generic ICs: 0/11 (0%)]
[compiling method 0x148af3d1cbe9 <JSFunction assignSocket (sfi = 0x148af3d1b3c9)> using TurboFan]
Candidates for inlining (size=3):
  #76:JSCall, frequency: 1
  - size:50, name: _flush
  #49:JSCall, frequency: 1
  - size:56, name: socketOnWrap
  #34:JSCall, frequency: 1
  - size:11, name: ok
Inlining _flush into assignSocket
Candidates for inlining (size=4):
  #172:JSCall, frequency: 1
  - size:128, name: _flushOutput
  #49:JSCall, frequency: 1
  - size:56, name: socketOnWrap
  #34:JSCall, frequency: 1
  - size:11, name: ok
  #191:JSCall, frequency: 0.61049
  - size:21, name: _finish
  - size:20, name: _finish
Inlining _flushOutput into assignSocket
Candidates for inlining (size=6):
  #349:JSCall, frequency: 1.14437
  - size:33, name: Socket.write
  #49:JSCall, frequency: 1
  - size:56, name: socketOnWrap
  #34:JSCall, frequency: 1
  - size:11, name: ok
  #364:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #292:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #191:JSCall, frequency: 0.61049
  - size:21, name: _finish
  - size:20, name: _finish
Inlining Socket.write into assignSocket
Candidates for inlining (size=6):
  #565:JSCall, frequency: 1.14437
  - size:130, name: Writable.write
  #49:JSCall, frequency: 1
  - size:56, name: socketOnWrap
  #34:JSCall, frequency: 1
  - size:11, name: ok
  #364:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #292:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #191:JSCall, frequency: 0.61049
  - size:21, name: _finish
  - size:20, name: _finish
Inlining Writable.write into assignSocket
Inlining small function(s) at call site #628:JSCall
Inlining isUint8Array into assignSocket
Not considering call site #821:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=7):
  #778:JSCall, frequency: 1.14437
  - size:158, name: writeOrBuffer
  #49:JSCall, frequency: 1
  - size:56, name: socketOnWrap
  #34:JSCall, frequency: 1
  - size:11, name: ok
  #364:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #292:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #750:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #191:JSCall, frequency: 0.61049
  - size:21, name: _finish
  - size:20, name: _finish
Inlining writeOrBuffer into assignSocket
Not considering call site #870:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=6):
  #49:JSCall, frequency: 1
  - size:56, name: socketOnWrap
  #34:JSCall, frequency: 1
  - size:11, name: ok
  #364:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #292:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #750:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #191:JSCall, frequency: 0.61049
  - size:21, name: _finish
  - size:20, name: _finish
[optimizing 0x148af3d1cbe9 <JSFunction assignSocket (sfi = 0x148af3d1b3c9)> - took 2.328, 6.840, 0.086 ms]
[completed optimizing 0x148af3d1cbe9 <JSFunction assignSocket (sfi = 0x148af3d1b3c9)>]
[marking 0x148a75484a19 <JSFunction get (sfi = 0x148af3d05461)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148a75484a19 <JSFunction get (sfi = 0x148af3d05461)> using TurboFan]
Inlining small function(s) at call site #16:JSCall
Inlining request into get
[optimizing 0x148a75484a19 <JSFunction get (sfi = 0x148af3d05461)> - took 0.100, 0.311, 0.014 ms]
[completed optimizing 0x148a75484a19 <JSFunction get (sfi = 0x148af3d05461)>]
[marking 0x148af3d17dd1 <JSFunction write (sfi = 0x148af3d14599)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[marking 0x148ad9cba2b1 <JSFunction onend (sfi = 0x148a785f1629)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[marking 0x148ad9cbab89 <JSFunction onfinish (sfi = 0x148a785f1561)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148af3d17dd1 <JSFunction write (sfi = 0x148af3d14599)> using TurboFan]
Candidates for inlining (size=1):
  #18:JSCall, frequency: 1
  - size:206, name: write_
Inlining write_ into write
Candidates for inlining (size=8):
  #348:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #323:JSCall, frequency: 1
  - size:137, name: _send
  #305:JSCall, frequency: 1
  - size:137, name: _send
  #296:JSCall, frequency: 1
  - size:137, name: _send
  #277:JSCall, frequency: 1
  - size:137, name: _send
  #73:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #220:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #200:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining debugs.(anonymous function) into write
Candidates for inlining (size=7):
  #323:JSCall, frequency: 1
  - size:137, name: _send
  #305:JSCall, frequency: 1
  - size:137, name: _send
  #296:JSCall, frequency: 1
  - size:137, name: _send
  #277:JSCall, frequency: 1
  - size:137, name: _send
  #73:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #220:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #200:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining _send into write
Candidates for inlining (size=7):
  #520:JSCall, frequency: 1
  - size:158, name: _writeRaw
  #305:JSCall, frequency: 1
  - size:137, name: _send
  #296:JSCall, frequency: 1
  - size:137, name: _send
  #277:JSCall, frequency: 1
  - size:137, name: _send
  #73:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #220:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #200:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining _writeRaw into write
Candidates for inlining (size=9):
  #305:JSCall, frequency: 1
  - size:137, name: _send
  #296:JSCall, frequency: 1
  - size:137, name: _send
  #277:JSCall, frequency: 1
  - size:137, name: _send
  #73:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #220:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #200:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
  #675:JSCall, frequency: 0.587753
  - size:33, name: Socket.write
  #785:JSCall, frequency: unknown
  - size:27, name: get
  #773:JSCall, frequency: unknown
  - size:27, name: get
[compiling method 0x148ad9cbe6a1 <JSFunction onend (sfi = 0x148a785f1629)> using TurboFan]
[compiling method 0x148ad9cbef79 <JSFunction onfinish (sfi = 0x148a785f1561)> using TurboFan]
[optimizing 0x148ad9cbe6a1 <JSFunction onend (sfi = 0x148a785f1629)> - took 0.092, 0.455, 0.013 ms]
[completed optimizing 0x148ad9cbe6a1 <JSFunction onend (sfi = 0x148a785f1629)>]
[optimizing 0x148ad9cbef79 <JSFunction onfinish (sfi = 0x148a785f1561)> - took 0.081, 0.397, 0.008 ms]
[completed optimizing 0x148ad9cbef79 <JSFunction onfinish (sfi = 0x148a785f1561)>]
[optimizing 0x148af3d17dd1 <JSFunction write (sfi = 0x148af3d14599)> - took 2.848, 3.869, 0.054 ms]
[completed optimizing 0x148af3d17dd1 <JSFunction write (sfi = 0x148af3d14599)>]
[marking 0x148a79e6cb99 <JSFunction (sfi = 0x148a785f0621)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/5 (60%), generic ICs: 0/5 (0%)]
[compiling method 0x148a79e6d4b9 <JSFunction (sfi = 0x148a785f0621)> using TurboFan]
Candidates for inlining (size=1):
  #58:JSCall, frequency: 0.499952
  - size:0, name: noop
Inlining noop into 
[optimizing 0x148a79e6d4b9 <JSFunction (sfi = 0x148a785f0621)> - took 0.251, 0.905, 0.018 ms]
[completed optimizing 0x148a79e6d4b9 <JSFunction (sfi = 0x148a785f0621)>]
[marking 0x148a519919e9 <JSFunction onunpipe (sfi = 0x148a785f2a19)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 2/6 (33%)]
[compiling method 0x148a51995dd9 <JSFunction onunpipe (sfi = 0x148a785f2a19)> using TurboFan]
Candidates for inlining (size=1):
  #29:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onunpipe
[optimizing 0x148a51995dd9 <JSFunction onunpipe (sfi = 0x148a785f2a19)> - took 0.305, 0.621, 0.027 ms]
[completed optimizing 0x148a51995dd9 <JSFunction onunpipe (sfi = 0x148a785f2a19)>]
[marking 0x148ad6ebd7a9 <JSFunction prependListener (sfi = 0x148ad6ebc241)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148ad6ebd7a9 <JSFunction prependListener (sfi = 0x148ad6ebc241)> using TurboFan]
Candidates for inlining (size=1):
  #17:JSCall, frequency: 1
  - size:230, name: _addListener
Inlining _addListener into prependListener
Candidates for inlining (size=1):
  #236:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into prependListener
Inlining small function(s) at call site #344:JSCall
Inlining get into prependListener
[optimizing 0x148ad6ebd7a9 <JSFunction prependListener (sfi = 0x148ad6ebc241)> - took 0.538, 1.943, 0.037 ms]
[completed optimizing 0x148ad6ebd7a9 <JSFunction prependListener (sfi = 0x148ad6ebc241)>]
[marking 0x148af3d1cba1 <JSFunction _finish (sfi = 0x148af3d1b301)> for optimized recompilation, reason: small function, ICs with typeinfo: 7/7 (100%), generic ICs: 0/7 (0%)]
[compiling method 0x148af3d1cba1 <JSFunction _finish (sfi = 0x148af3d1b301)> using TurboFan]
Candidates for inlining (size=1):
  #53:JSCall, frequency: 1
  - size:16, name: _finish
Inlining _finish into _finish
Candidates for inlining (size=1):
  #101:JSCall, frequency: 1
  - size:11, name: ok
Inlining ok into _finish
[optimizing 0x148af3d1cba1 <JSFunction _finish (sfi = 0x148af3d1b301)> - took 0.351, 0.553, 0.019 ms]
[completed optimizing 0x148af3d1cba1 <JSFunction _finish (sfi = 0x148af3d1b301)>]
[marking 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/10 (90%), generic ICs: 0/10 (0%)]
[compiling method 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)> using TurboFan]
Candidates for inlining (size=1):
  #65:JSCall, frequency: 1
  - size:167, name: nextTick
Inlining nextTick into endReadable
Candidates for inlining (size=3):
  #347:JSCall, frequency: 1.00028
  - size:42, name: push
  #335:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #320:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining push into endReadable
Candidates for inlining (size=2):
  #335:JSConstruct, frequency: 1.00028
  - size:34, name: TickObject
  #320:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining TickObject into endReadable
Candidates for inlining (size=1):
  #320:JSCall, frequency: 1.00028
  - size:27, name: initTriggerId
Inlining initTriggerId into endReadable
[optimizing 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)> - took 1.118, 3.471, 0.050 ms]
[completed optimizing 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)>]
[marking 0x148a53be17e9 <JSFunction Socket.setKeepAlive (sfi = 0x148a53bcc6d1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/11 (81%), generic ICs: 0/11 (0%)]
[compiling method 0x148a53be17e9 <JSFunction Socket.setKeepAlive (sfi = 0x148a53bcc6d1)> using TurboFan]
[optimizing 0x148a53be17e9 <JSFunction Socket.setKeepAlive (sfi = 0x148a53bcc6d1)> - took 0.125, 0.569, 0.015 ms]
[completed optimizing 0x148a53be17e9 <JSFunction Socket.setKeepAlive (sfi = 0x148a53bcc6d1)>]
[marking 0x148a754f33f9 <JSFunction socketOnWrap (sfi = 0x148af3d1b239)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 8/14 (57%), generic ICs: 0/14 (0%)]
[compiling method 0x148a754f33f9 <JSFunction socketOnWrap (sfi = 0x148af3d1b239)> using TurboFan]
Candidates for inlining (size=1):
  #48:JSCall, frequency: 1
  - size:101, name: Readable.on
Inlining Readable.on into socketOnWrap
Candidates for inlining (size=1):
  #150:JSCall, frequency: 1
  - size:11, name: addListener
Inlining addListener into socketOnWrap
Candidates for inlining (size=1):
  #248:JSCall, frequency: 1
  - size:230, name: _addListener
Inlining _addListener into socketOnWrap
Candidates for inlining (size=1):
  #465:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
Inlining $getMaxListeners into socketOnWrap
Inlining small function(s) at call site #573:JSCall
Inlining get into socketOnWrap
[optimizing 0x148a754f33f9 <JSFunction socketOnWrap (sfi = 0x148af3d1b239)> - took 0.962, 2.444, 0.044 ms]
[completed optimizing 0x148a754f33f9 <JSFunction socketOnWrap (sfi = 0x148af3d1b239)>]
[marking 0x148a38011471 <JSFunction parserOnBody (sfi = 0x148af3d0dc91)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/10 (90%), generic ICs: 0/10 (0%)]
[compiling method 0x148a38011471 <JSFunction parserOnBody (sfi = 0x148af3d0dc91)> using TurboFan]
Candidates for inlining (size=2):
  #66:JSCall, frequency: 1
  - size:70, name: Readable.push
  #56:JSCall, frequency: 1
  - size:59, name: slice
Inlining Readable.push into parserOnBody
Candidates for inlining (size=2):
  #160:JSCall, frequency: 1
  - size:200, name: readableAddChunk
  #56:JSCall, frequency: 1
  - size:59, name: slice
Inlining readableAddChunk into parserOnBody
Candidates for inlining (size=5):
  #397:JSCall, frequency: 1
  - size:23, name: needMoreData
  #56:JSCall, frequency: 1
  - size:59, name: slice
  #208:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #376:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #220:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining needMoreData into parserOnBody
Candidates for inlining (size=4):
  #56:JSCall, frequency: 1
  - size:59, name: slice
  #208:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #376:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #220:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining slice into parserOnBody
Candidates for inlining (size=6):
  #582:JSConstruct, frequency: 1
  - size:13, name: FastBuffer
  #540:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #527:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #208:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #376:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #220:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining FastBuffer into parserOnBody
Candidates for inlining (size=5):
  #540:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #527:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #208:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #376:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #220:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
Inlining adjustOffset into parserOnBody
Candidates for inlining (size=4):
  #527:JSCall, frequency: 1
  - size:47, name: adjustOffset
  #208:JSCall, frequency: 0.538279
  - size:73, name: onEofChunk
  #376:JSCall, frequency: 0.461721
  - size:86, name: addChunk
  #220:JSCall, frequency: 0.461721
  - size:35, name: chunkInvalid
[optimizing 0x148a38011471 <JSFunction parserOnBody (sfi = 0x148af3d0dc91)> - took 1.920, 2.771, 0.038 ms]
[completed optimizing 0x148a38011471 <JSFunction parserOnBody (sfi = 0x148af3d0dc91)>]
[marking 0x148a53b9b259 <JSFunction isEmpty (sfi = 0x148a5a8ae931)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a53b9b259 <JSFunction isEmpty (sfi = 0x148a5a8ae931)> using TurboFan]
[optimizing 0x148a53b9b259 <JSFunction isEmpty (sfi = 0x148a5a8ae931)> - took 0.072, 0.296, 0.019 ms]
[completed optimizing 0x148a53b9b259 <JSFunction isEmpty (sfi = 0x148a5a8ae931)>]
[marking 0x148a336afa91 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a336b3561 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148a336b3561 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.120, 0.697, 0.014 ms]
[completed optimizing 0x148a336b3561 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148acaf22e11 <JSFunction onfinish (sfi = 0x148a785f2ec9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 1/4 (25%)]
[compiling method 0x148acaf27201 <JSFunction onfinish (sfi = 0x148a785f2ec9)> using TurboFan]
Candidates for inlining (size=2):
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into onfinish
Candidates for inlining (size=2):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #318:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining debugs.(anonymous function) into onfinish
Candidates for inlining (size=1):
  #318:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining spliceOne into onfinish
[optimizing 0x148acaf27201 <JSFunction onfinish (sfi = 0x148a785f2ec9)> - took 0.975, 3.500, 0.048 ms]
[completed optimizing 0x148acaf27201 <JSFunction onfinish (sfi = 0x148a785f2ec9)>]
[marking 0x148a53ba8401 <JSFunction spliceOne (sfi = 0x148ad6edc1a1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/9 (55%), generic ICs: 0/9 (0%)]
[compiling method 0x148a53ba8401 <JSFunction spliceOne (sfi = 0x148ad6edc1a1)> using TurboFan]
[optimizing 0x148a53ba8401 <JSFunction spliceOne (sfi = 0x148ad6edc1a1)> - took 0.115, 0.507, 0.013 ms]
[completed optimizing 0x148a53ba8401 <JSFunction spliceOne (sfi = 0x148ad6edc1a1)>]
[marking 0x148a2a109ca9 <JSFunction ondata (sfi = 0x148a785f2c71)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/23 (73%), generic ICs: 1/23 (4%)]
[compiling method 0x148a2a10e099 <JSFunction ondata (sfi = 0x148a785f2c71)> using TurboFan]
Candidates for inlining (size=2):
  #41:JSCall, frequency: 1
  - size:12, name: write
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining write into ondata
Candidates for inlining (size=2):
  #210:JSCall, frequency: 1
  - size:206, name: write_
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining write_ into ondata
Candidates for inlining (size=9):
  #539:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #514:JSCall, frequency: 1
  - size:137, name: _send
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining debugs.(anonymous function) into ondata
Candidates for inlining (size=8):
  #514:JSCall, frequency: 1
  - size:137, name: _send
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining _send into ondata
Candidates for inlining (size=8):
  #709:JSCall, frequency: 1
  - size:158, name: _writeRaw
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining _writeRaw into ondata
Candidates for inlining (size=10):
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
  #864:JSCall, frequency: 0.587753
  - size:33, name: Socket.write
  #974:JSCall, frequency: unknown
  - size:27, name: get
  #962:JSCall, frequency: unknown
  - size:27, name: get
[optimizing 0x148a2a10e099 <JSFunction ondata (sfi = 0x148a785f2c71)> - took 2.887, 5.584, 0.062 ms]
[completed optimizing 0x148a2a10e099 <JSFunction ondata (sfi = 0x148a785f2c71)>]
[marking 0x148a535026d1 <JSFunction isChildProcess (sfi = 0x148af3d25861)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/8 (25%), generic ICs: 0/8 (0%)]
[marking 0x148afdc5c461 <JSFunction get.on (sfi = 0x148af3d73889)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148afdc5fa39 <JSFunction get.on (sfi = 0x148af3d73889)> using TurboFan]
Candidates for inlining (size=1):
  #28:JSCall, frequency: 1
  - size:84, name: pump
Inlining pump into get.on
Inlining small function(s) at call site #101:JSCall
Inlining isFn into get.on
Candidates for inlining (size=1):
  #284:JSCall, frequency: 1
  - size:29, name: 
Inlining  into get.on
Candidates for inlining (size=1):
  #317:JSCall, frequency: 1
  - size:39, name: destroyer
Inlining destroyer into get.on
Candidates for inlining (size=3):
  #385:JSCall, frequency: 1
  - size:227, name: eos
  #365:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #349:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining eos into get.on
Not considering call site #468:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #557:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #593:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #605:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #616:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #639:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #652:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #675:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #693:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=2):
  #365:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #349:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining addListener into get.on
Inlining Readable.on into get.on
Not considering call site #797:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #842:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #873:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=1):
  #349:JSCall, frequency: 1
  - size:84, name: wrapper
[compiling method 0x148a535026d1 <JSFunction isChildProcess (sfi = 0x148af3d25861)> using TurboFan]
[optimizing 0x148a535026d1 <JSFunction isChildProcess (sfi = 0x148af3d25861)> - took 0.059, 0.275, 0.012 ms]
[completed optimizing 0x148a535026d1 <JSFunction isChildProcess (sfi = 0x148af3d25861)>]
[optimizing 0x148afdc5fa39 <JSFunction get.on (sfi = 0x148af3d73889)> - took 1.962, 6.761, 0.069 ms]
[completed optimizing 0x148afdc5fa39 <JSFunction get.on (sfi = 0x148af3d73889)>]
[marking 0x148a380080f1 <JSFunction onSocketNT (sfi = 0x148af3d0a331)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/7 (28%), generic ICs: 0/7 (0%)]
[compiling method 0x148a380080f1 <JSFunction onSocketNT (sfi = 0x148af3d0a331)> using TurboFan]
Candidates for inlining (size=1):
  #29:JSCall, frequency: 1
  - size:169, name: tickOnSocket
Inlining tickOnSocket into onSocketNT
Candidates for inlining (size=7):
  #253:JSCall, frequency: 1
  - size:101, name: Readable.on
  #240:JSCall, frequency: 1
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:101, name: Readable.on
  #214:JSCall, frequency: 1
  - size:101, name: Readable.on
  #202:JSCall, frequency: 1
  - size:216, name: removeListener
  #161:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #73:JSCall, frequency: 1
  - size:21, name: alloc
Inlining Readable.on into onSocketNT
Candidates for inlining (size=7):
  #499:JSCall, frequency: 1
  - size:11, name: addListener
  #240:JSCall, frequency: 1
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:101, name: Readable.on
  #214:JSCall, frequency: 1
  - size:101, name: Readable.on
  #202:JSCall, frequency: 1
  - size:216, name: removeListener
  #161:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #73:JSCall, frequency: 1
  - size:21, name: alloc
Inlining addListener into onSocketNT
Candidates for inlining (size=7):
  #599:JSCall, frequency: 1
  - size:230, name: _addListener
  #240:JSCall, frequency: 1
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:101, name: Readable.on
  #214:JSCall, frequency: 1
  - size:101, name: Readable.on
  #202:JSCall, frequency: 1
  - size:216, name: removeListener
  #161:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #73:JSCall, frequency: 1
  - size:21, name: alloc
Inlining _addListener into onSocketNT
Candidates for inlining (size=7):
  #240:JSCall, frequency: 1
  - size:101, name: Readable.on
  #227:JSCall, frequency: 1
  - size:101, name: Readable.on
  #214:JSCall, frequency: 1
  - size:101, name: Readable.on
  #202:JSCall, frequency: 1
  - size:216, name: removeListener
  #161:JSCall, frequency: 1
  - size:14, name: httpSocketSetup
  #73:JSCall, frequency: 1
  - size:21, name: alloc
  #816:JSCall, frequency: 0.324867
  - size:14, name: $getMaxListeners
[optimizing 0x148a380080f1 <JSFunction onSocketNT (sfi = 0x148af3d0a331)> - took 2.197, 4.020, 0.067 ms]
[completed optimizing 0x148a380080f1 <JSFunction onSocketNT (sfi = 0x148af3d0a331)>]
[marking 0x148a754f2fd9 <JSFunction alloc (sfi = 0x148af3d0f0e9)> for optimized recompilation, reason: small function, ICs with typeinfo: 8/8 (100%), generic ICs: 0/8 (0%)]
[compiling method 0x148a754f2fd9 <JSFunction alloc (sfi = 0x148af3d0f0e9)> using TurboFan]
[optimizing 0x148a754f2fd9 <JSFunction alloc (sfi = 0x148af3d0f0e9)> - took 0.137, 0.654, 0.013 ms]
[completed optimizing 0x148a754f2fd9 <JSFunction alloc (sfi = 0x148af3d0f0e9)>]
[marking 0x148ada059951 <JSFunction unpipe (sfi = 0x148a785f2f91)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148ada05dd41 <JSFunction unpipe (sfi = 0x148a785f2f91)> using TurboFan]
Candidates for inlining (size=2):
  #39:JSCall, frequency: 1
  - size:214, name: Readable.unpipe
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Readable.unpipe into unpipe
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into unpipe
[optimizing 0x148ada05dd41 <JSFunction unpipe (sfi = 0x148a785f2f91)> - took 0.452, 0.998, 0.061 ms]
[completed optimizing 0x148ada05dd41 <JSFunction unpipe (sfi = 0x148a785f2f91)>]
[marking 0x148a625789a9 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148a6257cd99 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148a6257cd99 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 1.993, 6.054, 0.070 ms]
[completed optimizing 0x148a6257cd99 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[marking 0x148a475ceb11 <JSFunction ClientRequest._deferToConnect (sfi = 0x148af3d743f1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a475d04a1 <JSFunction ClientRequest._deferToConnect (sfi = 0x148af3d743f1)> using TurboFan]
Candidates for inlining (size=1):
  #20:JSCall, frequency: 1
  - size:50, name: _flush
Inlining _flush into ClientRequest._deferToConnect
Candidates for inlining (size=2):
  #64:JSCall, frequency: 1
  - size:128, name: _flushOutput
  #83:JSCall, frequency: 0.61049
  - size:21, name: _finish
Inlining _flushOutput into ClientRequest._deferToConnect
Candidates for inlining (size=4):
  #220:JSCall, frequency: 1.14437
  - size:33, name: Socket.write
  #235:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #163:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #83:JSCall, frequency: 0.61049
  - size:21, name: _finish
Inlining Socket.write into ClientRequest._deferToConnect
Candidates for inlining (size=4):
  #437:JSCall, frequency: 1.14437
  - size:130, name: Writable.write
  #235:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #163:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #83:JSCall, frequency: 0.61049
  - size:21, name: _finish
Inlining Writable.write into ClientRequest._deferToConnect
Inlining small function(s) at call site #500:JSCall
Inlining isUint8Array into ClientRequest._deferToConnect
Not considering call site #693:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=5):
  #650:JSCall, frequency: 1.14437
  - size:158, name: writeOrBuffer
  #235:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #163:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #622:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #83:JSCall, frequency: 0.61049
  - size:21, name: _finish
Inlining writeOrBuffer into ClientRequest._deferToConnect
Not considering call site #742:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=4):
  #235:JSCall, frequency: 0.711519
  - size:48, name: Writable.uncork
  #163:JSCall, frequency: 0.711519
  - size:14, name: Writable.cork
  #622:JSCall, frequency: 0.684671
  - size:71, name: validChunk
  #83:JSCall, frequency: 0.61049
  - size:21, name: _finish
[optimizing 0x148abf77b671 <JSFunction ClientRequest._deferToConnect (sfi = 0x148af3d743f1)> - took 1.850, 5.202, 0.075 ms]
[completed optimizing 0x148abf77b671 <JSFunction ClientRequest._deferToConnect (sfi = 0x148af3d743f1)>]
[marking 0x148ad6e8abb1 <JSFunction Uint8Array (sfi = 0x148a89a914d9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 2/8 (25%), generic ICs: 2/8 (25%)]
[compiling method 0x148ad6e8abb1 <JSFunction Uint8Array (sfi = 0x148a89a914d9)> using TurboFan]
[optimizing 0x148ad6e8abb1 <JSFunction Uint8Array (sfi = 0x148a89a914d9)> - took 0.150, 0.609, 0.012 ms]
[completed optimizing 0x148ad6e8abb1 <JSFunction Uint8Array (sfi = 0x148a89a914d9)>]
[marking 0x148a754f3561 <JSFunction validateHeader (sfi = 0x148af3d13469)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 6/17 (35%), generic ICs: 0/17 (0%)]
[compiling method 0x148a754f3561 <JSFunction validateHeader (sfi = 0x148af3d13469)> using TurboFan]
Candidates for inlining (size=2):
  #131:JSCall, frequency: 1
  - size:113, name: checkInvalidHeaderChar
  #41:JSCall, frequency: 1
  - size:98, name: checkIsHttpToken
Inlining checkInvalidHeaderChar into validateHeader
Candidates for inlining (size=1):
  #41:JSCall, frequency: 1
  - size:98, name: checkIsHttpToken
Inlining checkIsHttpToken into validateHeader
[optimizing 0x148a754f3561 <JSFunction validateHeader (sfi = 0x148af3d13469)> - took 0.730, 3.041, 0.077 ms]
[completed optimizing 0x148a754f3561 <JSFunction validateHeader (sfi = 0x148af3d13469)>]
[marking 0x148a475d8ee9 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a475d9b21 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148a475d9b21 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.128, 0.701, 0.012 ms]
[completed optimizing 0x148a475d9b21 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148af3d16441 <JSFunction getHeader (sfi = 0x148af3d14021)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/9 (77%), generic ICs: 3/9 (33%)]
[compiling method 0x148af3d16441 <JSFunction getHeader (sfi = 0x148af3d14021)> using TurboFan]
[optimizing 0x148af3d16441 <JSFunction getHeader (sfi = 0x148af3d14021)> - took 0.137, 0.765, 0.013 ms]
[completed optimizing 0x148af3d16441 <JSFunction getHeader (sfi = 0x148af3d14021)>]
[marking 0x148a8b4cc9b1 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148a8b4d0da1 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148a8b4d0da1 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 2.223, 7.132, 0.062 ms]
[completed optimizing 0x148a8b4d0da1 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[marking 0x148a41d7c589 <JSFunction (sfi = 0x148a785f09c9)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/2 (50%), generic ICs: 1/2 (50%)]
[compiling method 0x148a41d7cea9 <JSFunction (sfi = 0x148a785f09c9)> using TurboFan]
[optimizing 0x148a41d7cea9 <JSFunction (sfi = 0x148a785f09c9)> - took 0.073, 0.362, 0.019 ms]
[completed optimizing 0x148a41d7cea9 <JSFunction (sfi = 0x148a785f09c9)>]
[marking 0x148a8fc0f1f1 <JSFunction onend (sfi = 0x148a785f2ae1)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148a8fc135e1 <JSFunction onend (sfi = 0x148a785f2ae1)> using TurboFan]
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onend
[optimizing 0x148a8fc135e1 <JSFunction onend (sfi = 0x148a785f2ae1)> - took 0.205, 0.440, 0.012 ms]
[completed optimizing 0x148a8fc135e1 <JSFunction onend (sfi = 0x148a785f2ae1)>]
[marking 0x148a9f432d11 <JSFunction onfinish (sfi = 0x148a785f1561)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[marking 0x148a9f4367e1 <JSFunction onend (sfi = 0x148a785f1629)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a9f4370b9 <JSFunction onfinish (sfi = 0x148a785f1561)> using TurboFan]
[compiling method 0x148a9f43ab99 <JSFunction onend (sfi = 0x148a785f1629)> using TurboFan]
[optimizing 0x148a9f4370b9 <JSFunction onfinish (sfi = 0x148a785f1561)> - took 0.083, 0.339, 0.013 ms]
[completed optimizing 0x148a9f4370b9 <JSFunction onfinish (sfi = 0x148a785f1561)>]
[optimizing 0x148a9f43ab99 <JSFunction onend (sfi = 0x148a785f1629)> - took 0.052, 0.348, 0.007 ms]
[completed optimizing 0x148a9f43ab99 <JSFunction onend (sfi = 0x148a785f1629)>]
[marking 0x148a754f3249 <JSFunction resetSocketTimeout (sfi = 0x148af3d1af19)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x148a754f3249 <JSFunction resetSocketTimeout (sfi = 0x148af3d1af19)> using TurboFan]
[optimizing 0x148a754f3249 <JSFunction resetSocketTimeout (sfi = 0x148af3d1af19)> - took 0.108, 0.676, 0.015 ms]
[completed optimizing 0x148a754f3249 <JSFunction resetSocketTimeout (sfi = 0x148af3d1af19)>]
[marking 0x148a53503111 <JSFunction pipe (sfi = 0x148af3d224a9)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a53503111 <JSFunction pipe (sfi = 0x148af3d224a9)> using TurboFan]
[optimizing 0x148a53503111 <JSFunction pipe (sfi = 0x148af3d224a9)> - took 0.082, 0.327, 0.010 ms]
[completed optimizing 0x148a53503111 <JSFunction pipe (sfi = 0x148af3d224a9)>]
[marking 0x148aa20cae61 <JSFunction onfinish (sfi = 0x148a785f2ec9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 1/4 (25%)]
[compiling method 0x148aa20cf251 <JSFunction onfinish (sfi = 0x148a785f2ec9)> using TurboFan]
Candidates for inlining (size=2):
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into onfinish
Candidates for inlining (size=2):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #318:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining debugs.(anonymous function) into onfinish
Candidates for inlining (size=1):
  #318:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining spliceOne into onfinish
[marking 0x148af2c3d329 <JSFunction (sfi = 0x148a785f0621)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/5 (60%), generic ICs: 0/5 (0%)]
[compiling method 0x148af2c3dc49 <JSFunction (sfi = 0x148a785f0621)> using TurboFan]
Candidates for inlining (size=1):
  #58:JSCall, frequency: 0.499976
  - size:0, name: noop
Inlining noop into 
[optimizing 0x148aa20cf251 <JSFunction onfinish (sfi = 0x148a785f2ec9)> - took 0.963, 3.553, 0.027 ms]
[completed optimizing 0x148aa20cf251 <JSFunction onfinish (sfi = 0x148a785f2ec9)>]
[optimizing 0x148af2c3dc49 <JSFunction (sfi = 0x148a785f0621)> - took 0.223, 0.750, 0.009 ms]
[completed optimizing 0x148af2c3dc49 <JSFunction (sfi = 0x148a785f0621)>]
[marking 0x148aebd17c79 <JSFunction onunpipe (sfi = 0x148a785f2a19)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 2/6 (33%)]
[compiling method 0x148aebd1c069 <JSFunction onunpipe (sfi = 0x148a785f2a19)> using TurboFan]
Candidates for inlining (size=1):
  #29:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onunpipe
[optimizing 0x148aebd1c069 <JSFunction onunpipe (sfi = 0x148a785f2a19)> - took 0.215, 0.634, 0.014 ms]
[completed optimizing 0x148aebd1c069 <JSFunction onunpipe (sfi = 0x148a785f2a19)>]
[marking 0x148a38011e39 <JSFunction connectionCorkNT (sfi = 0x148af3d136c1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a38011e39 <JSFunction connectionCorkNT (sfi = 0x148af3d136c1)> using TurboFan]
Candidates for inlining (size=1):
  #19:JSCall, frequency: 1
  - size:48, name: Writable.uncork
Inlining Writable.uncork into connectionCorkNT
[optimizing 0x148a38011e39 <JSFunction connectionCorkNT (sfi = 0x148af3d136c1)> - took 0.251, 0.797, 0.016 ms]
[completed optimizing 0x148a38011e39 <JSFunction connectionCorkNT (sfi = 0x148af3d136c1)>]
[marking 0x148a38010fb1 <JSFunction nop (sfi = 0x148a5a8f3cb9)> for optimized recompilation, reason: small function, ICs with typeinfo: 0/0 (100%), generic ICs: 0/0 (0%)]
[compiling method 0x148a38010fb1 <JSFunction nop (sfi = 0x148a5a8f3cb9)> using TurboFan]
[marking 0x148a535030c9 <JSFunction call (sfi = 0x148af3d223e1)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 1/1 (100%)]
[compiling method 0x148a535030c9 <JSFunction call (sfi = 0x148af3d223e1)> using TurboFan]
[optimizing 0x148a38010fb1 <JSFunction nop (sfi = 0x148a5a8f3cb9)> - took 0.047, 0.152, 0.015 ms]
[completed optimizing 0x148a38010fb1 <JSFunction nop (sfi = 0x148a5a8f3cb9)>]
[optimizing 0x148a535030c9 <JSFunction call (sfi = 0x148af3d223e1)> - took 0.040, 0.138, 0.003 ms]
[completed optimizing 0x148a535030c9 <JSFunction call (sfi = 0x148af3d223e1)>]
[marking 0x148add8564c9 <JSFunction unpipe (sfi = 0x148a785f2f91)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148add85a8b9 <JSFunction unpipe (sfi = 0x148a785f2f91)> using TurboFan]
Candidates for inlining (size=2):
  #39:JSCall, frequency: 1
  - size:214, name: Readable.unpipe
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Readable.unpipe into unpipe
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into unpipe
[optimizing 0x148add85a8b9 <JSFunction unpipe (sfi = 0x148a785f2f91)> - took 0.446, 0.871, 0.068 ms]
[completed optimizing 0x148add85a8b9 <JSFunction unpipe (sfi = 0x148a785f2f91)>]
[marking 0x148af2c11e29 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148af2c16219 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148af2c16219 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 1.941, 6.601, 0.049 ms]
[completed optimizing 0x148af2c16219 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[marking 0x148a95e68829 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a95e69149 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148a95e69149 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.124, 0.716, 0.032 ms]
[completed optimizing 0x148a95e69149 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148ac98737c9 <JSFunction onSocket (sfi = 0x148af3d7d911)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/6 (50%), generic ICs: 1/6 (16%)]
[compiling method 0x148ac9875159 <JSFunction onSocket (sfi = 0x148af3d7d911)> using TurboFan]
[optimizing 0x148aa8882471 <JSFunction onSocket (sfi = 0x148af3d7d911)> - took 0.099, 0.500, 0.014 ms]
[completed optimizing 0x148aa8882471 <JSFunction onSocket (sfi = 0x148af3d7d911)>]
[marking 0x148ac302a361 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148ac302e751 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148ac302e751 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 1.882, 7.049, 0.073 ms]
[completed optimizing 0x148ac302e751 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[marking 0x148a53ba4b79 <JSFunction insert (sfi = 0x148a5a8b8849)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/31 (87%), generic ICs: 7/31 (22%)]
[compiling method 0x148a53ba4b79 <JSFunction insert (sfi = 0x148a5a8b8849)> using TurboFan]
Inlining small function(s) at call site #338:JSCall
Inlining isEmpty into insert
Candidates for inlining (size=2):
  #346:JSCall, frequency: 0.488932
  - size:11, name: ok
  #310:JSCall, frequency: 0.48877
  - size:41, name: append
Inlining ok into insert
Candidates for inlining (size=1):
  #310:JSCall, frequency: 0.48877
  - size:41, name: append
Inlining append into insert
Candidates for inlining (size=1):
  #535:JSCall, frequency: 0.488446
  - size:42, name: remove
Inlining remove into insert
[optimizing 0x148a53ba4b79 <JSFunction insert (sfi = 0x148a5a8b8849)> - took 0.888, 3.332, 0.035 ms]
[completed optimizing 0x148a53ba4b79 <JSFunction insert (sfi = 0x148a5a8b8849)>]
[marking 0x148a24691431 <JSFunction onunpipe (sfi = 0x148a785f2a19)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 2/6 (33%)]
[compiling method 0x148a24695821 <JSFunction onunpipe (sfi = 0x148a785f2a19)> using TurboFan]
Candidates for inlining (size=1):
  #29:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onunpipe
[optimizing 0x148a24695821 <JSFunction onunpipe (sfi = 0x148a785f2a19)> - took 0.216, 0.536, 0.013 ms]
[completed optimizing 0x148a24695821 <JSFunction onunpipe (sfi = 0x148a785f2a19)>]
[marking 0x148a9481b541 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a9481c179 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148a9481c179 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.128, 0.656, 0.027 ms]
[completed optimizing 0x148a9481c179 <JSFunction f (sfi = 0x148af3d24b91)>]
[marking 0x148ac791eec9 <JSFunction get.on (sfi = 0x148af3d73889)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x148ac791ef59 <JSFunction get.on (sfi = 0x148af3d73889)> using TurboFan]
Candidates for inlining (size=1):
  #28:JSCall, frequency: 1
  - size:84, name: pump
Inlining pump into get.on
Inlining small function(s) at call site #101:JSCall
Inlining isFn into get.on
Candidates for inlining (size=1):
  #284:JSCall, frequency: 1
  - size:29, name: 
Inlining  into get.on
Candidates for inlining (size=1):
  #317:JSCall, frequency: 1
  - size:39, name: destroyer
Inlining destroyer into get.on
Candidates for inlining (size=3):
  #385:JSCall, frequency: 1
  - size:227, name: eos
  #365:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #349:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining eos into get.on
Not considering call site #468:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #557:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #593:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #605:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #616:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #639:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #652:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #675:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #693:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=2):
  #365:JSCall, frequency: 1
  - size:11, name: addListener
  - size:101, name: Readable.on
  #349:JSCall, frequency: 1
  - size:84, name: wrapper
Inlining addListener into get.on
Inlining Readable.on into get.on
Not considering call site #797:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #842:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Not considering call site #873:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=1):
  #349:JSCall, frequency: 1
  - size:84, name: wrapper
[optimizing 0x148ac791ef59 <JSFunction get.on (sfi = 0x148af3d73889)> - took 1.490, 6.303, 0.098 ms]
[completed optimizing 0x148ac791ef59 <JSFunction get.on (sfi = 0x148af3d73889)>]
[marking 0x148a487d0809 <JSFunction unpipe (sfi = 0x148a785f2f91)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148a487d4bf9 <JSFunction unpipe (sfi = 0x148a785f2f91)> using TurboFan]
Candidates for inlining (size=2):
  #39:JSCall, frequency: 1
  - size:214, name: Readable.unpipe
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining Readable.unpipe into unpipe
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into unpipe
[optimizing 0x148a487d4bf9 <JSFunction unpipe (sfi = 0x148a785f2f91)> - took 0.494, 0.923, 0.023 ms]
[completed optimizing 0x148a487d4bf9 <JSFunction unpipe (sfi = 0x148a785f2f91)>]
[marking 0x148a625114b9 <JSFunction cleanup (sfi = 0x148a785f2ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/22 (90%), generic ICs: 1/22 (4%)]
[compiling method 0x148a625158a9 <JSFunction cleanup (sfi = 0x148a785f2ba9)> using TurboFan]
Candidates for inlining (size=9):
  #130:JSCall, frequency: 1
  - size:216, name: removeListener
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #117:JSCall, frequency: 1
  - size:216, name: removeListener
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
Inlining removeListener into cleanup
Candidates for inlining (size=9):
  #105:JSCall, frequency: 1
  - size:216, name: removeListener
  #92:JSCall, frequency: 1
  - size:216, name: removeListener
  #79:JSCall, frequency: 1
  - size:216, name: removeListener
  #66:JSCall, frequency: 1
  - size:216, name: removeListener
  #53:JSCall, frequency: 1
  - size:216, name: removeListener
  #40:JSCall, frequency: 1
  - size:216, name: removeListener
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #883:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
  #458:JSCall, frequency: 0.207951
  - size:54, name: spliceOne
[optimizing 0x148a625158a9 <JSFunction cleanup (sfi = 0x148a785f2ba9)> - took 2.002, 6.724, 0.059 ms]
[completed optimizing 0x148a625158a9 <JSFunction cleanup (sfi = 0x148a785f2ba9)>]
[marking 0x148a79b1d549 <JSFunction (sfi = 0x148a785f09c9)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/2 (50%), generic ICs: 1/2 (50%)]
[compiling method 0x148a79b21019 <JSFunction (sfi = 0x148a785f09c9)> using TurboFan]
[optimizing 0x148a79b21019 <JSFunction (sfi = 0x148a785f09c9)> - took 0.071, 0.379, 0.017 ms]
[completed optimizing 0x148a79b21019 <JSFunction (sfi = 0x148a785f09c9)>]
[marking 0x148a7ce053e1 <JSFunction onend (sfi = 0x148a785f2ae1)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x148a7ce097d1 <JSFunction onend (sfi = 0x148a785f2ae1)> using TurboFan]
Candidates for inlining (size=1):
  #27:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into onend
[optimizing 0x148a7ce097d1 <JSFunction onend (sfi = 0x148a785f2ae1)> - took 0.195, 0.383, 0.021 ms]
[completed optimizing 0x148a7ce097d1 <JSFunction onend (sfi = 0x148a785f2ae1)>]
[marking 0x148a9f433079 <JSFunction ondata (sfi = 0x148a785f2c71)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/23 (73%), generic ICs: 1/23 (4%)]
[compiling method 0x148a9f437469 <JSFunction ondata (sfi = 0x148a785f2c71)> using TurboFan]
Candidates for inlining (size=2):
  #41:JSCall, frequency: 1
  - size:12, name: write
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining write into ondata
Candidates for inlining (size=2):
  #210:JSCall, frequency: 1
  - size:206, name: write_
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
Inlining write_ into ondata
Candidates for inlining (size=9):
  #539:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #514:JSCall, frequency: 1
  - size:137, name: _send
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining debugs.(anonymous function) into ondata
Candidates for inlining (size=8):
  #514:JSCall, frequency: 1
  - size:137, name: _send
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining _send into ondata
Candidates for inlining (size=8):
  #709:JSCall, frequency: 1
  - size:158, name: _writeRaw
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
Inlining _writeRaw into ondata
Candidates for inlining (size=10):
  #496:JSCall, frequency: 1
  - size:137, name: _send
  #487:JSCall, frequency: 1
  - size:137, name: _send
  #468:JSCall, frequency: 1
  - size:137, name: _send
  #267:JSCall, frequency: 1
  - size:12, name: _implicitHeader
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #411:JSCall, frequency: 0.732697
  - size:167, name: nextTick
  #391:JSCall, frequency: 0.732697
  - size:14, name: Writable.cork
  #864:JSCall, frequency: 0.587753
  - size:33, name: Socket.write
  #974:JSCall, frequency: unknown
  - size:27, name: get
  #962:JSCall, frequency: unknown
  - size:27, name: get
[optimizing 0x148a9f437469 <JSFunction ondata (sfi = 0x148a785f2c71)> - took 2.633, 4.727, 0.114 ms]
[completed optimizing 0x148a9f437469 <JSFunction ondata (sfi = 0x148a785f2c71)>]
[marking 0x148a3a89a9f1 <JSFunction onfinish (sfi = 0x148a785f1561)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[marking 0x148a3a89e509 <JSFunction onend (sfi = 0x148a785f1629)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x148a3a89ede1 <JSFunction onfinish (sfi = 0x148a785f1561)> using TurboFan]
[compiling method 0x148a3a8a2909 <JSFunction onend (sfi = 0x148a785f1629)> using TurboFan]
[optimizing 0x148a3a89ede1 <JSFunction onfinish (sfi = 0x148a785f1561)> - took 0.099, 0.357, 0.011 ms]
[completed optimizing 0x148a3a89ede1 <JSFunction onfinish (sfi = 0x148a785f1561)>]
[optimizing 0x148a3a8a2909 <JSFunction onend (sfi = 0x148a785f1629)> - took 0.056, 0.316, 0.004 ms]
[completed optimizing 0x148a3a8a2909 <JSFunction onend (sfi = 0x148a785f1629)>]
[marking 0x148a2b54fef9 <JSFunction getStderr (sfi = 0x148a5a8a6391)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/8 (37%), generic ICs: 0/8 (0%)]
[compiling method 0x148a2b54fef9 <JSFunction getStderr (sfi = 0x148a5a8a6391)> using TurboFan]
[optimizing 0x148a2b54fef9 <JSFunction getStderr (sfi = 0x148a5a8a6391)> - took 0.102, 0.506, 0.011 ms]
[completed optimizing 0x148a2b54fef9 <JSFunction getStderr (sfi = 0x148a5a8a6391)>]
[marking 0x148a79b77721 <JSFunction (sfi = 0x148a785f0621)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/5 (60%), generic ICs: 0/5 (0%)]
[compiling method 0x148a79b78041 <JSFunction (sfi = 0x148a785f0621)> using TurboFan]
Candidates for inlining (size=1):
  #58:JSCall, frequency: 0.499984
  - size:0, name: noop
Inlining noop into 
[optimizing 0x148a79b78041 <JSFunction (sfi = 0x148a785f0621)> - took 0.258, 0.854, 0.013 ms]
[completed optimizing 0x148a79b78041 <JSFunction (sfi = 0x148a785f0621)>]
[marking 0x148ae22096e9 <JSFunction f (sfi = 0x148af3d24b91)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148ae220a009 <JSFunction f (sfi = 0x148af3d24b91)> using TurboFan]
[optimizing 0x148ae220a009 <JSFunction f (sfi = 0x148af3d24b91)> - took 0.123, 0.753, 0.014 ms]
[completed optimizing 0x148ae220a009 <JSFunction f (sfi = 0x148af3d24b91)>]
[deoptimizing (DEOPT eager): begin 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)> (opt #104) @1, FP to SP delta: 64, caller sp: 0x7fff5fbf6198]
            ;;; deoptimize at <net.js:578:21>, wrong map
  reading input frame onread => bytecode_offset=0, args=3, height=10; inputs:
      0: 0x148a754fe621 ; [fp - 16] 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)>
      1: 0x148a380122f1 ; rbx 0x148a380122f1 <TCP map = 0x148a9c24c869>
      2: 0xfffff00100000000 ; [fp + 24] -4095
      3: 0x148a89a82311 ; [fp + 16] 0x148a89a82311 <undefined>
      4: 0x148a754be1c1 ; [fp - 8] 0x148a754be1c1 <FixedArray[64]>
      5: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame onread => bytecode_offset=0, height=80
    0x7fff5fbf6190: [top + 152] <- 0x148a380122f1 ;  0x148a380122f1 <TCP map = 0x148a9c24c869>  (input #1)
    0x7fff5fbf6188: [top + 144] <- 0xfffff00100000000 ;  -4095  (input #2)
    0x7fff5fbf6180: [top + 136] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #3)
    -------------------------
    0x7fff5fbf6178: [top + 128] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf6170: [top + 120] <- 0x7fff5fbf61b0 ;  caller's fp
    0x7fff5fbf6168: [top + 112] <- 0x148a754be1c1 ;  context    0x148a754be1c1 <FixedArray[64]>  (input #4)
    0x7fff5fbf6160: [top + 104] <- 0x148a754fe621 ;  function    0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)>  (input #0)
    0x7fff5fbf6158: [top + 96] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6150: [top + 88] <- 0x148a785edfe1 ;  bytecode array 0x148a785edfe1 <BytecodeArray[307]>  (input #0)
    0x7fff5fbf6148: [top + 80] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf6140: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf6138: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf6130: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf6128: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf6120: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf6118: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf6110: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6108: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf6100: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf60f8: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
[deoptimizing (eager): end 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)> @1 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6198, state=TOS_REGISTER, took 1.737 ms]
[removing optimized code for: 0x148a754fe621 <JSFunction onread (sfi = 0x148a53bcb349)>]
[deoptimizing (DEOPT eager): begin 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)> (opt #97) @1, FP to SP delta: 96, caller sp: 0x7fff5fbf60b0]
            ;;; deoptimize at <_stream_readable.js:192:20>, wrong map
  reading input frame Readable.push => bytecode_offset=0, args=3, height=9; inputs:
      0: 0x148a5a8f2c11 ; [fp - 16] 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)>
      1: 0x148a3803c679 ; rbx 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      2: 0x148a89a82201 ; [fp + 24] 0x148a89a82201 <null>
      3: 0x148a89a82311 ; [fp + 16] 0x148a89a82311 <undefined>
      4: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      5: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a82311 ; (literal 7) 0x148a89a82311 <undefined>
      7: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame Readable.push => bytecode_offset=0, height=72
    0x7fff5fbf60a8: [top + 144] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #1)
    0x7fff5fbf60a0: [top + 136] <- 0x148a89a82201 ;  0x148a89a82201 <null>  (input #2)
    0x7fff5fbf6098: [top + 128] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #3)
    -------------------------
    0x7fff5fbf6090: [top + 120] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf6088: [top + 112] <- 0x7fff5fbf60c8 ;  caller's fp
    0x7fff5fbf6080: [top + 104] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #4)
    0x7fff5fbf6078: [top + 96] <- 0x148a5a8f2c11 ;  function    0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)>  (input #0)
    0x7fff5fbf6070: [top + 88] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6068: [top + 80] <- 0x148a785bb159 ;  bytecode array 0x148a785bb159 <BytecodeArray[95]>  (input #0)
    0x7fff5fbf6060: [top + 72] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf6058: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf6050: [top + 56] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #6)
    0x7fff5fbf6048: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf6040: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf6038: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf6030: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf6028: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6020: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf6018: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
[deoptimizing (eager): end 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)> @1 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf60b0, state=TOS_REGISTER, took 1.580 ms]
[removing optimized code for: 0x148a5a8f2c11 <JSFunction Readable.push (sfi = 0x148a5a8ef599)>]
[deoptimizing (DEOPT eager): begin 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)> (opt #81) @1, FP to SP delta: 88, caller sp: 0x7fff5fbf5fd8]
            ;;; deoptimize at <_stream_readable.js:217:22>, wrong map
  reading input frame readableAddChunk => bytecode_offset=0, args=6, height=8; inputs:
      0: 0x148a785b82d9 ; [fp - 16] 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)>
      1: 0x148a89a82311 ; [fp + 56] 0x148a89a82311 <undefined>
      2: 0x148a3803c679 ; rbx 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      3: 0x148a89a82201 ; [fp + 40] 0x148a89a82201 <null>
      4: 0x148a89a82311 ; [fp + 32] 0x148a89a82311 <undefined>
      5: 0x148a89a82421 ; [fp + 24] 0x148a89a82421 <false>
      6: 0x148a89a82311 ; [fp + 16] 0x148a89a82311 <undefined>
      7: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      8: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a82311 ; (literal 9) 0x148a89a82311 <undefined>
     10: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 8) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame readableAddChunk => bytecode_offset=0, height=64
    0x7fff5fbf5fd0: [top + 160] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5fc8: [top + 152] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #2)
    0x7fff5fbf5fc0: [top + 144] <- 0x148a89a82201 ;  0x148a89a82201 <null>  (input #3)
    0x7fff5fbf5fb8: [top + 136] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #4)
    0x7fff5fbf5fb0: [top + 128] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #5)
    0x7fff5fbf5fa8: [top + 120] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #6)
    -------------------------
    0x7fff5fbf5fa0: [top + 112] <- 0x1ddcf16748a5 ;  caller's pc
    0x7fff5fbf5f98: [top + 104] <- 0x7fff5fbf6010 ;  caller's fp
    0x7fff5fbf5f90: [top + 96] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #7)
    0x7fff5fbf5f88: [top + 88] <- 0x148a785b82d9 ;  function    0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)>  (input #0)
    0x7fff5fbf5f80: [top + 80] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5f78: [top + 72] <- 0x148a785bb4c1 ;  bytecode array 0x148a785bb4c1 <BytecodeArray[388]>  (input #0)
    0x7fff5fbf5f70: [top + 64] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf5f68: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5f60: [top + 48] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #9)
    0x7fff5fbf5f58: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5f50: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5f48: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5f40: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5f38: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5f30: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
[deoptimizing (eager): end 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)> @1 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5fd8, state=TOS_REGISTER, took 1.417 ms]
[removing optimized code for: 0x148a785b82d9 <JSFunction readableAddChunk (sfi = 0x148a5a8ee211)>]
[deoptimizing (DEOPT eager): begin 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)> (opt #100) @27, FP to SP delta: 80, caller sp: 0x7fff5fbf5ea0]
            ;;; deoptimize at <_stream_readable.js:499:22>, wrong map
  reading input frame emitReadable => bytecode_offset=0, args=2, height=5; inputs:
      0: 0x148a785b84d1 ; [fp - 16] 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)>
      1: 0x148a89a82311 ; [fp + 24] 0x148a89a82311 <undefined>
      2: 0x148a3803c679 ; [fp + 16] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      3: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      4: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame emitReadable => bytecode_offset=0, height=40
    0x7fff5fbf5e98: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5e90: [top + 96] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #2)
    -------------------------
    0x7fff5fbf5e88: [top + 88] <- 0x1ddcf1674ed2 ;  caller's pc
    0x7fff5fbf5e80: [top + 80] <- 0x7fff5fbf5ea8 ;  caller's fp
    0x7fff5fbf5e78: [top + 72] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #3)
    0x7fff5fbf5e70: [top + 64] <- 0x148a785b84d1 ;  function    0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)>  (input #0)
    0x7fff5fbf5e68: [top + 56] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5e60: [top + 48] <- 0x148a785bbe21 ;  bytecode array 0x148a785bbe21 <BytecodeArray[83]>  (input #0)
    0x7fff5fbf5e58: [top + 40] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf5e50: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5e48: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5e40: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5e38: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5e30: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
[deoptimizing (eager): end 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)> @27 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5ea0, state=TOS_REGISTER, took 0.946 ms]
[removing optimized code for: 0x148a785b84d1 <JSFunction emitReadable (sfi = 0x148a5a8ee789)>]
[deoptimizing (DEOPT eager): begin 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)> (opt #70) @15, FP to SP delta: 56, caller sp: 0x7fff5fbf5e20]
            ;;; deoptimize at <_stream_readable.js:513:10>, wrong map
  reading input frame emitReadable_ => bytecode_offset=0, args=2, height=4; inputs:
      0: 0x148a785b8519 ; [fp - 16] 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)>
      1: 0x148a89a82311 ; [fp + 24] 0x148a89a82311 <undefined>
      2: 0x148a3803c679 ; [fp + 16] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      3: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      4: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame emitReadable_ => bytecode_offset=0, height=32
    0x7fff5fbf5e18: [top + 96] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5e10: [top + 88] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #2)
    -------------------------
    0x7fff5fbf5e08: [top + 80] <- 0x1ddcf1674ed2 ;  caller's pc
    0x7fff5fbf5e00: [top + 72] <- 0x7fff5fbf5e28 ;  caller's fp
    0x7fff5fbf5df8: [top + 64] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #3)
    0x7fff5fbf5df0: [top + 56] <- 0x148a785b8519 ;  function    0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)>  (input #0)
    0x7fff5fbf5de8: [top + 48] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5de0: [top + 40] <- 0x148a785c3af1 ;  bytecode array 0x148a785c3af1 <BytecodeArray[40]>  (input #0)
    0x7fff5fbf5dd8: [top + 32] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf5dd0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5dc8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5dc0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5db8: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
[deoptimizing (eager): end 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)> @15 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5e20, state=TOS_REGISTER, took 0.789 ms]
[removing optimized code for: 0x148a785b8519 <JSFunction emitReadable_ (sfi = 0x148a5a8ee851)>]
[deoptimizing (DEOPT eager): begin 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)> (opt #29) @14, FP to SP delta: 56, caller sp: 0x7fff5fbf5da8]
            ;;; deoptimize at <_stream_readable.js:843:14>, wrong map
  reading input frame flow => bytecode_offset=17, args=2, height=5; inputs:
      0: 0x148a785b8711 ; [fp - 16] 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)>
      1: 0x148a89a82311 ; [fp + 24] 0x148a89a82311 <undefined>
      2: 0x148a3803c679 ; [fp + 16] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      3: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      4: 0x148a3803d769 ; [fp - 24] 0x148a3803d769 <ReadableState map = 0x148a9c23f871>
      5: 0x148a5a8f10d9 ; (literal 4) 0x148a5a8f10d9 <JSFunction debugs.(anonymous function) (sfi = 0x148a5a8c04e1)>
      6: 0x148a5a8ed5a9 ; (literal 5) 0x148a5a8ed5a9 <String[4]: flow>
      7: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame flow => bytecode_offset=17, height=40
    0x7fff5fbf5da0: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5d98: [top + 96] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #2)
    -------------------------
    0x7fff5fbf5d90: [top + 88] <- 0x1ddcf1674ed2 ;  caller's pc
    0x7fff5fbf5d88: [top + 80] <- 0x7fff5fbf5db0 ;  caller's fp
    0x7fff5fbf5d80: [top + 72] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #3)
    0x7fff5fbf5d78: [top + 64] <- 0x148a785b8711 ;  function    0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)>  (input #0)
    0x7fff5fbf5d70: [top + 56] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5d68: [top + 48] <- 0x148af3d6c991 ;  bytecode array 0x148af3d6c991 <BytecodeArray[52]>  (input #0)
    0x7fff5fbf5d60: [top + 40] <- 0x4600000000 ;  bytecode offset @ 17
    -------------------------
    0x7fff5fbf5d58: [top + 32] <- 0x148a3803d769 ;  0x148a3803d769 <ReadableState map = 0x148a9c23f871>  (input #4)
    0x7fff5fbf5d50: [top + 24] <- 0x148a5a8f10d9 ;  0x148a5a8f10d9 <JSFunction debugs.(anonymous function) (sfi = 0x148a5a8c04e1)>  (input #5)
    0x7fff5fbf5d48: [top + 16] <- 0x148a5a8ed5a9 ;  0x148a5a8ed5a9 <String[4]: flow>  (input #6)
    0x7fff5fbf5d40: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5d38: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
[deoptimizing (eager): end 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)> @14 => node=17, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5da8, state=TOS_REGISTER, took 0.940 ms]
[removing optimized code for: 0x148a785b8711 <JSFunction flow (sfi = 0x148a5a8eedc9)>]
[deoptimizing (DEOPT eager): begin 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> (opt #28) @73, FP to SP delta: 112, caller sp: 0x7fff5fbf5cf8]
            ;;; deoptimize at <_stream_readable.js:1038:22> inlined at <_stream_readable.js:393:7>, wrong map
  reading input frame Readable.read => bytecode_offset=162, args=2, height=9; inputs:
      0: 0x148a5a8f2d31 ; [fp - 16] 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>
      1: 0x148a3803c679 ; [fp + 24] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      2: 0 ; (int) [fp - 32] 
      3: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      4: 0x148a3803d769 ; [fp - 56] 0x148a3803d769 <ReadableState map = 0x148a9c23f871>
      5: 0x148a9610a919 ; rdi 0x148a9610a919 <Number nan>
      6: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x00000000 ; (literal 10) 0
  translating interpreted frame Readable.read => bytecode_offset=162, height=72
    0x7fff5fbf5cf0: [top + 136] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #1)
    0x7fff5fbf5ce8: [top + 128] <- 0x00000000 ;  0  (input #2)
    -------------------------
    0x7fff5fbf5ce0: [top + 120] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf5cd8: [top + 112] <- 0x7fff5fbf5d10 ;  caller's fp
    0x7fff5fbf5cd0: [top + 104] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #3)
    0x7fff5fbf5cc8: [top + 96] <- 0x148a5a8f2d31 ;  function    0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>  (input #0)
    0x7fff5fbf5cc0: [top + 88] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5cb8: [top + 80] <- 0x148af3d65ea1 ;  bytecode array 0x148af3d65ea1 <BytecodeArray[502]>  (input #0)
    0x7fff5fbf5cb0: [top + 72] <- 0xd700000000 ;  bytecode offset @ 162
    -------------------------
    0x7fff5fbf5ca8: [top + 64] <- 0x148a3803d769 ;  0x148a3803d769 <ReadableState map = 0x148a9c23f871>  (input #4)
    0x7fff5fbf5ca0: [top + 56] <- 0x148a9610a919 ;  0x148a9610a919 <Number nan>  (input #5)
    0x7fff5fbf5c98: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5c90: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5c88: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5c80: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5c78: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5c70: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5c68: [top + 0] <- 0x00000000 ;  accumulator 0  (input #12)
[deoptimizing (eager): end 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> @73 => node=162, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5cf8, state=TOS_REGISTER, took 1.184 ms]
[removing optimized code for: 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>]
[deoptimizing (DEOPT eager): begin 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)> (opt #141) @27, FP to SP delta: 88, caller sp: 0x7fff5fbf5c58]
            ;;; deoptimize at <_stream_readable.js:1038:22>, wrong map
  reading input frame endReadable => bytecode_offset=0, args=2, height=7; inputs:
      0: 0x148a785b8831 ; [fp - 16] 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)>
      1: 0x148a89a82311 ; [fp + 24] 0x148a89a82311 <undefined>
      2: 0x148a3803c679 ; [fp + 16] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      3: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      4: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 5) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame endReadable => bytecode_offset=0, height=56
    0x7fff5fbf5c50: [top + 120] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5c48: [top + 112] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #2)
    -------------------------
    0x7fff5fbf5c40: [top + 104] <- 0x1ddcf1674ed2 ;  caller's pc
    0x7fff5fbf5c38: [top + 96] <- 0x7fff5fbf5c60 ;  caller's fp
    0x7fff5fbf5c30: [top + 88] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #3)
    0x7fff5fbf5c28: [top + 80] <- 0x148a785b8831 ;  function    0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)>  (input #0)
    0x7fff5fbf5c20: [top + 72] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5c18: [top + 64] <- 0x148a785f6399 ;  bytecode array 0x148a785f6399 <BytecodeArray[75]>  (input #0)
    0x7fff5fbf5c10: [top + 56] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbf5c08: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5c00: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5bf8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5bf0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5be8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5be0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5bd8: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
[deoptimizing (eager): end 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)> @27 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5c58, state=TOS_REGISTER, took 1.542 ms]
[removing optimized code for: 0x148a785b8831 <JSFunction endReadable (sfi = 0x148a5a8ef1b1)>]
[deoptimizing (DEOPT eager): begin 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)> (opt #58) @5, FP to SP delta: 16, caller sp: 0x7fff5fbf6130]
            ;;; deoptimize at <_stream_readable.js:1055:21>, wrong map
  reading input frame endReadableNT => bytecode_offset=25, args=3, height=4; inputs:
      0: 0x148a785b8879 ; [fp - 16] 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)>
      1: 0x148a89a82311 ; [fp + 32] 0x148a89a82311 <undefined>
      2: 0x148a3803d769 ; [fp + 24] 0x148a3803d769 <ReadableState map = 0x148a9c23f871>
      3: 0x148a3803c679 ; [fp + 16] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      4: 0x148a785b3b99 ; [fp - 8] 0x148a785b3b99 <FixedArray[38]>
      5: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a82421 ; (literal 2) 0x148a89a82421 <false>
  translating interpreted frame endReadableNT => bytecode_offset=25, height=32
    0x7fff5fbf6128: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf6120: [top + 96] <- 0x148a3803d769 ;  0x148a3803d769 <ReadableState map = 0x148a9c23f871>  (input #2)
    0x7fff5fbf6118: [top + 88] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #3)
    -------------------------
    0x7fff5fbf6110: [top + 80] <- 0x1ddcf17230cc ;  caller's pc
    0x7fff5fbf6108: [top + 72] <- 0x7fff5fbf6178 ;  caller's fp
    0x7fff5fbf6100: [top + 64] <- 0x148a785b3b99 ;  context    0x148a785b3b99 <FixedArray[38]>  (input #4)
    0x7fff5fbf60f8: [top + 56] <- 0x148a785b8879 ;  function    0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)>  (input #0)
    0x7fff5fbf60f0: [top + 48] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf60e8: [top + 40] <- 0x148a785f8b59 ;  bytecode array 0x148a785f8b59 <BytecodeArray[46]>  (input #0)
    0x7fff5fbf60e0: [top + 32] <- 0x4e00000000 ;  bytecode offset @ 25
    -------------------------
    0x7fff5fbf60d8: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf60d0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf60c8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf60c0: [top + 0] <- 0x148a89a82421 ;  accumulator 0x148a89a82421 <false>  (input #8)
[deoptimizing (eager): end 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)> @5 => node=25, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6130, state=TOS_REGISTER, took 0.870 ms]
[removing optimized code for: 0x148a785b8879 <JSFunction endReadableNT (sfi = 0x148a5a8ef279)>]
[deoptimizing (DEOPT eager): begin 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> (opt #36) @13, FP to SP delta: 80, caller sp: 0x7fff5fbf6048]
            ;;; deoptimize at <events.js:512:13> inlined at <events.js:109:21>, wrong map
  reading input frame emitNone => bytecode_offset=40, args=4, height=6; inputs:
      0: 0x148a53ba93e9 ; [fp - 16] 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)>
      1: 0x148a89a82311 ; [fp + 40] 0x148a89a82311 <undefined>
      2: 0x148a38041761 ; rdx 0x148a38041761 <JSArray[3]>
      3: 0x148a89a82421 ; [fp + 24] 0x148a89a82421 <false>
      4: 0x148a3803c679 ; [fp + 16] 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      5: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      6: 0x300000000 ; [fp - 24] 3
      7: 0x148a9610adc9 ; r8 0x148a9610adc9 <JSArray[3]>
      8: 0x00000000 ; (literal 6) 0
      9: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x300000000 ; [fp - 24] 3
  translating interpreted frame emitNone => bytecode_offset=40, height=48
    0x7fff5fbf6040: [top + 128] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf6038: [top + 120] <- 0x148a38041761 ;  0x148a38041761 <JSArray[3]>  (input #2)
    0x7fff5fbf6030: [top + 112] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #3)
    0x7fff5fbf6028: [top + 104] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #4)
    -------------------------
    0x7fff5fbf6020: [top + 96] <- 0x1ddcf1723e0d ;  caller's pc
    0x7fff5fbf6018: [top + 88] <- 0x7fff5fbf6090 ;  caller's fp
    0x7fff5fbf6010: [top + 80] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #5)
    0x7fff5fbf6008: [top + 72] <- 0x148a53ba93e9 ;  function    0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)>  (input #0)
    0x7fff5fbf6000: [top + 64] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5ff8: [top + 56] <- 0x148af3d6c501 ;  bytecode array 0x148af3d6c501 <BytecodeArray[75]>  (input #0)
    0x7fff5fbf5ff0: [top + 48] <- 0x5d00000000 ;  bytecode offset @ 40
    -------------------------
    0x7fff5fbf5fe8: [top + 40] <- 0x300000000 ;  3  (input #6)
    0x7fff5fbf5fe0: [top + 32] <- 0x148a9610adc9 ;  0x148a9610adc9 <JSArray[3]>  (input #7)
    0x7fff5fbf5fd8: [top + 24] <- 0x00000000 ;  0  (input #8)
    0x7fff5fbf5fd0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5fc8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5fc0: [top + 0] <- 0x300000000 ;  accumulator 3  (input #11)
[deoptimizing (eager): end 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> @13 => node=40, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6048, state=TOS_REGISTER, took 0.791 ms]
[removing optimized code for: 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)>]
[deoptimizing (DEOPT eager): begin 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)> (opt #63) @2, FP to SP delta: 96, caller sp: 0x7fff5fbf5fb0]
            ;;; deoptimize at <events.js:309:17>, wrong map
  reading input frame onceWrapper => bytecode_offset=3, args=1, height=12; inputs:
      0: 0x148a53ba9509 ; [fp - 16] 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)>
      1: 0x148a380716e9 ; r9 0x148a380716e9 <Object map = 0x148a9c23fe49>
      2: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      3: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      4: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a9610ae39 ; rdi 0x148a9610ae39 <Arguments map = 0x148a9c206611>
      7: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame onceWrapper => bytecode_offset=3, height=96
    0x7fff5fbf5fa8: [top + 152] <- 0x148a380716e9 ;  0x148a380716e9 <Object map = 0x148a9c23fe49>  (input #1)
    -------------------------
    0x7fff5fbf5fa0: [top + 144] <- 0x1ddcf16745fc ;  caller's pc
    0x7fff5fbf5f98: [top + 136] <- 0x7fff5fbf5fb8 ;  caller's fp
    0x7fff5fbf5f90: [top + 128] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #2)
    0x7fff5fbf5f88: [top + 120] <- 0x148a53ba9509 ;  function    0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)>  (input #0)
    0x7fff5fbf5f80: [top + 112] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5f78: [top + 104] <- 0x148a785bfb09 ;  bytecode array 0x148a785bfb09 <BytecodeArray[311]>  (input #0)
    0x7fff5fbf5f70: [top + 96] <- 0x3800000000 ;  bytecode offset @ 3
    -------------------------
    0x7fff5fbf5f68: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #3)
    0x7fff5fbf5f60: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5f58: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5f50: [top + 64] <- 0x148a9610ae39 ;  0x148a9610ae39 <Arguments map = 0x148a9c206611>  (input #6)
    0x7fff5fbf5f48: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5f40: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5f38: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5f30: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5f28: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5f20: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5f18: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5f10: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
[deoptimizing (eager): end 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)> @2 => node=3, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5fb0, state=TOS_REGISTER, took 1.386 ms]
[removing optimized code for: 0x148a53ba9509 <JSFunction onceWrapper (sfi = 0x148ad6ebb8e1)>]
[deoptimizing (DEOPT soft): begin 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)> (opt #39) @1, FP to SP delta: 16, caller sp: 0x7fff5fbf5d88]
            ;;; deoptimize at <_stream_duplex.js:86:50>, Insufficient type feedback for generic named access
  reading input frame get => bytecode_offset=27, args=1, height=2; inputs:
      0: 0x148a7548c5b1 ; [fp - 16] 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)>
      1: 0x148a3803c679 ; rax 0x148a3803c679 <Socket map = 0x148a9c24ee39>
      2: 0x148a7548c641 ; [fp - 8] 0x148a7548c641 <FixedArray[9]>
      3: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
      4: 0x148a89a825a9 ; (literal 1) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame get => bytecode_offset=27, height=16
    0x7fff5fbf5d80: [top + 72] <- 0x148a3803c679 ;  0x148a3803c679 <Socket map = 0x148a9c24ee39>  (input #1)
    -------------------------
    0x7fff5fbf5d78: [top + 64] <- 0x1ddcf164ee2f ;  caller's pc
    0x7fff5fbf5d70: [top + 56] <- 0x7fff5fbf5dc8 ;  caller's fp
    0x7fff5fbf5d68: [top + 48] <- 0x148a7548c641 ;  context    0x148a7548c641 <FixedArray[9]>  (input #2)
    0x7fff5fbf5d60: [top + 40] <- 0x148a7548c5b1 ;  function    0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)>  (input #0)
    0x7fff5fbf5d58: [top + 32] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5d50: [top + 24] <- 0x148af3d7ab81 ;  bytecode array 0x148af3d7ab81 <BytecodeArray[38]>  (input #0)
    0x7fff5fbf5d48: [top + 16] <- 0x5000000000 ;  bytecode offset @ 27
    -------------------------
    0x7fff5fbf5d40: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #3)
    0x7fff5fbf5d38: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
[deoptimizing (soft): end 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)> @1 => node=27, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5d88, state=TOS_REGISTER, took 0.736 ms]
[removing optimized code for: 0x148a7548c5b1 <JSFunction get (sfi = 0x148a5a8f73f1)>]
[deoptimizing (DEOPT soft): begin 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)> (opt #37) @66, FP to SP delta: 96, caller sp: 0x7fff5fbf6118]
            ;;; deoptimize at <net.js:774:12>, Insufficient type feedback for generic named access
  reading input frame Socket._writeGeneric => bytecode_offset=510, args=5, height=15; inputs:
      0: 0x148a53be1ee9 ; [fp - 16] 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)>
      1: 0x148ae82ba9e9 ; rbx 0x148ae82ba9e9 <Socket map = 0x148a9c24ee39>
      2: 0x148a89a823b1 ; [fp + 40] 0x148a89a823b1 <true>
      3: 0x148a9613fb21 ; [fp + 32] 0x148a9613fb21 <JSArray[5]>
      4: 0x148a89a82471 ; [fp + 24] 0x148a89a82471 <String[0]: >
      5: 0x148ae82bc5f1 ; [fp + 16] 0x148ae82bc5f1 <JSBoundFunction (BoundTargetFunction 0x148a3800ced9)>
      6: 0x148a9613fba1 ; [fp - 24] 0x148a9613fba1 <FixedArray[8]>
      7: 0x148a9613fc01 ; rdx 0x148a9613fc01 <WriteWrap map = 0x148a9c252641>
      8: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x7e00000000 ; rax 126
     16: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     17: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     18: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     19: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     20: 0x148a89a825a9 ; (literal 7) 0x148a89a825a9 <Odd Oddball: optimized_out>
     21: 0x00000000 ; (literal 31) 0
  translating interpreted frame Socket._writeGeneric => bytecode_offset=510, height=120
    0x7fff5fbf6110: [top + 208] <- 0x148ae82ba9e9 ;  0x148ae82ba9e9 <Socket map = 0x148a9c24ee39>  (input #1)
    0x7fff5fbf6108: [top + 200] <- 0x148a89a823b1 ;  0x148a89a823b1 <true>  (input #2)
    0x7fff5fbf6100: [top + 192] <- 0x148a9613fb21 ;  0x148a9613fb21 <JSArray[5]>  (input #3)
    0x7fff5fbf60f8: [top + 184] <- 0x148a89a82471 ;  0x148a89a82471 <String[0]: >  (input #4)
    0x7fff5fbf60f0: [top + 176] <- 0x148ae82bc5f1 ;  0x148ae82bc5f1 <JSBoundFunction (BoundTargetFunction 0x148a3800ced9)>  (input #5)
    -------------------------
    0x7fff5fbf60e8: [top + 168] <- 0x1ddcf17674e9 ;  caller's pc
    0x7fff5fbf60e0: [top + 160] <- 0x7fff5fbf6168 ;  caller's fp
    0x7fff5fbf60d8: [top + 152] <- 0x148a9613fba1 ;  context    0x148a9613fba1 <FixedArray[8]>  (input #6)
    0x7fff5fbf60d0: [top + 144] <- 0x148a53be1ee9 ;  function    0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)>  (input #0)
    0x7fff5fbf60c8: [top + 136] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf60c0: [top + 128] <- 0x148a785c2d11 ;  bytecode array 0x148a785c2d11 <BytecodeArray[532]>  (input #0)
    0x7fff5fbf60b8: [top + 120] <- 0x23300000000 ;  bytecode offset @ 510
    -------------------------
    0x7fff5fbf60b0: [top + 112] <- 0x148a9613fc01 ;  0x148a9613fc01 <WriteWrap map = 0x148a9c252641>  (input #7)
    0x7fff5fbf60a8: [top + 104] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf60a0: [top + 96] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf6098: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf6090: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6088: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf6080: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf6078: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf6070: [top + 48] <- 0x7e00000000 ;  126  (input #15)
    0x7fff5fbf6068: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf6060: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf6058: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #18)
    0x7fff5fbf6050: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf6048: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf6040: [top + 0] <- 0x00000000 ;  accumulator 0  (input #21)
[deoptimizing (soft): end 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)> @66 => node=510, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf6118, state=TOS_REGISTER, took 2.475 ms]
[removing optimized code for: 0x148a53be1ee9 <JSFunction Socket._writeGeneric (sfi = 0x148a53bcd4e1)>]
[deoptimizing (DEOPT soft): begin 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> (opt #26) @3, FP to SP delta: 72, caller sp: 0x7fff5fbf60a0]
            ;;; deoptimize at <events.js:163:34>, Insufficient type feedback for generic named access
  reading input frame emit => bytecode_offset=29, args=2, height=23; inputs:
      0: 0x148ad6ebd719 ; [fp - 16] 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>
      1: 0x148a38043b51 ; [fp + 24] 0x148a38043b51 <Socket map = 0x148a9c24ee39>
      2: 0x148a89ab80a1 ; [fp + 16] 0x148a89ab80a1 <String[5]: error>
      3: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      4: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a82311 ; (literal 4) 0x148a89a82311 <undefined>
      6: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a38043e29 ; rbx 0x148a38043e29 <Object map = 0x148a9c206669>
     11: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a82421 ; (literal 5) 0x148a89a82421 <false>
     13: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148ada00b591 ; [fp - 40] 0x148ada00b591 <Arguments map = 0x148a9c206611>
     17: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     18: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     19: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     20: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     21: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     22: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     23: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     24: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     25: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
     26: 0x148a89a825a9 ; (literal 3) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame emit => bytecode_offset=29, height=184
    0x7fff5fbf6098: [top + 248] <- 0x148a38043b51 ;  0x148a38043b51 <Socket map = 0x148a9c24ee39>  (input #1)
    0x7fff5fbf6090: [top + 240] <- 0x148a89ab80a1 ;  0x148a89ab80a1 <String[5]: error>  (input #2)
    -------------------------
    0x7fff5fbf6088: [top + 232] <- 0x1ddcf1585d1b ;  caller's pc
    0x7fff5fbf6080: [top + 224] <- 0x7fff5fbf60b8 ;  caller's fp
    0x7fff5fbf6078: [top + 216] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #3)
    0x7fff5fbf6070: [top + 208] <- 0x148ad6ebd719 ;  function    0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>  (input #0)
    0x7fff5fbf6068: [top + 200] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf6060: [top + 192] <- 0x148a5a8b2711 ;  bytecode array 0x148a5a8b2711 <BytecodeArray[498]>  (input #0)
    0x7fff5fbf6058: [top + 184] <- 0x5200000000 ;  bytecode offset @ 29
    -------------------------
    0x7fff5fbf6050: [top + 176] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf6048: [top + 168] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #5)
    0x7fff5fbf6040: [top + 160] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf6038: [top + 152] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf6030: [top + 144] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf6028: [top + 136] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf6020: [top + 128] <- 0x148a38043e29 ;  0x148a38043e29 <Object map = 0x148a9c206669>  (input #10)
    0x7fff5fbf6018: [top + 120] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6010: [top + 112] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #12)
    0x7fff5fbf6008: [top + 104] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf6000: [top + 96] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5ff8: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5ff0: [top + 80] <- 0x148ada00b591 ;  0x148ada00b591 <Arguments map = 0x148a9c206611>  (input #16)
    0x7fff5fbf5fe8: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf5fe0: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #18)
    0x7fff5fbf5fd8: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf5fd0: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf5fc8: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #21)
    0x7fff5fbf5fc0: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #22)
    0x7fff5fbf5fb8: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #23)
    0x7fff5fbf5fb0: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #24)
    0x7fff5fbf5fa8: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #25)
    0x7fff5fbf5fa0: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #26)
[deoptimizing (soft): end 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> @3 => node=29, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf60a0, state=TOS_REGISTER, took 2.199 ms]
[removing optimized code for: 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>]
[deoptimizing (DEOPT eager): begin 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> (opt #32) @35, FP to SP delta: 64, caller sp: 0x7fff5fbf5e38]
            ;;; deoptimize at <events.js:370:9>, wrong map
  reading input frame removeListener => bytecode_offset=70, args=3, height=12; inputs:
      0: 0x148ad6ebd881 ; [fp - 16] 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>
      1: 0x148a38043b51 ; rdx 0x148a38043b51 <Socket map = 0x148a9c24ee39>
      2: 0x148a89ab80a1 ; [fp + 24] 0x148a89ab80a1 <String[5]: error>
      3: 0x148a38011979 ; [fp + 16] 0x148a38011979 <JSFunction socketOnError (sfi = 0x148af3d1abf9)>
      4: 0x148a2b515ff9 ; [fp - 8] 0x148a2b515ff9 <FixedArray[21]>
      5: 0x148a38011979 ; rdi 0x148a38011979 <JSFunction socketOnError (sfi = 0x148af3d1abf9)>
      6: 0x148a38043e29 ; [fp - 40] 0x148a38043e29 <Object map = 0x148a9c206669>
      7: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame removeListener => bytecode_offset=70, height=96
    0x7fff5fbf5e30: [top + 168] <- 0x148a38043b51 ;  0x148a38043b51 <Socket map = 0x148a9c24ee39>  (input #1)
    0x7fff5fbf5e28: [top + 160] <- 0x148a89ab80a1 ;  0x148a89ab80a1 <String[5]: error>  (input #2)
    0x7fff5fbf5e20: [top + 152] <- 0x148a38011979 ;  0x148a38011979 <JSFunction socketOnError (sfi = 0x148af3d1abf9)>  (input #3)
    -------------------------
    0x7fff5fbf5e18: [top + 144] <- 0x1ddcf167474a ;  caller's pc
    0x7fff5fbf5e10: [top + 136] <- 0x7fff5fbf5e40 ;  caller's fp
    0x7fff5fbf5e08: [top + 128] <- 0x148a2b515ff9 ;  context    0x148a2b515ff9 <FixedArray[21]>  (input #4)
    0x7fff5fbf5e00: [top + 120] <- 0x148ad6ebd881 ;  function    0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>  (input #0)
    0x7fff5fbf5df8: [top + 112] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5df0: [top + 104] <- 0x148af3d68179 ;  bytecode array 0x148af3d68179 <BytecodeArray[364]>  (input #0)
    0x7fff5fbf5de8: [top + 96] <- 0x7b00000000 ;  bytecode offset @ 70
    -------------------------
    0x7fff5fbf5de0: [top + 88] <- 0x148a38011979 ;  0x148a38011979 <JSFunction socketOnError (sfi = 0x148af3d1abf9)>  (input #5)
    0x7fff5fbf5dd8: [top + 80] <- 0x148a38043e29 ;  0x148a38043e29 <Object map = 0x148a9c206669>  (input #6)
    0x7fff5fbf5dd0: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5dc8: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5dc0: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5db8: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5db0: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5da8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5da0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5d98: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5d90: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5d88: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (eager): end 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> @35 => node=70, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5e38, state=TOS_REGISTER, took 1.945 ms]
[removing optimized code for: 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
[deoptimizing (DEOPT eager): begin 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)> (opt #98) @1, FP to SP delta: 56, caller sp: 0x7fff5fbfe5b0]
            ;;; deoptimize at <net.js:856:21>, wrong map
  reading input frame afterWrite => bytecode_offset=0, args=5, height=7; inputs:
      0: 0x148a3800a641 ; [fp - 16] 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)>
      1: 0x148a9482fd51 ; [fp + 48] 0x148a9482fd51 <WriteWrap map = 0x148a9c2519e1>
      2: 0x00000000 ; [fp + 40] 0
      3: 0x148a38012891 ; rbx 0x148a38012891 <TCP map = 0x148a9c251a91>
      4: 0x148a9482fd51 ; [fp + 24] 0x148a9482fd51 <WriteWrap map = 0x148a9c2519e1>
      5: 0x148a89a82311 ; [fp + 16] 0x148a89a82311 <undefined>
      6: 0x148a754be1c1 ; [fp - 8] 0x148a754be1c1 <FixedArray[64]>
      7: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 10) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame afterWrite => bytecode_offset=0, height=56
    0x7fff5fbfe5a8: [top + 144] <- 0x148a9482fd51 ;  0x148a9482fd51 <WriteWrap map = 0x148a9c2519e1>  (input #1)
    0x7fff5fbfe5a0: [top + 136] <- 0x00000000 ;  0  (input #2)
    0x7fff5fbfe598: [top + 128] <- 0x148a38012891 ;  0x148a38012891 <TCP map = 0x148a9c251a91>  (input #3)
    0x7fff5fbfe590: [top + 120] <- 0x148a9482fd51 ;  0x148a9482fd51 <WriteWrap map = 0x148a9c2519e1>  (input #4)
    0x7fff5fbfe588: [top + 112] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #5)
    -------------------------
    0x7fff5fbfe580: [top + 104] <- 0x1ddcf163e479 ;  caller's pc
    0x7fff5fbfe578: [top + 96] <- 0x7fff5fbfe5c8 ;  caller's fp
    0x7fff5fbfe570: [top + 88] <- 0x148a754be1c1 ;  context    0x148a754be1c1 <FixedArray[64]>  (input #6)
    0x7fff5fbfe568: [top + 80] <- 0x148a3800a641 ;  function    0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)>  (input #0)
    0x7fff5fbfe560: [top + 72] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbfe558: [top + 64] <- 0x148ae82e8249 ;  bytecode array 0x148ae82e8249 <BytecodeArray[216]>  (input #0)
    0x7fff5fbfe550: [top + 56] <- 0x3500000000 ;  bytecode offset @ 0
    -------------------------
    0x7fff5fbfe548: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbfe540: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbfe538: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbfe530: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbfe528: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbfe520: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbfe518: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
[deoptimizing (eager): end 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)> @1 => node=0, pc=0x1ddcf16402c0, caller sp=0x7fff5fbfe5b0, state=TOS_REGISTER, took 1.352 ms]
[removing optimized code for: 0x148a3800a641 <JSFunction afterWrite (sfi = 0x148a53bcb5a1)>]
[deoptimizing (DEOPT soft): begin 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)> (opt #76) @2, FP to SP delta: 32, caller sp: 0x7fff5fbfe2e8]
            ;;; deoptimize at <_http_common.js:208:14>, Insufficient type feedback for generic named access
  reading input frame freeParser => bytecode_offset=24, args=4, height=3; inputs:
      0: 0x148a38007c61 ; [fp - 16] 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)>
      1: 0x148a89a82311 ; [fp + 40] 0x148a89a82311 <undefined>
      2: 0x148a380128b1 ; rax 0x148a380128b1 <HTTPParser map = 0x148a9c24c7b9>
      3: 0x148a89a82201 ; [fp + 24] 0x148a89a82201 <null>
      4: 0x148a3805b139 ; [fp + 16] 0x148a3805b139 <Socket map = 0x148a9c24ee39>
      5: 0x148a75484d41 ; [fp - 8] 0x148a75484d41 <FixedArray[23]>
      6: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 4) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame freeParser => bytecode_offset=24, height=24
    0x7fff5fbfe2e0: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbfe2d8: [top + 96] <- 0x148a380128b1 ;  0x148a380128b1 <HTTPParser map = 0x148a9c24c7b9>  (input #2)
    0x7fff5fbfe2d0: [top + 88] <- 0x148a89a82201 ;  0x148a89a82201 <null>  (input #3)
    0x7fff5fbfe2c8: [top + 80] <- 0x148a3805b139 ;  0x148a3805b139 <Socket map = 0x148a9c24ee39>  (input #4)
    -------------------------
    0x7fff5fbfe2c0: [top + 72] <- 0x1ddcf16748a5 ;  caller's pc
    0x7fff5fbfe2b8: [top + 64] <- 0x7fff5fbfe320 ;  caller's fp
    0x7fff5fbfe2b0: [top + 56] <- 0x148a75484d41 ;  context    0x148a75484d41 <FixedArray[23]>  (input #5)
    0x7fff5fbfe2a8: [top + 48] <- 0x148a38007c61 ;  function    0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)>  (input #0)
    0x7fff5fbfe2a0: [top + 40] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbfe298: [top + 32] <- 0x148a785f51f1 ;  bytecode array 0x148a785f51f1 <BytecodeArray[159]>  (input #0)
    0x7fff5fbfe290: [top + 24] <- 0x4d00000000 ;  bytecode offset @ 24
    -------------------------
    0x7fff5fbfe288: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbfe280: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbfe278: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
[deoptimizing (soft): end 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)> @2 => node=24, pc=0x1ddcf16402c0, caller sp=0x7fff5fbfe2e8, state=TOS_REGISTER, took 0.890 ms]
[removing optimized code for: 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)>]
[marking dependent code 0x1ddcf1730381 (opt #37) for deoptimization, reason: field-owner]
[marking dependent code 0x1ddcf16d2a01 (opt #143) for deoptimization, reason: field-owner]
[deoptimize marked code in all contexts]
[deoptimizer unlinked: socketOnWrap / 148a754f33f9]
[deoptimizing (DEOPT soft): begin 0x148a94835fd1 <JSFunction (sfi = 0x148a785f0621)> (opt #191) @0, FP to SP delta: 56, caller sp: 0x7fff5fbfdf90]
            ;;; deoptimize at </Users/matteo/Temp/proxy-bench/node_modules/pump/index.js:70:25>, Insufficient type feedback for generic named access
  reading input frame  => bytecode_offset=23, args=2, height=4; inputs:
      0: 0x148a94835fd1 ; [fp - 16] 0x148a94835fd1 <JSFunction (sfi = 0x148a785f0621)>
      1: 0x148a2b50bf29 ; [fp + 24] 0x148a2b50bf29 <JSGlobal Object>
      2: 0x148ada016949 ; rdx 0x148ada016949 <Error map = 0x148a9c251619>
      3: 0x148a94835f99 ; [fp - 8] 0x148a94835f99 <FixedArray[5]>
      4: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a94835639 ; rax 0x148a94835639 <JSArray[2]>
      6: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 2) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame  => bytecode_offset=23, height=32
    0x7fff5fbfdf88: [top + 96] <- 0x148a2b50bf29 ;  0x148a2b50bf29 <JSGlobal Object>  (input #1)
    0x7fff5fbfdf80: [top + 88] <- 0x148ada016949 ;  0x148ada016949 <Error map = 0x148a9c251619>  (input #2)
    -------------------------
    0x7fff5fbfdf78: [top + 80] <- 0x1ddcf16dfde3 ;  caller's pc
    0x7fff5fbfdf70: [top + 72] <- 0x7fff5fbfdfb8 ;  caller's fp
    0x7fff5fbfdf68: [top + 64] <- 0x148a94835f99 ;  context    0x148a94835f99 <FixedArray[5]>  (input #3)
    0x7fff5fbfdf60: [top + 56] <- 0x148a94835fd1 ;  function    0x148a94835fd1 <JSFunction (sfi = 0x148a785f0621)>  (input #0)
    0x7fff5fbfdf58: [top + 48] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbfdf50: [top + 40] <- 0x148a785f9991 ;  bytecode array 0x148a785f9991 <BytecodeArray[87]>  (input #0)
    0x7fff5fbfdf48: [top + 32] <- 0x4c00000000 ;  bytecode offset @ 23
    -------------------------
    0x7fff5fbfdf40: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbfdf38: [top + 16] <- 0x148a94835639 ;  0x148a94835639 <JSArray[2]>  (input #5)
    0x7fff5fbfdf30: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbfdf28: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
[deoptimizing (soft): end 0x148a94835fd1 <JSFunction (sfi = 0x148a785f0621)> @0 => node=23, pc=0x1ddcf16402c0, caller sp=0x7fff5fbfdf90, state=TOS_REGISTER, took 1.267 ms]
[removing optimized code for: 0x148a94835fd1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ada005721 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ada0022c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9837cc31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a983797d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98376371 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98372f11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9836fab1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9836c651 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a983689c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98364891 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98363f71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98360b11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9835d6b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9835a251 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98356df1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98353991 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98350531 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9834d0d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98349c71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98345fe1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98342511 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98341bf1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9833e791 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9833b331 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98337ed1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98334a71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98331611 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9832e1b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9832ad51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a983278f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98323c61 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98320191 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9831f871 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9831c411 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98318fb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98315b51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a983126f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9830f291 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9830be31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a983089d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a98305571 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519ff6e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519fbc11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519fb2f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519e3c61 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519e0801 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519dd3a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519d9f41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519d6ae1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519d3681 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519d0221 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519ccdc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519c9131 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519c5661 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519c4d41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519c18e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519be481 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519bb021 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519b7bc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519b4761 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519b1301 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519adea1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519aaa41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519a6db1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519a32e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519a29c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a5199f561 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a5199c101 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a51998ca1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a51995841 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519923e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a5198ef81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a5198bb21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a519886c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add86e5f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add86ab21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add86a201 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add866da1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add863941 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add8604e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add85d081 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add859c21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add8567c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add853361 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add84ff01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add84c271 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add8487a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add847e81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add8307f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add82d391 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add829f31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add826ad1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add823671 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add820211 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add808b81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148add805721 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336ff7e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336fbd11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336fb3f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336e3d61 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336e0901 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336dd4a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336da041 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336d6be1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336d3781 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336d0321 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336ccec1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336c9231 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336c5761 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336c4e41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336c19e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336be581 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336bb121 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336b7cc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336a0631 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3369d1d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a33699d71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a336960e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a33692611 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a33691cf1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3368e221 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3368d901 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3368a4a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a33687041 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a33683be1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676fe569 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676fb109 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676f7ca9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676e0619 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676dd1b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676d9529 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676d5a59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676d5139 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676d1cd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676ce879 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676cb419 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676c7fb9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676c4b59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676c16f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676be299 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676bae39 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676b71a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676b36d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676b2db9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676af959 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676ac4f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676a9099 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676a5c39 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676a27d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a6769f379 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a6769bf19 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a67698289 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676947b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a67693e99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676903c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a6768faa9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a6768c649 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a676891e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a67685d89 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a67682929 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9487d259 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94879df9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94876999 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94872d09 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9486f239 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9486e919 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9486ae49 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9486a529 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9484cd81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94849921 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a948464c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94843061 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9483fc01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9483c7a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94839341 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a948356b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94831be1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a948312c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9482d7f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9482ced1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94829a71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94826611 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a948231b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9481fd51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9481c8f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94819491 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94816031 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a948123a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9480e8d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9480dfb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9480a4e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a94809bc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9f40b839 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9f4083d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9f404f79 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad7f8f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad7c499 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad79039 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad75bd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad71f49 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad6e479 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad6db59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad6a089 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad69769 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad66309 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad62ea9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad5fa49 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad5c5e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad59189 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad55d29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad528c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad4f469 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad4b7d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad47d09 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad473e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad43f89 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad40b29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad3d6c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad3a269 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad36e09 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad339a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad30549 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad2c8b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad28de9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad284c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad249f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad240d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad20c79 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad1d819 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad1a3b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad16f59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad13af9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad10699 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad0d239 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad09dd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad06149 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148adad02679 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d27fb41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d27c6e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d279281 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d275e21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d2729c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d26f561 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d26c101 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d268ca1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d265011 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d261541 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d260c21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d25d151 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d25c831 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d2593d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d255f71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d252b11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d24f6b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d24c251 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d248df1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d245991 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d241d01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d23e231 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d23d911 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d239e41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d239521 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d221e91 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d21ea31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d21b5d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d218171 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d214d11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d2118b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d20e451 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d20a7c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d206cf1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d2063d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a2d202901 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9617fdc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96168731 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a961652d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96161e71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9615ea11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9615b5b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96158151 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96154cf1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9613cd81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a961392b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96138991 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96134ec1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a961345a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96130b41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96130221 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9612c751 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9612be31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96128361 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96127a41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96123f71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96123651 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9611fb81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9611f261 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9611b791 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9611ae71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a961173a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a96116a81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487c8e29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487c8509 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487c4a39 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487c4119 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487c0649 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487bfd29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487bc259 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487bb939 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487b7e69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487b7549 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487b3a79 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487b3159 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487af689 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487aed69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487ab299 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487aa979 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487a6ea9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a487a6589 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4878e889 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4878df69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386b7a39 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386b7119 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386b3649 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386b2d29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386af259 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386ae939 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386aae69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386aa549 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386a6a79 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386a6159 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386a2689 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386a1d69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3869e299 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3869d979 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38699ea9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38699589 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38695ab9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38695199 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a386916c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38690da9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3868d349 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a3868ca29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38688f59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38688639 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38684b69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a38684249 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e7e561 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e7dc41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e7a171 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e79851 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e75d81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e75461 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e71991 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e71071 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e6d5a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e6cc81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e691b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e68891 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e64dc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e644a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e4c811 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e4bef1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e48421 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e47b01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e44031 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e43711 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e3fc41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e3f321 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e3b851 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e3af31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e37461 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e36b41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e33071 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e32751 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e2ec81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e2e361 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e2a891 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e29f71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e264a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e25b81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e22121 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e21801 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e1dd31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e1d411 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e19941 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e19021 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e15551 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e14c31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e11161 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e10841 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e0cd71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e0c451 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e08981 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e08061 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e04591 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a95e03c71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc7df71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc7d651 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc79b81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc79261 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc615d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc60cb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc5d1e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc5c8c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc58df1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc584d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc54a01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc540e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc50611 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc4fcf1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc4c221 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc4b901 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc47e31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc47511 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc43a41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc43121 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc3f651 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc3ed31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc3b261 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc3a941 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc22cb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc22391 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc1e8c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc1dfa1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc1a4d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc19bb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc160e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a1cc157c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818fb8a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818faf81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818f74b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818f6b91 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818f30c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818f27a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818eecd1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818ee3b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818ea8e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818e9fc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818d22c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818d19a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818cdf41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818cd621 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818c9b51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818c9231 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818c5761 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818c4e41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818c1371 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818c0a51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818bcf81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818bc661 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818b8b91 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818b8271 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818b47a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818b3e81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818b03b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818afa91 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818abfc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818ab6a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818a7bd1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a818a72b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e64fc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e646a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e60bd1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e602b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e5c7e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e5bec1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e583f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e57ad1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e54001 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e536e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e4fc11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e4f2f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e4b821 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e4af01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e47431 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e46b11 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e43041 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e42721 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e3ec51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e3e331 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e3a861 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e39f41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e36471 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e35b51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e32081 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e31761 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e2dd01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e2d3e1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e29911 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e28ff1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e25521 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e24c01 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e21131 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e20811 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e1cd41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e1c421 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e18951 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e18031 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e14561 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e13c41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e10171 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e0f851 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e0bd81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a79e0b461 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cf14c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cf0ba9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ced149 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cec829 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ce8d59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ce8439 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ce4969 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ce4049 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ce0579 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cdfc59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cdc189 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cdb869 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cd7d99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cd7479 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cd39a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cd3089 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ccf5b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ccec99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16ccb1c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cca8a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cc6dd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16cc64b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16c83fc9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a16c836a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464fd959 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464fd039 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464f9569 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464f8c49 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464f5179 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464f4859 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464f0d89 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464f0469 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464ec999 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464ec079 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464d4379 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464d3a59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464cff89 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464cf669 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464cbb99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464cb279 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464c77a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464c6e89 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4649afc9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4649a6a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a46496bd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464962b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464927e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a46491ec9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4648e3f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4648dad9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a4648a009 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464896e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a46485c19 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a464852f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a47f5c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a47eca1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a47b1d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a47a8b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a476de1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4764c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4729f1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4720d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a46e671 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a46dd51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a46a281 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a469961 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4657b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a464e99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4613c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a460aa9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a45cfd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a45c6b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a458be9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4582c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4547f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a453ed9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a450409 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a44fae9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a44c019 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a44b6f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a447c29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a447309 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a42f679 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a42ed59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a42b289 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a42a969 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a426e99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a426579 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a422aa9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a422189 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a41e6b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a41dd99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a41a2c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4199a9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a415ed9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4155b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a411ae9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4111c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a40d6f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a40cdd9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a409309 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a9a4089e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace76eb29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace76e209 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace76a739 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace769e19 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace766349 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace765a29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace761f59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace761639 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace75db69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace75d249 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace759779 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace758e59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7480f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148a85202641 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739519 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace749809 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7394d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a0c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739489 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace749851 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739441 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace749899 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7393f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a2b9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7393b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a271 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739369 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b469 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739321 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b541 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7392d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b4f9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73b6e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b4b1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73d161 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b589 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73d119 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a6a1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73d0d1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a731 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73d089 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a659 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73d041 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a6e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73cff9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b079 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73cfb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b0c1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73cf69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74aa91 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73cf21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74af59 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73b731 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b421 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73adb9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a851 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ad71 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74afa1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ad29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b031 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ace1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74afe9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ac99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74aad9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ac51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b349 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ac09 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b3d9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73abc1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b391 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73ab79 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74ab21 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73b779 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74ab69 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739c29 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b229 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739be1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74b271 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739b99 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace749fa1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739b51 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace749fe9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739b09 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74a031 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739ac1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74abb1 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739a79 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace749e81 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739a31 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7495c9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace7399e9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74ac41 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace73b809 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace74abf9 <JSFunction (sfi = 0x148a785f0621)>]
[removing optimized code for: 0x148ace739d91 <JSFunction (sfi = 0x148a785f0621)>]
[evicting entry from optimizing code feedback slot (notify deoptimized) for 0x148a94835fd1 <JSFunction (sfi = 0x148a785f0621)>]
[deoptimizing (DEOPT soft): begin 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)> (opt #44) @2, FP to SP delta: 104, caller sp: 0x7fff5fbfe198]
            ;;; deoptimize at <_stream_writable.js:430:5>, Insufficient type feedback for call
  reading input frame onwrite => bytecode_offset=50, args=3, height=12; inputs:
      0: 0x148a3800ced9 ; [fp - 16] 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)>
      1: 0x148a89a82311 ; [fp + 32] 0x148a89a82311 <undefined>
      2: 0x148ae82ba9e9 ; rbx 0x148ae82ba9e9 <Socket map = 0x148a9c24ee39>
      3: 0x148ada021aa9 ; r11 0x148ada021aa9 <Error map = 0x148a9c251721>
      4: 0x148a7548b169 ; [fp - 8] 0x148a7548b169 <FixedArray[27]>
      5: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a38011041 ; (literal 13) 0x148a38011041 <JSFunction onwriteError (sfi = 0x148a5a8f42f9)>
     10: 0x148ae82ba9e9 ; rbx 0x148ae82ba9e9 <Socket map = 0x148a9c24ee39>
     11: 0x148ae82bb1c1 ; rdi 0x148ae82bb1c1 <WritableState map = 0x148a9c2375d1>
     12: 0x148a89a82421 ; rax 0x148a89a82421 <false>
     13: 0x148ada021aa9 ; r11 0x148ada021aa9 <Error map = 0x148a9c251721>
     14: 0x148af2827f01 ; r8 0x148af2827f01 <JSBoundFunction (BoundTargetFunction 0x148a3800cfb9)>
     15: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 9) 0x148a89a825a9 <Odd Oddball: optimized_out>
  translating interpreted frame onwrite => bytecode_offset=50, height=96
    0x7fff5fbfe190: [top + 168] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbfe188: [top + 160] <- 0x148ae82ba9e9 ;  0x148ae82ba9e9 <Socket map = 0x148a9c24ee39>  (input #2)
    0x7fff5fbfe180: [top + 152] <- 0x148ada021aa9 ;  0x148ada021aa9 <Error map = 0x148a9c251721>  (input #3)
    -------------------------
    0x7fff5fbfe178: [top + 144] <- 0x1ddcf1674ed2 ;  caller's pc
    0x7fff5fbfe170: [top + 136] <- 0x7fff5fbfe1a0 ;  caller's fp
    0x7fff5fbfe168: [top + 128] <- 0x148a7548b169 ;  context    0x148a7548b169 <FixedArray[27]>  (input #4)
    0x7fff5fbfe160: [top + 120] <- 0x148a3800ced9 ;  function    0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)>  (input #0)
    0x7fff5fbfe158: [top + 112] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbfe150: [top + 104] <- 0x148a785de019 ;  bytecode array 0x148a785de019 <BytecodeArray[157]>  (input #0)
    0x7fff5fbfe148: [top + 96] <- 0x6700000000 ;  bytecode offset @ 50
    -------------------------
    0x7fff5fbfe140: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbfe138: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbfe130: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbfe128: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbfe120: [top + 56] <- 0x148a38011041 ;  0x148a38011041 <JSFunction onwriteError (sfi = 0x148a5a8f42f9)>  (input #9)
    0x7fff5fbfe118: [top + 48] <- 0x148ae82ba9e9 ;  0x148ae82ba9e9 <Socket map = 0x148a9c24ee39>  (input #10)
    0x7fff5fbfe110: [top + 40] <- 0x148ae82bb1c1 ;  0x148ae82bb1c1 <WritableState map = 0x148a9c2375d1>  (input #11)
    0x7fff5fbfe108: [top + 32] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #12)
    0x7fff5fbfe100: [top + 24] <- 0x148ada021aa9 ;  0x148ada021aa9 <Error map = 0x148a9c251721>  (input #13)
    0x7fff5fbfe0f8: [top + 16] <- 0x148af2827f01 ;  0x148af2827f01 <JSBoundFunction (BoundTargetFunction 0x148a3800cfb9)>  (input #14)
    0x7fff5fbfe0f0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbfe0e8: [top + 0] <- 0x148a89a825a9 ;  accumulator 0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (soft): end 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)> @2 => node=50, pc=0x1ddcf16402c0, caller sp=0x7fff5fbfe198, state=TOS_REGISTER, took 1.553 ms]
[removing optimized code for: 0x148a3800ced9 <JSFunction onwrite (sfi = 0x148a5a8f4489)>]
[marking 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 56/67 (83%), generic ICs: 1/67 (1%)]
[compiling method 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> using TurboFan]
Candidates for inlining (size=8):
  #117:JSCall, frequency: 1.00015
  - size:90, name: howMuchToRead
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #217:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #172:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.342325
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.327078
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining howMuchToRead into Readable.read
Candidates for inlining (size=7):
  #28:JSCall, frequency: 1
  - size:0, name: debugs.(anonymous function)
  #217:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #172:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.342325
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.327078
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=6):
  #217:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #172:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.342325
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.327078
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=5):
  #172:JSCall, frequency: 0.573816
  - size:0, name: debugs.(anonymous function)
  #258:JSCall, frequency: 0.342325
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.327078
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=4):
  #258:JSCall, frequency: 0.342325
  - size:0, name: debugs.(anonymous function)
  #148:JSCall, frequency: 0.327078
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=3):
  #148:JSCall, frequency: 0.327078
  - size:40, name: endReadable
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining endReadable into Readable.read
Candidates for inlining (size=3):
  #786:JSCall, frequency: 0.327117
  - size:167, name: nextTick
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining nextTick into Readable.read
Candidates for inlining (size=5):
  #1083:JSCall, frequency: 0.327208
  - size:42, name: push
  #1071:JSConstruct, frequency: 0.327208
  - size:34, name: TickObject
  #1056:JSCall, frequency: 0.327208
  - size:27, name: initTriggerId
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining push into Readable.read
Candidates for inlining (size=4):
  #1071:JSConstruct, frequency: 0.327208
  - size:34, name: TickObject
  #1056:JSCall, frequency: 0.327208
  - size:27, name: initTriggerId
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining TickObject into Readable.read
Candidates for inlining (size=3):
  #1056:JSCall, frequency: 0.327208
  - size:27, name: initTriggerId
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining initTriggerId into Readable.read
Candidates for inlining (size=2):
  #320:JSCall, frequency: 0.231491
  - size:68, name: Socket._read
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
Inlining Socket._read into Readable.read
Candidates for inlining (size=2):
  #1567:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
  #282:JSCall, frequency: 0.231491
  - size:0, name: debugs.(anonymous function)
[marking 0x148a38011739 <JSFunction updateOutgoingData (sfi = 0x148af3d1a5b9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/9 (44%), generic ICs: 0/9 (0%)]
[compiling method 0x148a38011739 <JSFunction updateOutgoingData (sfi = 0x148af3d1a5b9)> using TurboFan]
[optimizing 0x148a38011739 <JSFunction updateOutgoingData (sfi = 0x148af3d1a5b9)> - took 0.062, 0.522, 0.014 ms]
[completed optimizing 0x148a38011739 <JSFunction updateOutgoingData (sfi = 0x148af3d1a5b9)>]
[optimizing 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)> - took 3.564, 6.606, 0.071 ms]
[completed optimizing 0x148a5a8f2d31 <JSFunction Readable.read (sfi = 0x148a5a8ef8b9)>]
[marking 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 18/54 (33%), generic ICs: 3/54 (5%)]
[compiling method 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> using TurboFan]
Candidates for inlining (size=1):
  #149:JSCall, frequency: 0.184835
  - size:52, name: emitOne
Inlining emitOne into emit
[optimizing 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)> - took 0.413, 2.765, 0.034 ms]
[completed optimizing 0x148ad6ebd719 <JSFunction emit (sfi = 0x148ad6ebc0b1)>]
[marking 0x148a2b54feb1 <JSFunction getStdout (sfi = 0x148a5a8a62c9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 2/8 (25%), generic ICs: 0/8 (0%)]
[compiling method 0x148a2b54feb1 <JSFunction getStdout (sfi = 0x148a5a8a62c9)> using TurboFan]
[optimizing 0x148a2b54feb1 <JSFunction getStdout (sfi = 0x148a5a8a62c9)> - took 0.108, 0.671, 0.016 ms]
[completed optimizing 0x148a2b54feb1 <JSFunction getStdout (sfi = 0x148a5a8a62c9)>]
[marking 0x148a53ba9599 <JSFunction arrayClone (sfi = 0x148ad6ebbb39)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x148a53ba9599 <JSFunction arrayClone (sfi = 0x148ad6ebbb39)> using TurboFan]
[optimizing 0x148a53ba9599 <JSFunction arrayClone (sfi = 0x148ad6ebbb39)> - took 0.121, 0.802, 0.042 ms]
[completed optimizing 0x148a53ba9599 <JSFunction arrayClone (sfi = 0x148ad6ebbb39)>]
[marking 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/9 (100%), generic ICs: 0/9 (0%)]
[compiling method 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> using TurboFan]
Candidates for inlining (size=1):
  #37:JSCall, frequency: 0.641098
  - size:33, name: arrayClone
Inlining arrayClone into emitNone
[optimizing 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)> - took 0.276, 1.563, 0.052 ms]
[completed optimizing 0x148a53ba93e9 <JSFunction emitNone (sfi = 0x148ad6ebb431)>]
[deoptimizing (DEOPT soft): begin 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)> (opt #96) @95, FP to SP delta: 80, caller sp: 0x7fff5fbf5e50]
            ;;; deoptimize at <_http_common.js:217:14> inlined at <_http_client.js:486:5>, Insufficient type feedback for generic named access
  reading input frame socketOnData => bytecode_offset=518, args=2, height=15; inputs:
      0: 0x148a38007f41 ; [fp - 16] 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)>
      1: 0x148aaf231661 ; rdx 0x148aaf231661 <Socket map = 0x148a9c251511>
      2: 0x148a549f51b9 ; [fp + 16] 0x148a549f51b9 <Uint8Array map = 0x148a9c250491>
      3: 0x148a754ec269 ; [fp - 8] 0x148a754ec269 <FixedArray[37]>
      4: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      5: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      6: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      7: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      9: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     10: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     11: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     12: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     13: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     14: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     15: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     16: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     17: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
     18: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
  reading input frame freeParser => bytecode_offset=100, args=4, height=3; inputs:
      0: 0x148a38007c61 ; (literal 16) 0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)>
      1: 0x148a89a82311 ; (literal 10) 0x148a89a82311 <undefined>
      2: 0x148a2d382481 ; [fp - 32] 0x148a2d382481 <HTTPParser map = 0x148a9c24c7b9>
      3: 0x148a213c21f9 ; rbx 0x148a213c21f9 <ClientRequest map = 0x148a9c2505f1>
      4: 0x148aaf231661 ; rdx 0x148aaf231661 <Socket map = 0x148a9c251511>
      5: 0x148a75484d41 ; (literal 17) 0x148a75484d41 <FixedArray[23]>
      6: 0 ; rax (bool)
      7: 0x148a89a825a9 ; (literal 6) 0x148a89a825a9 <Odd Oddball: optimized_out>
      8: 0x148a89a82421 ; (literal 27) 0x148a89a82421 <false>
  translating interpreted frame socketOnData => bytecode_offset=518, height=112
    0x7fff5fbf5e48: [top + 176] <- 0x148aaf231661 ;  0x148aaf231661 <Socket map = 0x148a9c251511>  (input #1)
    0x7fff5fbf5e40: [top + 168] <- 0x148a549f51b9 ;  0x148a549f51b9 <Uint8Array map = 0x148a9c250491>  (input #2)
    -------------------------
    0x7fff5fbf5e38: [top + 160] <- 0x1ddcf16e25a9 ;  caller's pc
    0x7fff5fbf5e30: [top + 152] <- 0x7fff5fbf5ea8 ;  caller's fp
    0x7fff5fbf5e28: [top + 144] <- 0x148a754ec269 ;  context    0x148a754ec269 <FixedArray[37]>  (input #3)
    0x7fff5fbf5e20: [top + 136] <- 0x148a38007f41 ;  function    0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)>  (input #0)
    0x7fff5fbf5e18: [top + 128] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5e10: [top + 120] <- 0x148a785eed29 ;  bytecode array 0x148a785eed29 <BytecodeArray[525]>  (input #0)
    0x7fff5fbf5e08: [top + 112] <- 0x23b00000000 ;  bytecode offset @ 518
    -------------------------
    0x7fff5fbf5e00: [top + 104] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5df8: [top + 96] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5df0: [top + 88] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5de8: [top + 80] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5de0: [top + 72] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5dd8: [top + 64] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5dd0: [top + 56] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5dc8: [top + 48] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5dc0: [top + 40] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5db8: [top + 32] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5db0: [top + 24] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5da8: [top + 16] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5da0: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5d98: [top + 0] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #17)
  translating interpreted frame freeParser => bytecode_offset=100, height=24
    0x7fff5fbf5d90: [top + 104] <- 0x148a89a82311 ;  0x148a89a82311 <undefined>  (input #1)
    0x7fff5fbf5d88: [top + 96] <- 0x148a2d382481 ;  0x148a2d382481 <HTTPParser map = 0x148a9c24c7b9>  (input #2)
    0x7fff5fbf5d80: [top + 88] <- 0x148a213c21f9 ;  0x148a213c21f9 <ClientRequest map = 0x148a9c2505f1>  (input #3)
    0x7fff5fbf5d78: [top + 80] <- 0x148aaf231661 ;  0x148aaf231661 <Socket map = 0x148a9c251511>  (input #4)
    -------------------------
    0x7fff5fbf5d70: [top + 72] <- 0x1ddcf16401e0 ;  caller's pc
    0x7fff5fbf5d68: [top + 64] <- 0x7fff5fbf5e30 ;  caller's fp
    0x7fff5fbf5d60: [top + 56] <- 0x148a75484d41 ;  context    0x148a75484d41 <FixedArray[23]>  (input #5)
    0x7fff5fbf5d58: [top + 48] <- 0x148a38007c61 ;  function    0x148a38007c61 <JSFunction freeParser (sfi = 0x148af3d0de21)>  (input #0)
    0x7fff5fbf5d50: [top + 40] <- 0x148a89a82311 ;  new_target  0x148a89a82311 <undefined>  (input #0)
    0x7fff5fbf5d48: [top + 32] <- 0x148a785f51f1 ;  bytecode array 0x148a785f51f1 <BytecodeArray[159]>  (input #0)
    0x7fff5fbf5d40: [top + 24] <- 0x9900000000 ;  bytecode offset @ 100
    -------------------------
    0x7fff5fbf5d38: [top + 16] <- 0x148a89a82421 ;  0x148a89a82421 <false>  (input #6)
    0x7fff5fbf5d30: [top + 8] <- 0x148a89a825a9 ;  0x148a89a825a9 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5d28: [top + 0] <- 0x148a89a82421 ;  accumulator 0x148a89a82421 <false>  (input #8)
[deoptimizing (soft): end 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)> @95 => node=100, pc=0x1ddcf16402c0, caller sp=0x7fff5fbf5e50, state=TOS_REGISTER, took 2.438 ms]
[removing optimized code for: 0x148a38007f41 <JSFunction socketOnData (sfi = 0x148af3d09db9)>]
[marking 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 35/49 (71%), generic ICs: 8/49 (16%)]
[compiling method 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> using TurboFan]
Candidates for inlining (size=1):
  #263:JSCall, frequency: 0.277789
  - size:54, name: spliceOne
Inlining spliceOne into removeListener
[optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)> - took 0.488, 3.087, 0.039 ms]
[completed optimizing 0x148ad6ebd881 <JSFunction removeListener (sfi = 0x148ad6ebc499)>]
